<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='ClimateChange_ChangeDashboard' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Geographical Level' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Abidjan&quot;'>
        <calculation class='tableau' formula='&quot;Abidjan&quot;' />
        <members />
      </column>
    </datasource>
    <datasource caption='Cleaned_GlobalLandTemperaturesByCity (1).csv (Multiple Connections)' inline='true' name='federated.04jk0jx14u5cz714ztea80tc0g8v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCity (1)' name='textscan.099l24u188s53s18wfngr0ob8rrf'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCity (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCountry' name='textscan.0irt5p50pmycxo19th5a80rzc33c'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCountry.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByMajorCity' name='textscan.1c2gr4t1f6cdu317fe8nt1y8zqzh'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByMajorCity.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByState' name='textscan.10cknzg0wwym9i1duq04j1k7wrvh'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByState.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalTemperatures' name='textscan.0csp8a20xb8s7419nuxf30rtretw'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalTemperatures.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='dt' ordinal='0' />
            <column datatype='real' name='AverageTemperature' ordinal='1' />
            <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='LandAverageTemperature' ordinal='1' />
              <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
              <column datatype='real' name='LandMaxTemperature' ordinal='3' />
              <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
              <column datatype='real' name='LandMinTemperature' ordinal='5' />
              <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
              <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
              <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperature]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperature]' />
          <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[City]' />
          <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[City]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[Country]' />
          <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Country]' />
          <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperatureUncertainty]' />
          <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperature]' />
          <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperatureUncertainty]' />
          <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperature]' />
          <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperatureUncertainty]' />
          <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperature]' />
          <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperatureUncertainty]' />
          <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperature]' />
          <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Latitude]' />
          <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Latitude]' />
          <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Longitude]' />
          <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Longitude]' />
          <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[State]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[dt]' />
          <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv].[dt]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperature</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperatureUncertainty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
      <column caption='Extreme High temp' datatype='string' name='[Calculation_424675427247538176]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [AverageTemperature] &gt;= {PERCENTILE([AverageTemperature], 0.9)}&#10;THEN &apos;High&apos;&#10;ELSEIF [AverageTemperature] &lt;= {PERCENTILE([AverageTemperature], 0.1)}&#10;THEN &apos;Low&apos;&#10;ELSE &apos;Normal&apos;&#10;END' />
      </column>
      <column caption='Average City Temperature' datatype='real' name='[Calculation_47498961307119617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([AverageTemperature])' />
      </column>
      <column caption='City (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Land And Ocean Average Temperature Uncertainty' datatype='real' name='[LandAndOceanAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land And Ocean Average Temperature' datatype='real' name='[LandAndOceanAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature Uncertainty' datatype='real' name='[LandAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature Uncertainty' datatype='real' name='[LandMaxTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature' datatype='real' name='[LandMaxTemperature]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature Uncertainty' datatype='real' name='[LandMinTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature' datatype='real' name='[LandMinTemperature]' role='measure' type='quantitative' />
      <column caption='Latitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column caption='Longitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalTemperatures.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]' role='measure' type='quantitative' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByState.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' type='ordinal' />
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column-instance column='[AverageTemperature]' derivation='Avg' name='[avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Max' name='[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Max' name='[max:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Min' name='[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Min' name='[min:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_47498961307119617]' derivation='User' name='[usr:Calculation_47498961307119617:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, City' />
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/khushijani/Documents/My Tableau Repository/Datasources/Cleaned_GlobalLandTemperaturesByCity (1).csv (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/13/2024 05:00:28 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167' table='[Extract].[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96].[AverageTemperature]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[AverageTemperature]' />
            <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[City]' />
            <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[City]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96].[Country]' />
            <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[Country]' />
            <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandAndOceanAverageTemperatureUncertainty]' />
            <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandAndOceanAverageTemperature]' />
            <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandAverageTemperatureUncertainty]' />
            <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandAverageTemperature]' />
            <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandMaxTemperatureUncertainty]' />
            <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandMaxTemperature]' />
            <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandMinTemperatureUncertainty]' />
            <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[LandMinTemperature]' />
            <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[Latitude]' />
            <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[Latitude]' />
            <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[Longitude]' />
            <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[Longitude]' />
            <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96].[State]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96].[dt]' />
            <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167].[dt]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Cleaned_GlobalLandTemperaturesByCity (1).csv (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='9630087' timestamp-start='2024-04-13 05:00:18.447' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1992</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandAverageTemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandMaxTemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandMinTemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandMinTemperatureUncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandAndOceanAverageTemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</parent-name>
              <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>9</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3826</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>10</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>234664</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>11</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19376</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>12</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3461</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>13</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>14</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>16</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14964</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>17</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108881</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>18</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11569</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>19</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>20</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15402</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>21</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82281</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>22</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10885</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>23</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>24</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>25</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>26</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>27</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15905</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>28</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>185839</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>29</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17370</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>30</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>31</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#116985'>
              <bucket>&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[min:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[max:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[usr:Calculation_47498961307119617:qk]&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[avg:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='dt' />
        <field-sort-custom-order field='LandAverageTemperature' />
        <field-sort-custom-order field='LandAverageTemperatureUncertainty' />
        <field-sort-custom-order field='LandMaxTemperature' />
        <field-sort-custom-order field='LandMaxTemperatureUncertainty' />
        <field-sort-custom-order field='LandMinTemperature' />
        <field-sort-custom-order field='LandMinTemperatureUncertainty' />
        <field-sort-custom-order field='LandAndOceanAverageTemperature' />
        <field-sort-custom-order field='LandAndOceanAverageTemperatureUncertainty' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' id='Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7'>
            <properties context=''>
              <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByCountry.csv' id='Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F'>
            <properties context=''>
              <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109'>
            <properties context=''>
              <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByState.csv' id='Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96'>
            <properties context=''>
              <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalTemperatures.csv' id='Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167'>
            <properties context=''>
              <relation connection='textscan.0irt5p50pmycxo19th5a80rzc33c' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='LandAverageTemperature' ordinal='1' />
                  <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='real' name='LandMaxTemperature' ordinal='3' />
                  <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
                  <column datatype='real' name='LandMinTemperature' ordinal='5' />
                  <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
                  <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
                  <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167' table='[Extract].[Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[dt]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalTemperatures.csv_E77BAC3D3003400FA47AC2495EF16167' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_C0BE2C05162247B3B7AD2029D16CB3F7' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_7DA52F6DF4DB4A7B9DF904559520EB0F' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_F7878382D59748EB9C8E8F40E9F96109' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByState.csv_11EE357ADD0F484081341E7D27DE8C96' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Cleaned_GlobalTemperatures' inline='true' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_GlobalTemperatures' name='textscan.0otvmif1ec9fwf119h2r40uolu1c'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCity (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCountry' name='textscan.1fz5dt70q8ub8s1esgm3r1cdcxvj'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCountry.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByMajorCity' name='textscan.03ix4jm19qcr0m126v84z14uf62u'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByMajorCity.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByState' name='textscan.10xbs701xkeqpi1712pyl1clizb6'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByState.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCity' name='textscan.1cfovc91ucu48317a70gw1noif5h'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalTemperatures.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCity (1)' name='textscan.1meqp0f05638ln1497c6t1j3omp3'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCity (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='dt' ordinal='0' />
            <column datatype='real' name='AverageTemperature' ordinal='1' />
            <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='LandAverageTemperature' ordinal='1' />
              <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
              <column datatype='real' name='LandMaxTemperature' ordinal='3' />
              <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
              <column datatype='real' name='LandMinTemperature' ordinal='5' />
              <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
              <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
              <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperature]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperature]' />
          <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[City]' />
          <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[City]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[Country]' />
          <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Country]' />
          <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperatureUncertainty]' />
          <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperature]' />
          <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperatureUncertainty]' />
          <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperature]' />
          <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperatureUncertainty]' />
          <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperature]' />
          <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperatureUncertainty]' />
          <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperature]' />
          <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Latitude]' />
          <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Latitude]' />
          <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Longitude]' />
          <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Longitude]' />
          <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[State]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[dt]' />
          <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv].[dt]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperature</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperatureUncertainty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
      <column caption='Extreme high temperature' datatype='string' name='[Calculation_1537697853906792448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [AverageTemperature] &gt;= {PERCENTILE([AverageTemperature], 0.9)}&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF [AverageTemperature] &lt;= {PERCENTILE([AverageTemperature], 0.1)}&#13;&#10;THEN &apos;Low&apos;&#13;&#10;ELSE &apos;Normal&apos;&#13;&#10;END' />
      </column>
      <column caption='City (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Land And Ocean Average Temperature Uncertainty' datatype='real' name='[LandAndOceanAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land And Ocean Average Temperature' datatype='real' name='[LandAndOceanAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature Uncertainty' datatype='real' name='[LandAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature Uncertainty' datatype='real' name='[LandMaxTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature' datatype='real' name='[LandMaxTemperature]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature Uncertainty' datatype='real' name='[LandMinTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature' datatype='real' name='[LandMinTemperature]' role='measure' type='quantitative' />
      <column caption='Latitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column caption='Longitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalTemperatures.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' role='measure' type='quantitative' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByState.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' type='ordinal' />
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Avg' name='[avg:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperature]' derivation='Avg' name='[avg:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMinTemperature]' derivation='Avg' name='[avg:LandMinTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Max' name='[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Min' name='[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Min' name='[min:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Sum' name='[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Sum' name='[sum:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Sum' name='[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAndOceanAverageTemperature]' derivation='Sum' name='[sum:LandAndOceanAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAndOceanAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAndOceanAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Sum' name='[sum:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperature]' derivation='Sum' name='[sum:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperatureUncertainty]' derivation='Sum' name='[sum:LandMaxTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMinTemperature]' derivation='Sum' name='[sum:LandMinTemperature:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, City' />
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/khushijani/Documents/My Tableau Repository/Datasources/Cleaned_GlobalTemperatures.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/13/2024 05:01:03 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' table='[Extract].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B].[AverageTemperature]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[AverageTemperature]' />
            <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[City]' />
            <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[City]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B].[Country]' />
            <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[Country]' />
            <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAndOceanAverageTemperatureUncertainty]' />
            <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAndOceanAverageTemperature]' />
            <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAverageTemperatureUncertainty]' />
            <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAverageTemperature]' />
            <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMaxTemperatureUncertainty]' />
            <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMaxTemperature]' />
            <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMinTemperatureUncertainty]' />
            <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMinTemperature]' />
            <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[Latitude]' />
            <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[Latitude]' />
            <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[Longitude]' />
            <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[Longitude]' />
            <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B].[State]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B].[dt]' />
            <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[dt]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Cleaned_GlobalTemperatures' increment-value='%null%' refresh-type='create' rows-inserted='9630087' timestamp-start='2024-04-13 05:00:53.224' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1992</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAverageTemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMaxTemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMinTemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMinTemperatureUncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAndOceanAverageTemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>9</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3665</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>10</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>234389</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>11</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>12</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3448</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>13</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>14</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>16</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14862</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>17</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109918</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>18</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12010</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>19</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>20</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>16900</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>21</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>22</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12284</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>23</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>24</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>25</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>26</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>27</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>16601</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>28</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>168073</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>29</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17993</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>30</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>241</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>31</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[min:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCountry.csv_869AFE12C8D24CF6BA9E734EBB0ED32D:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandMaxTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[max:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[min:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandAndOceanAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandAverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByMajorCity.csv_8E7D620F87AC471B9D3C675656EAF40B:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByState.csv_CEA912870FFB486C8590C22F437F24D3:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandAndOceanAverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandMaxTemperature:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:LandMinTemperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:LandMaxTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:LandMinTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature:qk]:1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCity.csv_51EFAA0D412E42668043D0C68D027FA2:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' id='Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03'>
            <properties context=''>
              <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByCountry.csv' id='Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285'>
            <properties context=''>
              <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E'>
            <properties context=''>
              <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByState.csv' id='Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B'>
            <properties context=''>
              <relation connection='textscan.1meqp0f05638ln1497c6t1j3omp3' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalTemperatures.csv' id='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='LandAverageTemperature' ordinal='1' />
                  <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='real' name='LandMaxTemperature' ordinal='3' />
                  <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
                  <column datatype='real' name='LandMinTemperature' ordinal='5' />
                  <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
                  <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
                  <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' table='[Extract].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[dt]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_CF2FCEF752184E7AB7B6D37AAB51ED03' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_639B355C57E34740948AEC32EE50F285' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_7DACADA0B2EC4160B6F3196F182D803E' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByState.csv_4373F51D04A3445FA36F01AAD9D4306B' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Cleaned_GlobalTemperatures (3)' inline='true' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_GlobalTemperatures' name='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy 2)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCity (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCountry' name='textscan.1fz5dt70q8ub8s1esgm3r1cdcxvj (copy 2)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCountry.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByMajorCity' name='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByMajorCity.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByState' name='textscan.10xbs701xkeqpi1712pyl1clizb6 (copy 2)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByState.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCity' name='textscan.1cfovc91ucu48317a70gw1noif5h (copy 2)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalTemperatures.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='dt' ordinal='0' />
            <column datatype='real' name='AverageTemperature' ordinal='1' />
            <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy 2)' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='LandAverageTemperature' ordinal='1' />
              <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
              <column datatype='real' name='LandMaxTemperature' ordinal='3' />
              <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
              <column datatype='real' name='LandMinTemperature' ordinal='5' />
              <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
              <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
              <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperature]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperature]' />
          <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[City]' />
          <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[City]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[Country]' />
          <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Country]' />
          <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperatureUncertainty]' />
          <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperature]' />
          <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperatureUncertainty]' />
          <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperature]' />
          <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperatureUncertainty]' />
          <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperature]' />
          <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperatureUncertainty]' />
          <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperature]' />
          <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Latitude]' />
          <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Latitude]' />
          <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Longitude]' />
          <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Longitude]' />
          <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[State]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[dt]' />
          <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv].[dt]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperature</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperatureUncertainty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
      <column caption='Extreme high temperature' datatype='string' name='[Calculation_1537697853906792448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [AverageTemperature] &gt;= {PERCENTILE([AverageTemperature], 0.9)}&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF [AverageTemperature] &lt;= {PERCENTILE([AverageTemperature], 0.1)}&#13;&#10;THEN &apos;Low&apos;&#13;&#10;ELSE &apos;Normal&apos;&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_20266256724127745]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([dt])' />
      </column>
      <column aggregation='Sum' caption='Decade' datatype='integer' name='[Calculation_20266256724385794]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([Calculation_20266256724127745]/10)*10' />
      </column>
      <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_20266256741322755]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MONTH([dt])' />
      </column>
      <column caption='Country with Min Uncertainty' datatype='string' name='[Calculation_20266256748384262]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [AverageTemperatureUncertainty] = [Calculation_20266256744230916] THEN [Country] END' />
      </column>
      <column caption='Average Temp Uncertainty by Country' datatype='real' name='[Calculation_20266256781787145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Country]: AVG([AverageTemperatureUncertainty])}' />
      </column>
      <column caption='City (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Land And Ocean Average Temperature Uncertainty' datatype='real' name='[LandAndOceanAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land And Ocean Average Temperature' datatype='real' name='[LandAndOceanAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature Uncertainty' datatype='real' name='[LandAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature Uncertainty' datatype='real' name='[LandMaxTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature' datatype='real' name='[LandMaxTemperature]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature Uncertainty' datatype='real' name='[LandMinTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature' datatype='real' name='[LandMinTemperature]' role='measure' type='quantitative' />
      <column caption='Latitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column caption='Longitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalTemperatures.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' role='measure' type='quantitative' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByState.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' type='ordinal' />
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Avg' name='[avg:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperature]' derivation='Avg' name='[avg:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMinTemperature]' derivation='Avg' name='[avg:LandMinTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Min' name='[min:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[LandAndOceanAverageTemperature]' derivation='Sum' name='[sum:LandAndOceanAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAndOceanAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAndOceanAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Sum' name='[sum:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperature]' derivation='Sum' name='[sum:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperatureUncertainty]' derivation='Sum' name='[sum:LandMaxTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMinTemperature]' derivation='Sum' name='[sum:LandMinTemperature:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, City' />
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/khushijani/Documents/My Tableau Repository/Datasources/Cleaned_GlobalTemperatures (3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/13/2024 05:03:02 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' table='[Extract].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE].[AverageTemperature]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[AverageTemperature]' />
            <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[City]' />
            <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[City]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE].[Country]' />
            <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[Country]' />
            <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAndOceanAverageTemperatureUncertainty]' />
            <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAndOceanAverageTemperature]' />
            <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAverageTemperatureUncertainty]' />
            <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAverageTemperature]' />
            <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMaxTemperatureUncertainty]' />
            <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMaxTemperature]' />
            <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMinTemperatureUncertainty]' />
            <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMinTemperature]' />
            <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[Latitude]' />
            <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[Latitude]' />
            <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[Longitude]' />
            <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[Longitude]' />
            <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE].[State]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE].[dt]' />
            <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[dt]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Cleaned_GlobalTemperatures (3)' increment-value='%null%' refresh-type='create' rows-inserted='9630087' timestamp-start='2024-04-13 05:02:51.574' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1992</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAverageTemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMaxTemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMinTemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMinTemperatureUncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAndOceanAverageTemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>9</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3858</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>10</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>236578</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>11</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18598</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>12</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3461</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>13</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>14</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1239</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>16</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15845</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>17</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108135</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>18</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12593</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>19</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>20</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15194</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>21</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76765</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>22</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10965</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>23</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>24</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>25</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>26</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>27</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15151</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>28</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>183412</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>29</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16191</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>30</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>241</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>31</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[attr:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[min:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[min:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCountry.csv_869AFE12C8D24CF6BA9E734EBB0ED32D:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandMaxTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[max:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[min:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandAndOceanAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandAverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByMajorCity.csv_8E7D620F87AC471B9D3C675656EAF40B:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByState.csv_CEA912870FFB486C8590C22F437F24D3:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandAndOceanAverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandMaxTemperature:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:LandMinTemperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:LandMaxTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:LandMinTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperature:qk]:1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCity.csv_51EFAA0D412E42668043D0C68D027FA2:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[sum:AverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' id='Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE'>
            <properties context=''>
              <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByCountry.csv' id='Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62'>
            <properties context=''>
              <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E'>
            <properties context=''>
              <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByState.csv' id='Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE'>
            <properties context=''>
              <relation connection='textscan.03ix4jm19qcr0m126v84z14uf62u (copy 2)' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalTemperatures.csv' id='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy 2)' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='LandAverageTemperature' ordinal='1' />
                  <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='real' name='LandMaxTemperature' ordinal='3' />
                  <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
                  <column datatype='real' name='LandMinTemperature' ordinal='5' />
                  <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
                  <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
                  <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' table='[Extract].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[dt]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_3D0EDB1D17E34D6DB1B519A031C743FE' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_9CA05E2F58B041F09954826DF2CD5E62' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_08BF3EE1BFF94FFB9501E9DBAEE3B15E' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByState.csv_C5BF137B14764CBA946887817E4B5ECE' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Cleaned_GlobalTemperatures (2)' inline='true' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_GlobalTemperatures' name='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCity (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCountry' name='textscan.1fz5dt70q8ub8s1esgm3r1cdcxvj (copy)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCountry.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByMajorCity' name='textscan.03ix4jm19qcr0m126v84z14uf62u (copy)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByState.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByState' name='textscan.10xbs701xkeqpi1712pyl1clizb6 (copy)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByMajorCity.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Cleaned_GlobalLandTemperaturesByCity' name='textscan.1cfovc91ucu48317a70gw1noif5h (copy)'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalTemperatures.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='dt' ordinal='0' />
            <column datatype='real' name='AverageTemperature' ordinal='1' />
            <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='LandAverageTemperature' ordinal='1' />
              <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
              <column datatype='real' name='LandMaxTemperature' ordinal='3' />
              <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
              <column datatype='real' name='LandMinTemperature' ordinal='5' />
              <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
              <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
              <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperature]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperature]' />
          <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[City]' />
          <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[City]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[Country]' />
          <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Country]' />
          <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperatureUncertainty]' />
          <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperature]' />
          <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperatureUncertainty]' />
          <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperature]' />
          <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperatureUncertainty]' />
          <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperature]' />
          <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperatureUncertainty]' />
          <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperature]' />
          <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Latitude]' />
          <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Latitude]' />
          <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Longitude]' />
          <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Longitude]' />
          <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[State]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[dt]' />
          <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv].[dt]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperature</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperatureUncertainty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
      <column caption='Extreme high temperature' datatype='string' name='[Calculation_1537697853906792448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [AverageTemperature] &gt;= {PERCENTILE([AverageTemperature], 0.9)}&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF [AverageTemperature] &lt;= {PERCENTILE([AverageTemperature], 0.1)}&#13;&#10;THEN &apos;Low&apos;&#13;&#10;ELSE &apos;Normal&apos;&#13;&#10;END' />
      </column>
      <column caption='City (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Land And Ocean Average Temperature Uncertainty' datatype='real' name='[LandAndOceanAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land And Ocean Average Temperature' datatype='real' name='[LandAndOceanAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature Uncertainty' datatype='real' name='[LandAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature Uncertainty' datatype='real' name='[LandMaxTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature' datatype='real' name='[LandMaxTemperature]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature Uncertainty' datatype='real' name='[LandMinTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature' datatype='real' name='[LandMinTemperature]' role='measure' type='quantitative' />
      <column caption='Latitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column caption='Longitude (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalTemperatures.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' role='measure' type='quantitative' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByState.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' type='ordinal' />
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Attribute' name='[attr:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Avg' name='[avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Avg' name='[avg:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperature]' derivation='Avg' name='[avg:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMinTemperature]' derivation='Avg' name='[avg:LandMinTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Max' name='[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Max' name='[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Max' name='[max:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Max' name='[max:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Min' name='[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Min' name='[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Min' name='[min:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Min' name='[min:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Min' name='[min:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='None' name='[none:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Sum' name='[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Sum' name='[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Sum' name='[sum:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Sum' name='[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Sum' name='[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAndOceanAverageTemperature]' derivation='Sum' name='[sum:LandAndOceanAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAndOceanAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAndOceanAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperature]' derivation='Sum' name='[sum:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperature]' derivation='Sum' name='[sum:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMaxTemperatureUncertainty]' derivation='Sum' name='[sum:LandMaxTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LandMinTemperature]' derivation='Sum' name='[sum:LandMinTemperature:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, City' />
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/khushijani/Documents/My Tableau Repository/Datasources/Cleaned_GlobalTemperatures (2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/13/2024 05:02:29 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' table='[Extract].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93].[AverageTemperature]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[AverageTemperature]' />
            <map key='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[City]' />
            <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[City]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93].[Country]' />
            <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[Country]' />
            <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAndOceanAverageTemperatureUncertainty]' />
            <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAndOceanAverageTemperature]' />
            <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAverageTemperatureUncertainty]' />
            <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandAverageTemperature]' />
            <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMaxTemperatureUncertainty]' />
            <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMaxTemperature]' />
            <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMinTemperatureUncertainty]' />
            <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[LandMinTemperature]' />
            <map key='[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[Latitude]' />
            <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[Latitude]' />
            <map key='[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[Longitude]' />
            <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[Longitude]' />
            <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93].[State]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93].[dt]' />
            <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA].[dt]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Cleaned_GlobalTemperatures (2)' increment-value='%null%' refresh-type='create' rows-inserted='9630087' timestamp-start='2024-04-13 05:02:19.863' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1992</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAverageTemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMaxTemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMinTemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandMinTemperatureUncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAndOceanAverageTemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</parent-name>
              <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>9</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3907</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>10</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>234199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>11</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18801</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>12</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3474</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>13</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>14</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>16</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15067</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>17</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113723</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>18</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13167</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>19</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>20</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>16434</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>21</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76857</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>22</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10459</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>23</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>24</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>25</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>26</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>27</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15990</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>28</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>171669</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>29</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18537</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>30</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>241</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>31</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[max:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[min:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCountry.csv_869AFE12C8D24CF6BA9E734EBB0ED32D:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[min:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandMaxTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[max:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[min:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandAndOceanAverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandAverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[attr:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByMajorCity.csv_8E7D620F87AC471B9D3C675656EAF40B:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByState.csv_CEA912870FFB486C8590C22F437F24D3:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandAndOceanAverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandMaxTemperature:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:LandMinTemperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:LandMaxTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity.csv1):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:LandMinTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperature:qk]:1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCity.csv_51EFAA0D412E42668043D0C68D027FA2:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[sum:AverageTemperatureUncertainty:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' id='Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByCountry.csv' id='Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByState.csv' id='Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalTemperatures.csv' id='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA'>
            <properties context=''>
              <relation connection='textscan.0otvmif1ec9fwf119h2r40uolu1c (copy)' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='LandAverageTemperature' ordinal='1' />
                  <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='real' name='LandMaxTemperature' ordinal='3' />
                  <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
                  <column datatype='real' name='LandMinTemperature' ordinal='5' />
                  <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
                  <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
                  <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' table='[Extract].[Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[dt]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalTemperatures.csv_C68A6889C83C491D81EAD07DC14E5DBA' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_20428B39A88B43FDBA6A7720771252EC' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_53DCA753BAE442128653932F2E6E641C' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_27B00EB0678149DD9B60C71525D9A3CC' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByState.csv_E71770FEB1174A39A138DFB01AD9CB93' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Cleaned_GlobalTemperatures+' inline='true' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_GlobalTemperatures' name='textscan.0pfejd70uhhdb615rlv1z0bcw4sc'>
            <connection class='textscan' directory='/Users/khushijani/Downloads/Archive 4' filename='Cleaned_GlobalLandTemperaturesByCity (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='dt' ordinal='0' />
            <column datatype='real' name='AverageTemperature' ordinal='1' />
            <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='LandAverageTemperature' ordinal='1' />
              <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
              <column datatype='real' name='LandMaxTemperature' ordinal='3' />
              <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
              <column datatype='real' name='LandMinTemperature' ordinal='5' />
              <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
              <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
              <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='dt' ordinal='0' />
              <column datatype='real' name='AverageTemperature' ordinal='1' />
              <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Latitude' ordinal='5' />
              <column datatype='string' name='Longitude' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperature]' />
          <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperature]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperatureUncertainty]' />
          <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[AverageTemperature]' />
          <map key='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[City]' />
          <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[City]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Country]' />
          <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[Country]' />
          <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[Country]' />
          <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperatureUncertainty]' />
          <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAndOceanAverageTemperature]' />
          <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperatureUncertainty]' />
          <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandAverageTemperature]' />
          <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperatureUncertainty]' />
          <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMaxTemperature]' />
          <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperatureUncertainty]' />
          <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv].[LandMinTemperature]' />
          <map key='[Latitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Latitude]' />
          <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Latitude]' />
          <map key='[Longitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[Longitude]' />
          <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[Longitude]' />
          <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[State]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv].[dt]' />
          <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv].[dt]' />
          <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv].[dt]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMaxTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMaxTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperature</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandMinTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandMinTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandMinTemperatureUncertainty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalTemperatures.csv]</parent-name>
            <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
            <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
      <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
      <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
      <column caption='TemparatureDisplay' datatype='real' name='[Calculation_1532349831838113792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;  WHEN [City (Cleaned_GlobalLandTemperaturesByCity (1).csv)] THEN [AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]&#13;&#10;  WHEN [Country] THEN [AverageTemperature]&#13;&#10;  WHEN [City] THEN [AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]&#13;&#10;  WHEN [State] THEN [AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]&#13;&#10;END' />
      </column>
      <column caption='Numeric Latitude' datatype='real' name='[Calculation_1532349831899140099]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(&#13;&#10;  IF CONTAINS([Latitude], &apos;N&apos;) THEN &#13;&#10;    REPLACE([Latitude], &apos;N&apos;, &apos;&apos;) &#13;&#10;  ELSE &#13;&#10;    REPLACE([Latitude], &apos;S&apos;, &apos;&apos;) &#13;&#10;  END&#13;&#10;)' />
      </column>
      <column caption='Numeric Longitude' datatype='real' name='[Calculation_1532349831899500548]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(&#13;&#10;  IF CONTAINS([Longitude], &apos;E&apos;) THEN &#13;&#10;    REPLACE([Longitude], &apos;E&apos;, &apos;&apos;) &#13;&#10;  ELSE &#13;&#10;    REPLACE([Longitude], &apos;W&apos;, &apos;&apos;) &#13;&#10;  END&#13;&#10;)' />
      </column>
      <column caption='Temperature Variability' datatype='real' name='[Calculation_1532349831899979781]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [City]: MAX([AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)])}' />
      </column>
      <column caption='City Avg Field' datatype='real' name='[Calculation_922956504821166084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([AverageTemperature])' />
      </column>
      <column caption='Major City Avg Temp' datatype='real' name='[Calculation_922956504821485573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([AverageTemperature])' />
      </column>
      <column caption='State Avg Temp' datatype='real' name='[Calculation_922956504821686278]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([AverageTemperature])' />
      </column>
      <column caption='Country Avg Temp' datatype='real' name='[Calculation_922956504821854215]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([AverageTemperature])' />
      </column>
      <column caption='Temperature of Decade start' datatype='real' name='[Calculation_922956505582383113]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]) %10 = 0 THEN [AverageTemperature] END' />
      </column>
      <column caption='Temperature of Decade End' datatype='real' name='[Calculation_922956505584214026]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]) % 10 = 9 THEN [AverageTemperature] END' />
      </column>
      <column caption='Decades' datatype='string' name='[Calculation_922956505584885771]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(INT(YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)])/10)*10)' />
      </column>
      <column caption='Temperature change' datatype='real' name='[Calculation_922956505585229836]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_922956505584214026]) - AVG([Calculation_922956505582383113])' />
      </column>
      <column caption='City (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Land And Ocean Average Temperature Uncertainty' datatype='real' name='[LandAndOceanAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land And Ocean Average Temperature' datatype='real' name='[LandAndOceanAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature Uncertainty' datatype='real' name='[LandAverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature Uncertainty' datatype='real' name='[LandMaxTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Max Temperature' datatype='real' name='[LandMaxTemperature]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature Uncertainty' datatype='real' name='[LandMinTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Land Min Temperature' datatype='real' name='[LandMinTemperature]' role='measure' type='quantitative' />
      <column caption='Latitude (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[Latitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='nominal' />
      <column caption='Longitude (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[Longitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalTemperatures.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]' role='measure' type='quantitative' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
      <column caption='dt (Cleaned GlobalLandTemperaturesByState.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' type='ordinal' />
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column-instance column='[AverageTemperature]' derivation='Attribute' name='[attr:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_922956505582383113]' derivation='Avg' name='[avg:Calculation_922956505582383113:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_922956505584214026]' derivation='Avg' name='[avg:Calculation_922956505584214026:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Max' name='[max:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageTemperature]' derivation='Min' name='[min:AverageTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_922956505585229836]' derivation='User' name='[usr:Calculation_922956505585229836:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/khushijani/Documents/My Tableau Repository/Datasources/Cleaned_GlobalTemperatures+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/13/2024 05:03:53 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28' table='[Extract].[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]' type='table' />
            <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[AverageTemperature]' />
            <map key='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1].[AverageTemperature]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperatureUncertainty]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00].[AverageTemperatureUncertainty]' />
            <map key='[AverageTemperature]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00].[AverageTemperature]' />
            <map key='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[City]' />
            <map key='[City]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[City]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[Country]' />
            <map key='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1].[Country]' />
            <map key='[Country]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00].[Country]' />
            <map key='[LandAndOceanAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandAndOceanAverageTemperatureUncertainty]' />
            <map key='[LandAndOceanAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandAndOceanAverageTemperature]' />
            <map key='[LandAverageTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandAverageTemperatureUncertainty]' />
            <map key='[LandAverageTemperature]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandAverageTemperature]' />
            <map key='[LandMaxTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandMaxTemperatureUncertainty]' />
            <map key='[LandMaxTemperature]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandMaxTemperature]' />
            <map key='[LandMinTemperatureUncertainty]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandMinTemperatureUncertainty]' />
            <map key='[LandMinTemperature]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[LandMinTemperature]' />
            <map key='[Latitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[Latitude]' />
            <map key='[Latitude]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[Latitude]' />
            <map key='[Longitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[Longitude]' />
            <map key='[Longitude]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[Longitude]' />
            <map key='[State]' value='[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1].[State]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' value='[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' value='[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' value='[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C].[dt]' />
            <map key='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' value='[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1].[dt]' />
            <map key='[dt]' value='[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28].[dt]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Cleaned_GlobalTemperatures+' increment-value='%null%' refresh-type='create' rows-inserted='9630087' timestamp-start='2024-04-13 05:03:43.347' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1992</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandAverageTemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandAverageTemperatureUncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandMaxTemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMaxTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMaxTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandMaxTemperatureUncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandMinTemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandMinTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandMinTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandMinTemperatureUncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandAndOceanAverageTemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LandAndOceanAverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LandAndOceanAverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</parent-name>
              <remote-alias>LandAndOceanAverageTemperatureUncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>Cleaned_GlobalTemperatures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>9</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15229</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>10</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114168</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>11</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12019</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>12</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCountry.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>241</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>13</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15887</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>14</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191677</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>15</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17446</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>16</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>241</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByState.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>17</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByState.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>18</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14831</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>19</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72760</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>20</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11279</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>21</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>22</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>23</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>24</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByMajorCity.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>25</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3909</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>26</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>235826</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>27</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18938</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>28</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3474</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>29</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Latitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>30</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)]</local-name>
              <parent-name>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>31</ordinal>
              <family>Cleaned_GlobalLandTemperaturesByCity (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#116985'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[usr:Calculation_922956505585229836:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[attr:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[max:AverageTemperature:qk]&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505582383113:qk]&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505584214026:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[min:AverageTemperature:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
        <field-sort-custom-order field='AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
        <field-sort-custom-order field='AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
        <field-sort-custom-order field='City (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
        <field-sort-custom-order field='Calculation_922956504821166084' />
        <field-sort-custom-order field='Country (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
        <field-sort-custom-order field='Latitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
        <field-sort-custom-order field='Longitude (Cleaned_GlobalLandTemperaturesByCity (1).csv)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Geographical Level' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Abidjan&quot;'>
          <calculation class='tableau' formula='&quot;Abidjan&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' id='Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F'>
            <properties context=''>
              <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByCity (1).csv' table='[Cleaned_GlobalLandTemperaturesByCity (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F' table='[Extract].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByCountry.csv' id='Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00'>
            <properties context=''>
              <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByCountry.csv' table='[Cleaned_GlobalLandTemperaturesByCountry#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00' table='[Extract].[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C'>
            <properties context=''>
              <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByMajorCity.csv' table='[Cleaned_GlobalLandTemperaturesByMajorCity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C' table='[Extract].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalLandTemperaturesByState.csv' id='Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1'>
            <properties context=''>
              <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalLandTemperaturesByState.csv' table='[Cleaned_GlobalLandTemperaturesByState#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='AverageTemperature' ordinal='1' />
                  <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1' table='[Extract].[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]' type='table' />
            </properties>
          </object>
          <object caption='Cleaned_GlobalTemperatures.csv' id='Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28'>
            <properties context=''>
              <relation connection='textscan.0pfejd70uhhdb615rlv1z0bcw4sc' name='Cleaned_GlobalTemperatures.csv' table='[Cleaned_GlobalTemperatures#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='dt' ordinal='0' />
                  <column datatype='real' name='LandAverageTemperature' ordinal='1' />
                  <column datatype='real' name='LandAverageTemperatureUncertainty' ordinal='2' />
                  <column datatype='real' name='LandMaxTemperature' ordinal='3' />
                  <column datatype='real' name='LandMaxTemperatureUncertainty' ordinal='4' />
                  <column datatype='real' name='LandMinTemperature' ordinal='5' />
                  <column datatype='real' name='LandMinTemperatureUncertainty' ordinal='6' />
                  <column datatype='real' name='LandAndOceanAverageTemperature' ordinal='7' />
                  <column datatype='real' name='LandAndOceanAverageTemperatureUncertainty' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28' table='[Extract].[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' />
              <expression op='[dt (Cleaned_GlobalLandTemperaturesByState.csv)]' />
            </expression>
            <first-end-point object-id='Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00' />
            <second-end-point object-id='Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' State with Max Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'> State with Max Temp</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Delhi&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.5966851711273193' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EEED9712-9DC0-40C5-B059-EA8DF3929053}' />
    </worksheet>
    <worksheet name=' State with Min Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>State with Min Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Sakha&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.4640884399414062' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4C0D59F3-A96B-4EEA-8B47-22814BA97DED}' />
    </worksheet>
    <worksheet name='City with Max Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>City with Max Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='City (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='None' name='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]'>
            <groupfilter function='member' level='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' member='&quot;Alexandria&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.6408839225769043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{895AB289-6FD8-422D-A991-7D9B48BFBD91}' />
    </worksheet>
    <worksheet name='City with Min Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>City with Min Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='City (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='None' name='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]'>
            <groupfilter function='member' level='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' member='&quot;Brakpan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.7292816638946533' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B2B27C59-CA27-4A7F-880F-319EBD7D6D11}' />
    </worksheet>
    <worksheet name='Country with Max Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>Country with Max Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]'>
            <groupfilter function='member' level='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' member='&quot;Kuwait&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B5F46074-0E17-4BA5-8235-05B5BD5C0C3C}' />
    </worksheet>
    <worksheet name='Country with Min Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>Country with Min Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]'>
            <groupfilter function='member' level='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' member='&quot;Greenland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.4640884399414062' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B104F1CD-2F5E-434E-A836-88E8B4961147}' />
    </worksheet>
    <worksheet name='Extra Sheet for Q 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Temperature Uncertainty Variation Over Time &amp; Region</run>
            <run fontalignment='1' fontcolor='#ffffff'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m' />
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
            <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Year' name='[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]'>
            <groupfilter function='member' level='[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]' member='1744' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk] + [federated.1axqktl1rvhgsx1ecdpbz0mas81m].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk])</rows>
        <cols>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]</cols>
      </table>
      <simple-id uuid='{9C99B6C6-9B46-4365-818D-C1694C377217}' />
    </worksheet>
    <worksheet name='MajorCity with Max Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>MajorCity with Max Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='City (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]'>
            <groupfilter function='member' level='[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' member='&quot;Baghdad&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.3756906986236572' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7C1AA9AE-B6DC-4615-9BCD-A34394EA7FEA}' />
    </worksheet>
    <worksheet name='MajorCity with Min Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>MajorCity with Min Temp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='City (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]'>
            <groupfilter function='member' level='[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' member='&quot;Harbin&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.5524861812591553' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F69CF59E-2E01-4A3D-83DE-CB3B8DE00633}' />
    </worksheet>
    <worksheet name='Maximum Temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>Max Temp  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Max' name='[max:AverageTemperature:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='179' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[max:AverageTemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.3314917087554932' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8CA9031D-3C50-4E83-8FF9-48D547A598C2}' />
    </worksheet>
    <worksheet name='Minimum Temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='11'>Min Temp</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Min' name='[min:AverageTemperature:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='83' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#ffffff' />
            <format attr='background-color' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[min:AverageTemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3A990A1E-0200-4401-A6C9-B66E4B3A7411}' />
    </worksheet>
    <worksheet name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Temperature Uncertainty Variation Over Time &amp; Region</run>
            <run fontalignment='1'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (3)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)'>
            <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_20266256724127745]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([dt])' />
            </column>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_20266256741322755]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MONTH([dt])' />
            </column>
            <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Avg' name='[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_20266256724127745]' derivation='None' name='[none:Calculation_20266256724127745:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_20266256741322755]' derivation='None' name='[none:Calculation_20266256741322755:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256724127745:ok]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_20266256724127745:ok]' member='1886' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256741322755:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_20266256741322755:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256724127745:ok]</column>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256741322755:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[Longitude (generated)]' field-type='quantitative' max='-3411523.6854911335' min='-4202728.1103586098' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[Latitude (generated)]' field-type='quantitative' max='5576346.8469824847' min='4991185.2568107331' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' />
              <lod column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' />
              <geometry column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#1b1b1b' />
                <format attr='font-weight' value='bold' />
                <format attr='text-decoration' value='none' />
                <format attr='font-style' value='normal' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-range-field' value='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[Latitude (generated)]</rows>
        <cols>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{36572D4D-E916-49FD-BCCC-5D9CE7C317ED}' />
    </worksheet>
    <worksheet name='Q -9 Warmest and Coldest temperatures of cities of each country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Warmest &amp; Coldest Temperatures of Cities of each Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m' />
          </datasources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[AverageTemperature]' derivation='Sum' name='[sum:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Year' name='[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' filter-group='7'>
            <groupfilter function='level-members' level='[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:Country:nk]</column>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:City:nk]' value='40' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
                <format attr='mark-color' value='#aaff7f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='143' />
                <format attr='maxheight' value='143' />
                <format attr='minwidth' value='68960' />
                <format attr='maxwidth' value='68960' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[sum:AverageTemperature:qk]</rows>
        <cols>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{7E71F253-5D86-4172-BB3C-AB36534B88A1}' />
    </worksheet>
    <worksheet name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Global Temperature Trend line Graph </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperatureUncertainty (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
            <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Land And Ocean Average Temperature Uncertainty' datatype='real' name='[LandAndOceanAverageTemperatureUncertainty]' role='measure' type='quantitative' />
            <column caption='Land And Ocean Average Temperature' datatype='real' name='[LandAndOceanAverageTemperature]' role='measure' type='quantitative' />
            <column caption='Land Average Temperature Uncertainty' datatype='real' name='[LandAverageTemperatureUncertainty]' role='measure' type='quantitative' />
            <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
            <column caption='Land Max Temperature Uncertainty' datatype='real' name='[LandMaxTemperatureUncertainty]' role='measure' type='quantitative' />
            <column caption='Land Max Temperature' datatype='real' name='[LandMaxTemperature]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='integer' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' role='measure' type='quantitative' />
            <column caption='Land Min Temperature' datatype='real' name='[LandMinTemperature]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='integer' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCity (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='integer' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByCountry.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='integer' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByMajorCity.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Cleaned_GlobalTemperatures.csv' datatype='integer' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalLandTemperaturesByState.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Cleaned_GlobalTemperatures.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28:qk]' pivot='key' type='quantitative' />
            <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[AverageTemperature]' derivation='Max' name='[max:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Min' name='[min:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='Sum' name='[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Sum' name='[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Sum' name='[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Sum' name='[sum:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='Sum' name='[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Sum' name='[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Sum' name='[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperatureUncertainty]' derivation='Sum' name='[sum:AverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandAndOceanAverageTemperature]' derivation='Sum' name='[sum:LandAndOceanAverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandAndOceanAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAndOceanAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandAverageTemperature]' derivation='Sum' name='[sum:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandAverageTemperatureUncertainty]' derivation='Sum' name='[sum:LandAverageTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandMaxTemperature]' derivation='Sum' name='[sum:LandMaxTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandMaxTemperatureUncertainty]' derivation='Sum' name='[sum:LandMaxTemperatureUncertainty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LandMinTemperature]' derivation='Sum' name='[sum:LandMinTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Year-Trunc' name='[tyr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperatureUncertainty:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByState.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCity (1).csv_47E93EC507EB42EF987B64107AE3B76F:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByCountry.csv_078F9327519B473E8BECED5D21C12E00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByMajorCity.csv_1E4201230EDF400FB02A683B94E6025C:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalLandTemperaturesByState.csv_0734D6CAE0B04E038888587B50AB02F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[__tableau_internal_object_id__].[cnt:Cleaned_GlobalTemperatures.csv_7AB69F6CBE6D45F9B88217C6517EEC28:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandAndOceanAverageTemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandAndOceanAverageTemperatureUncertainty:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandAverageTemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandAverageTemperatureUncertainty:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandMaxTemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandMaxTemperatureUncertainty:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[sum:LandMinTemperature:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[max:AverageTemperature:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[min:AverageTemperature:qk]' value='121' />
            <format attr='width' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[max:AverageTemperature:qk]' value='121' />
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[min:AverageTemperature:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[max:AverageTemperature:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[tyr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' scope='cols' value='' />
            <format attr='tick-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='1' />
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#ffffff4b' />
            <format attr='stroke-color' scope='cols' value='#ffffff4b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[min:AverageTemperature:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#ffffff67' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[max:AverageTemperature:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#aa0000' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#ffffff67' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[min:AverageTemperature:qk] + [federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[max:AverageTemperature:qk])</rows>
        <cols>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[tyr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]</cols>
      </table>
      <simple-id uuid='{1746CC59-DFC1-40A1-B5CB-1E264FDA9F32}' />
    </worksheet>
    <worksheet name='Q 2 City VS Major City Climate Change over decade within a country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>City vs Major City Climate Change over decade within a Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='measure' type='quantitative' />
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
            <column caption='Decades' datatype='string' name='[Calculation_922956505584885771]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(INT(YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)])/10)*10)' />
            </column>
            <column caption='City (Cleaned GlobalLandTemperaturesByCity (1).csv)' datatype='string' name='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
            <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_922956505584885771]' derivation='None' name='[none:Calculation_922956505584885771:nk]' pivot='key' type='nominal' />
            <column-instance column='[City (Cleaned_GlobalLandTemperaturesByCity (1).csv)]' derivation='None' name='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' />
              <groupfilter function='member' level='[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='member' level='[none:City:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City:nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]' value='61' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk] + [federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByCity (1).csv):qk])</rows>
        <cols>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]</cols>
      </table>
      <simple-id uuid='{C5F5752D-0A27-4EA8-B282-B31DECBE5415}' />
    </worksheet>
    <worksheet name='Q 3 Average Land Temperature in Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Average Land Temperature in Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='measure' type='quantitative' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Max' name='[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Min' name='[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Year' name='[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' filter-group='7'>
            <groupfilter function='level-members' level='[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[Longitude (generated)]' field-type='quantitative' max='26498350.131771341' min='-3351589.8978036009' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[Latitude (generated)]' field-type='quantitative' max='12182343.716504872' min='-4189645.6503642127' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]' />
              <color column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' />
              <lod column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[max:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' />
              <geometry column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[Latitude (generated)]</rows>
        <cols>[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F03703C9-BFDA-46C6-8794-A8777CB1AF39}' />
    </worksheet>
    <worksheet name='Q 4 State Temperature Change'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>State Temperature Change</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByState.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' role='measure' type='quantitative' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByState.csv):qk]</rows>
        <cols>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{D830334F-35AF-4E8E-A594-164B684C0706}' />
    </worksheet>
    <worksheet name='Q 5 Warmest and coldest temperature of cities by country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Warmest &amp; Coldest Temperature of cities by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalLandTemperaturesByCity (1).csv (Multiple Connections)' name='federated.04jk0jx14u5cz714ztea80tc0g8v' />
          </datasources>
          <datasource-dependencies datasource='federated.04jk0jx14u5cz714ztea80tc0g8v'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperature]' derivation='Avg' name='[avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Max' name='[max:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Min' name='[min:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04jk0jx14u5cz714ztea80tc0g8v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[avg:AverageTemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[max:AverageTemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04jk0jx14u5cz714ztea80tc0g8v].[min:AverageTemperature:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04jk0jx14u5cz714ztea80tc0g8v].[:Measure Names]</column>
            <column>[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.04jk0jx14u5cz714ztea80tc0g8v].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='height' field='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:City:nk]' value='103' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.04jk0jx14u5cz714ztea80tc0g8v].[:Measure Names]' value='false' />
            <format attr='text-orientation' field='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:City:nk]' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04jk0jx14u5cz714ztea80tc0g8v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04jk0jx14u5cz714ztea80tc0g8v].[Multiple Values]</rows>
        <cols>([federated.04jk0jx14u5cz714ztea80tc0g8v].[none:City:nk] / [federated.04jk0jx14u5cz714ztea80tc0g8v].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{EA63F746-BB1D-4B90-8C49-BCF567DAF648}' />
    </worksheet>
    <worksheet name='Q 6 Temp change by Long and Latitude'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Temperature Change by Long &amp; Latitude</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
            <column caption='Numeric Latitude' datatype='real' name='[Calculation_1532349831899140099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT(&#13;&#10;  IF CONTAINS([Latitude], &apos;N&apos;) THEN &#13;&#10;    REPLACE([Latitude], &apos;N&apos;, &apos;&apos;) &#13;&#10;  ELSE &#13;&#10;    REPLACE([Latitude], &apos;S&apos;, &apos;&apos;) &#13;&#10;  END&#13;&#10;)' />
            </column>
            <column caption='Numeric Longitude' datatype='real' name='[Calculation_1532349831899500548]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT(&#13;&#10;  IF CONTAINS([Longitude], &apos;E&apos;) THEN &#13;&#10;    REPLACE([Longitude], &apos;E&apos;, &apos;&apos;) &#13;&#10;  ELSE &#13;&#10;    REPLACE([Longitude], &apos;W&apos;, &apos;&apos;) &#13;&#10;  END&#13;&#10;)' />
            </column>
            <column caption='Temperature Variability' datatype='real' name='[Calculation_1532349831899979781]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [City]: MAX([AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)])}' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Latitude]' role='dimension' type='nominal' />
            <column datatype='string' name='[Longitude]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1532349831899140099]' derivation='None' name='[none:Calculation_1532349831899140099:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1532349831899500548]' derivation='None' name='[none:Calculation_1532349831899500548:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1532349831899979781]' derivation='None' name='[none:Calculation_1532349831899979781:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899500548:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899140099:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899979781:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.3' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899979781:qk]' />
              <text column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899140099:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899140099:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899500548:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899500548:qk]' z-order='2' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4282872676849365' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899500548:qk]</rows>
        <cols>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899140099:qk]</cols>
      </table>
      <simple-id uuid='{6595176F-A896-48C5-9659-46DB3BD8178C}' />
    </worksheet>
    <worksheet name='Q 7The temprature chage with the decade'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Temperature Change with the Decade</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column caption='Temperature of Decade start' datatype='real' name='[Calculation_922956505582383113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]) %10 = 0 THEN [AverageTemperature] END' />
            </column>
            <column caption='Temperature of Decade End' datatype='real' name='[Calculation_922956505584214026]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]) % 10 = 9 THEN [AverageTemperature] END' />
            </column>
            <column caption='Decades' datatype='string' name='[Calculation_922956505584885771]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(INT(YEAR([dt (Cleaned_GlobalLandTemperaturesByCountry.csv)])/10)*10)' />
            </column>
            <column caption='Temperature change' datatype='real' name='[Calculation_922956505585229836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_922956505584214026]) - AVG([Calculation_922956505582383113])' />
            </column>
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_922956505582383113]' derivation='Avg' name='[avg:Calculation_922956505582383113:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_922956505584214026]' derivation='Avg' name='[avg:Calculation_922956505584214026:qk]' pivot='key' type='quantitative' />
            <column caption='dt (Cleaned GlobalLandTemperaturesByCountry.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_922956505584885771]' derivation='None' name='[none:Calculation_922956505584885771:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956505585229836]' derivation='User' name='[usr:Calculation_922956505585229836:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt (Cleaned_GlobalLandTemperaturesByCountry.csv)]' derivation='Year' name='[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505584214026:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505582383113:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[usr:Calculation_922956505585229836:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505582383113:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505584214026:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_922956505584885771:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[usr:Calculation_922956505585229836:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]'>
            <groupfilter function='level-members' level='[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505582383113:qk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:Calculation_922956505584214026:qk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[usr:Calculation_922956505585229836:qk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]' value='33' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' value='false' />
            <format attr='display' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' value='false' />
            <format attr='text-orientation' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[usr:Calculation_922956505585229836:qk]' max='30.625553708000002' min='-15.379222184' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[Multiple Values]</rows>
        <cols>([federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk] / ([federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk] / [federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{A1645E0E-2A30-4ADE-A613-00BC2FFB57B2}' />
    </worksheet>
    <worksheet name='Q 8 Major Cities showing most prominent warming trend of temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Major Cities showing most Prominent warming trend of temperature</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='AverageTemperature (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='real' name='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Avg' name='[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City:nk]' direction='DESC' using='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' />
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City:nk]' value='61' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#555555' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]</rows>
        <cols>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{C12F872D-A007-4AA7-8C66-0BF31B63D207}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleaned_GlobalLandTemperaturesByCity (1).csv (Multiple Connections)' name='federated.04jk0jx14u5cz714ztea80tc0g8v' />
            <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
          </datasources>
          <datasource-dependencies datasource='federated.04jk0jx14u5cz714ztea80tc0g8v'>
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Land Average Temperature' datatype='real' name='[LandAverageTemperature]' role='measure' type='quantitative' />
            <column-instance column='[LandAverageTemperature]' derivation='Avg' name='[avg:LandAverageTemperature:qk]' pivot='key' type='quantitative' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
            <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' />
          </filter>
          <slices>
            <column>[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country:nk]</column>
            <column>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.04jk0jx14u5cz714ztea80tc0g8v].[avg:LandAverageTemperature:qk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.04jk0jx14u5cz714ztea80tc0g8v].[avg:LandAverageTemperature:qk]</rows>
        <cols>[federated.04jk0jx14u5cz714ztea80tc0g8v].[yr:dt:ok]</cols>
      </table>
      <simple-id uuid='{128FE33A-F869-4E3A-A884-91E01995EB5C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Cleaned_GlobalTemperatures' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m' />
        <datasource caption='Cleaned_GlobalTemperatures (3)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)' />
        <datasource caption='Cleaned_GlobalTemperatures (2)' name='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)' />
        <datasource caption='Cleaned_GlobalTemperatures+' name='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e' />
      </datasources>
      <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m'>
        <column caption='dt (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='date' name='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' type='ordinal' />
        <column-instance column='[dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='Year' name='[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)'>
        <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_20266256724127745]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='YEAR([dt])' />
        </column>
        <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_20266256741322755]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='MONTH([dt])' />
        </column>
        <column-instance column='[Calculation_20266256724127745]' derivation='None' name='[none:Calculation_20266256724127745:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Calculation_20266256741322755]' derivation='None' name='[none:Calculation_20266256741322755:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)'>
        <column caption='Country (Cleaned GlobalLandTemperaturesByState.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByState.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e'>
        <column caption='Country (Cleaned GlobalLandTemperaturesByMajorCity.csv)' datatype='string' name='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv)]' derivation='None' name='[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98068' id='56' param='horz' type-v2='layout-flow' w='98892' x='554' y='966'>
            <zone h='98068' id='46' param='horz' type-v2='layout-flow' w='88504' x='554' y='966'>
              <zone h='98068' id='5' type-v2='layout-basic' w='88504' x='554' y='966'>
                <zone h='32687' id='25' name='Q 8 Major Cities showing most prominent warming trend of temperature' w='19321' x='554' y='33651'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32696' id='35' name='Q 5 Warmest and coldest temperature of cities by country' w='41829' x='19875' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22587' id='48' name='Q 2 City VS Major City Climate Change over decade within a country' w='27354' x='61704' y='11109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22542' id='51' is-scaled='1' param='/Users/khushijani/Desktop/Screenshot 2024-04-11 at 3.50.31 PM.png' type-v2='bitmap' w='19321' x='554' y='11109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32642' id='54' name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather' w='41829' x='19875' y='33696'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32696' id='58' name='Q 3 Average Land Temperature in Countries' w='19321' x='554' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22587' id='60' name='Q 4 State Temperature Change' w='41829' x='19875' y='11109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32696' id='62' name='Q 6 Temp change by Long and Latitude' w='27354' x='61704' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32642' id='64' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' w='27354' x='61704' y='33696'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='72' name='Country with Max Temp' w='9878' x='31080' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='73' name='Country with Min Temp' w='9879' x='40958' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='74' name=' State with Max Temp' w='7368' x='50837' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='75' name=' State with Min Temp' w='8745' x='58205' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='76' name='MajorCity with Max Temp' w='11336' x='66950' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='77' name='MajorCity with Min Temp' w='10772' x='78286' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='81' name='City with Max Temp' w='10202' x='12456' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='82' name='City with Min Temp' w='8422' x='22658' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='83' name='Maximum Temperature' w='5911' x='6545' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10143' id='84' name='Minimum Temperature' w='5991' x='554' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='150' h='98068' id='79' is-fixed='true' type-v2='layout-basic' w='10388' x='89058' y='966'>
              <zone h='98068' id='80' param='vert' type-v2='layout-flow' w='10388' x='89058' y='966'>
                <zone h='19988' id='57' mode='radiolist' name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' type-v2='filter' w='10388' x='89058' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19988' id='59' mode='radiolist' name='Q 3 Average Land Temperature in Countries' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' type-v2='filter' w='10388' x='89058' y='20954'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19988' id='61' mode='radiolist' name='Q 4 State Temperature Change' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]' type-v2='filter' w='10388' x='89058' y='40942'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19988' id='63' mode='radiolist' name='Q 6 Temp change by Long and Latitude' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' type-v2='filter' w='10388' x='89058' y='60930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9058' id='65' mode='slider' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256741322755:ok]' type-v2='filter' w='10388' x='89058' y='80918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9058' id='66' mode='slider' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256724127745:ok]' type-v2='filter' w='10388' x='89058' y='89976'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='3300' minheight='3300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='96' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98068' id='95' param='vert' type-v2='layout-flow' w='98892' x='554' y='966'>
                <zone fixed-size='73' h='10143' id='84' is-fixed='true' name='Minimum Temperature' w='5991' x='554' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='83' is-fixed='true' name='Maximum Temperature' w='5911' x='6545' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='81' is-fixed='true' name='City with Max Temp' w='10202' x='12456' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='82' is-fixed='true' name='City with Min Temp' w='8422' x='22658' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='72' is-fixed='true' name='Country with Max Temp' w='9878' x='31080' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='73' is-fixed='true' name='Country with Min Temp' w='9879' x='40958' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='74' is-fixed='true' name=' State with Max Temp' w='7368' x='50837' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='75' is-fixed='true' name=' State with Min Temp' w='8745' x='58205' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='76' is-fixed='true' name='MajorCity with Max Temp' w='11336' x='66950' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='10143' id='77' is-fixed='true' name='MajorCity with Min Temp' w='10772' x='78286' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='172' h='22542' id='51' is-fixed='true' is-scaled='1' param='/Users/khushijani/Desktop/Screenshot 2024-04-11 at 3.50.31 PM.png' type-v2='bitmap' w='19321' x='554' y='11109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19988' id='61' mode='dropdown' name='Q 4 State Temperature Change' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]' type-v2='filter' w='10388' x='89058' y='40942'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='173' h='22587' id='60' is-fixed='true' name='Q 4 State Temperature Change' w='41829' x='19875' y='11109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='173' h='22587' id='48' is-fixed='true' name='Q 2 City VS Major City Climate Change over decade within a country' w='27354' x='61704' y='11109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32687' id='25' is-fixed='true' name='Q 8 Major Cities showing most prominent warming trend of temperature' w='19321' x='554' y='33651'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19988' id='57' mode='dropdown' name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' type-v2='filter' w='10388' x='89058' y='966'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32642' id='54' is-fixed='true' name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather' w='41829' x='19875' y='33696'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9058' id='65' mode='slider' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256741322755:ok]' type-v2='filter' w='10388' x='89058' y='80918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9058' id='66' mode='slider' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256724127745:ok]' type-v2='filter' w='10388' x='89058' y='89976'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32642' id='64' is-fixed='true' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' w='27354' x='61704' y='33696'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19988' id='59' mode='dropdown' name='Q 3 Average Land Temperature in Countries' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' type-v2='filter' w='10388' x='89058' y='20954'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32696' id='58' is-fixed='true' name='Q 3 Average Land Temperature in Countries' w='19321' x='554' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32696' id='35' is-fixed='true' name='Q 5 Warmest and coldest temperature of cities by country' w='41829' x='19875' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19988' id='63' mode='dropdown' name='Q 6 Temp change by Long and Latitude' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' type-v2='filter' w='10388' x='89058' y='60930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32696' id='62' is-fixed='true' name='Q 6 Temp change by Long and Latitude' w='27354' x='61704' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9C16E650-FCBF-4DD5-87CE-A53777D074E2}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='114'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{96BB9D86-6CFF-4C6D-B377-BC55536A8F86}' />
    </window>
    <window class='worksheet' name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather'>
      <cards>
        <edge name='left'>
          <strip size='266'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card mode='radiolist' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6B7641BC-3530-435F-AF15-7D8684D31C8D}' />
    </window>
    <window class='worksheet' name='Q 2 City VS Major City Climate Change over decade within a country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BC5F23F2-32AD-47BE-B782-75AEF531ECA5}' />
    </window>
    <window class='worksheet' name='Q 3 Average Land Temperature in Countries'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='radiolist' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByMajorCity.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[min:AverageTemperature (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{38906F8E-F5B1-4DD1-BCC7-C1CEB17D6333}' />
    </window>
    <window class='worksheet' name='Q 4 State Temperature Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='radiolist' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByState.csv):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{109F5608-C477-4D65-97D1-CA18537FD8D4}' />
    </window>
    <window class='worksheet' name='Q 5 Warmest and coldest temperature of cities by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.04jk0jx14u5cz714ztea80tc0g8v].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04jk0jx14u5cz714ztea80tc0g8v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{49E1A7A9-DFC6-41C2-9058-6C537DD4A07E}' />
    </window>
    <window class='worksheet' name='Q 6 Temp change by Long and Latitude'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='55'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card mode='radiolist' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_1532349831899979781:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{591AC7D8-D707-4BDB-ADAC-332D3F3BD566}' />
    </window>
    <window class='worksheet' name='Q 7The temprature chage with the decade'>
      <cards>
        <edge name='left'>
          <strip size='248'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='105'>
            <card mode='radiolist' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Calculation_922956505584885771:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{59541CC0-A19D-4348-977F-D27422298832}' />
    </window>
    <window class='worksheet' name='Q 8 Major Cities showing most prominent warming trend of temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:Country (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[avg:AverageTemperature (Cleaned_GlobalLandTemperaturesByMajorCity.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2EED9007-75C6-4D84-AAE2-0E952E06BC63}' />
    </window>
    <window class='worksheet' name='Q -9 Warmest and Coldest temperatures of cities of each country'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card mode='radiolist' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7A256B91-6EFD-4121-BC61-B625F5112983}' />
    </window>
    <window class='worksheet' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256741322755:ok]' type='filter' />
            <card mode='slider' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[none:Calculation_20266256724127745:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy 2)].[avg:AverageTemperatureUncertainty (Cleaned_GlobalLandTemperaturesByCountry.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B597DF6E-F22D-44E3-A305-0B70563C6603}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' State with Max Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name=' State with Min Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='City with Max Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='City with Min Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country with Max Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country with Min Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MajorCity with Max Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MajorCity with Min Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Maximum Temperature'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Minimum Temperature'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 2 City VS Major City Climate Change over decade within a country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 3 Average Land Temperature in Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 4 State Temperature Change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 5 Warmest and coldest temperature of cities by country'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q 6 Temp change by Long and Latitude'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 8 Major Cities showing most prominent warming trend of temperature'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='60' />
      <simple-id uuid='{BDCF0C05-F648-4364-BC59-4CE07D2ECC66}' />
    </window>
    <window class='worksheet' name='Extra Sheet for Q 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1axqktl1rvhgsx1ecdpbz0mas81m].[yr:dt (Cleaned_GlobalLandTemperaturesByCountry.csv):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{79F45A13-600C-4DB5-9F65-9117AEEDD3A9}' />
    </window>
    <window class='worksheet' name='Maximum Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E255B296-7A13-47DF-9846-2AC6F01E5E10}' />
    </window>
    <window class='worksheet' name='Minimum Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{168F4C39-A558-436B-9A47-8480904FE33D}' />
    </window>
    <window class='worksheet' name='Country with Max Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDCBA88E-377B-48F7-B71F-A5F6F7A75356}' />
    </window>
    <window class='worksheet' name='Country with Min Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:Country (Cleaned_GlobalLandTemperaturesByCountry.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8E9DBDB-49E5-496E-A565-C036300D626B}' />
    </window>
    <window class='worksheet' name=' State with Max Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFDA4583-41CF-4741-A0B2-56BA71751464}' />
    </window>
    <window class='worksheet' name=' State with Min Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9F05B3E-2FF1-4F5A-A929-DE91CFAF0A36}' />
    </window>
    <window class='worksheet' name='MajorCity with Max Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D68ED274-05E4-49D2-ABC6-EBFFF38F1B92}' />
    </window>
    <window class='worksheet' name='MajorCity with Min Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1axqktl1rvhgsx1ecdpbz0mas81m (copy)].[none:City (Cleaned_GlobalLandTemperaturesByMajorCity.csv):nk]</field>
            <field>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C6FCC14-BA83-406F-B989-1AF284B6360E}' />
    </window>
    <window class='worksheet' name='City with Max Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A52D7E5-F68C-4FFB-829B-86040E48F44E}' />
    </window>
    <window class='worksheet' maximized='true' name='City with Min Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ymmhaa1d0p5q61gvx1vj0nqyl0e].[none:City (Cleaned_GlobalLandTemperaturesByCity (1).csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23E61F0F-73E2-4218-88A7-0FA3D89816ED}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='48' name=' State with Max Temp' width='128'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='46' name=' State with Min Temp' width='128'>
      iVBORw0KGgoAAAANSUhEUgAAAIAAAAAuCAYAAADgKBFVAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAH0UlEQVR4nO2caUiUXRvHfz6zGTqgolipGZaWFabQJrl8KdAWNMlosWVso0WpsQVMLFOG
      VMKy0IYkYiiCTArDUlCTkqQyw1axLBQ11BLBnNJc3g/iPM2jo5PjjL7M/D7NeK77nOvv+Xuf
      c1/nRquBgYEBLJgt/0x2AhYmF4sBzByLAcwciwHMHIsBzByLAcwciwHMHOFYAa6urqbIw8Ik
      YbkDmDkWA5g5FgOYORYDmDkWA5g5FgOYORYDmDlj1gHGorGxcSLysDBJGGwAsBSL/p+xLAFm
      jsUAZo7FAGaOxQBmjsUAZo7FAMCDBw8oKSlhw4YNU6IfUzIhj4Hjwd/fn5CQEDw8PPDw8EAq
      ldLY2Eh9fT319fWUlpby/Plzk+Qyb948JBIJ9vb2U6IfU2JyAyxYsICEhASCgoKGtTk4OODj
      4wPA4cOHqampQaVSkZeXR1dXl6lTNQtMZgBbW1sKCgqYM2cOAFlZWWRlZdHR0TEsdubMmRw8
      eJAtW7agUCjo6+vj5s2bpkrVrDDZHiAgIEBr8hUKxYiTD9Dc3ExCQgL+/v5cvXqVT58+mSpN
      s8Nkd4Bly5YB0Nvby8WLF/W6prW1laSkJGOmZfaYzADz588HBv+6jbGei0QiZsyYgbOzMz9/
      /qSuro6fP39O+DjjZfr06fj4+CCRSPjy5QsfP36ku7tb7+uNpc9kBmhqagIG13dra2t+/fpl
      UH9CoZDAwEAiIiIICAjA0dERKysrTfvAwACNjY2oVCquXr1Kb2+vQePB4CRkZWUxd+5cAOLi
      4qiqqtIZHxQURHR0NL6+vjg6Omq1tbW1kZSUxL1793Re/6fG8PBwo+gzmQE+fPgwOKBQyIkT
      Jzh79qxB/d29exc/Pz+d7VZWVri5uXHq1Ck2bdrE5s2baWlpMWjM9PR0QkNDAVAqlTonf8WK
      Faxdu5bly5fr7MvJyYnLly/T2dlJSUnJiDGjaZwofSYzQFlZGb9+/cLa2pp9+/YhEok4f/68
      zo3gWNjY2ADQ0tJCXl4e79+/p66ujq9fv+Lk5IS3tzdxcXG4u7vj6enJmTNnOHDgwLjzl8vl
      bNy4ERgs+KSkpOiMXbNmjeZzRUUFT548obKykurqamxtbdm5cycxMTFYWVlx+vRpnQb4U2Ny
      crJR9FmN9Q8ixjrrb2xs1Pt9gKioKM6dO6f53tnZiUqlIjc39693+vHx8bx8+ZLi4mL6+vpG
      jBGLxdy+fZslS5YAEBISwtu3b4fF1dXVIZFISExM5Nq1a8PaIyMjycjIAKCqqopNmzaNuIQN
      9QODE5+WlsaLFy9GzC0tLY2tW7cC4O3tTWdn519r1FffaJi0FHzjxg3i4+M1YqVSKYcOHaKs
      rIyCggJ27NiBVCrVqy+FQkFRUZHOyQfo6ekhMTFR833hwoV/nfPKlStJT08HoKGhAZlMNub+
      JTMzk8jISJ2TD1BUVKT57ObmNmLMWBonQp/JzwJUKhXBwcHcunVL62lg8eLFKBQKXr16RWZm
      Jp6enhMy3ps3b1Cr1QCaOoS+eHl5kZOTg1AopKOjg6ioKL5//z7mdd++fRszpq2tTfNZIBD8
      VV5/Yog+mKTDoNbWVo4fP46fnx9Hjx6loqKCoZXI2tqaiIgIioqKOHLkCEKhYduUod0y/Lum
      6oOTkxMqlQqpVEpPTw+7d+/m8+fPBuViDMarb4hJOwwCUKvV5Obmkpubi4uLCxEREWzbtg1X
      V1fEYjHHjh3D09OTQ4cO6ezD3t6etWvXsmjRIpydnXF2dsbOzk4rZsaMGXrlY2dnh4uLCwKB
      gCtXruDq6srAwAByuZxnz54ZpNUQ7O3tOXnypMH6RmJSDfAnTU1NXLp0CaVSiUwmQy6XY2Nj
      Q1hYGOXl5dy6dUsrXiKRkJqaSnh4uMF3iSHkcjlyuVzrZ6mpqaM+qxsTY2j8L1PGAEP09PSg
      VCqpra3l+vXrCAQCdu3aNcwASqWSVatWAfD792+Ki4uprKykpaWF9vZ2+vv7NbFpaWnMmjVr
      XPk0NzePX4wBCIVCLY0PHz40ir4pZ4AhHj16xP379wkPD8fLywuhUKhV7Rr6xZSWlhIbGztq
      PeHHjx96jVlYWMidO3ewsbEhJSUFqVRKRkYGarWawsJCwwT9JTExMVoa9+7dqzNWX30jMaXf
      CKqurgYGS7CzZ88e1v769Wuio6PHXUz6L0+fPqWwsJC8vDy2b9+OWq1GIBCQnZ1NcHDwhIyh
      L4GBgcC/Go3FlDaAg4MDAP39/VplTrFYDAw+S09EjX8kKisriY6Opru7G5FIRE5Ozqil3YlE
      LBbj6+sLGFcjmNAAR44cYebMmXrHi8ViVq9eDUBNTY1WpUwkEgHodRomkUjG9XgEUF5ezv79
      ++nt7WXatGlcv35d88aSMRGJRHprNEQfmNAA0dHRlJeXk5ycjJOT06ixIpGICxcuaI6Qy8rK
      tNqHCkihoaH8849uCWFhYTx+/Bh3d/dx511cXExsbCz9/f1IpVJu3rzJvHnzxt2fPnR1dWlO
      T0fTOBH6TLYJzM7OZs+ePchkMmQymV7XvHv3jqioKK2q2RDt7e0sXbqUhoYGuru7qa+vx9bW
      Vusu09PTQ3Z2NuvXr8fDw2Pcuefn55Ofn49MJiM5OZmSkhKamprYsGGD0Z4S1q1bR2lpqUZj
      bW2tUfT9D0yOKxf0zscVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='48' name='City with Max Temp' width='128'>
      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
    </thumbnail>
    <thumbnail height='48' name='City with Min Temp' width='128'>
      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
      Y+Aw/wBZ59jIUcIL5QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Country with Max Temp' width='128'>
      iVBORw0KGgoAAAANSUhEUgAAAIAAAAAwCAYAAADZ9HK+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIIUlEQVR4nO2ce0hT7x/HX9nKy1ZWdKNstWYTk2pJuDmtlt0MKgsioaiI0CitIILoDglm
      0QW6YFRE0CQKg7ChBmladoOmmZYhZKJdidQclpbO3x9xzk9zF/Orm9/vzgsEPc9nz+fz+Lyf
      z3M552xAe3t7OxJei4+nA5DwLJIAvBxJAF6OJAAvRxKAlyMJwMuRBODlyFwZBAUFuSMOCQ8h
      ZQAvRxKAlyMJwMuRBODlSALwciQBeDmSALwcl+cArnj37l1vxCHhIf6xAEA6LPo3I00BXo4k
      AC9HEoCXIwnAy5EE4OVIAvByemUb2F0CAwMZPHgwzc3NWK1Wl/YDBgxg5MiRALS0tNDY2NjX
      IXodbs0A6enplJSUcPjw4W7Zb968mZKSEkpKSti6dWsfR+eduDUDdBe5XE5ubi4qlYrv378T
      GxtLVVWVp8P6T9Iv1wApKSmoVCoADhw4IHV+H9LvBLBixQpWr14NQFZWFtevX/dwRP9t+tUU
      oFQqOXLkCAC1tbXs3r3bwxH1PYGBgYwePRqr1cqnT5/c7r/fZACZTMbZs2cZMmQIra2tJCcn
      O90pmM1mlixZ4rLelJQUzGYzq1at6nQ9NTUVs9ksCs4RU6dOxWw2YzabycrKIiAgwKGtj48P
      mZmZmM1mFixYYNcmLCyMffv2kZ+fT2VlJS9fvuTevXs8e/aMiooKbt68icFgcNmu3qLfCGDn
      zp2Eh4cDcOrUKSwWi1N7rVbLxIkTXdYbHByMVqslLCys0/W6ujq0Wi2rV6/Gz8/P4ecXLlyI
      VqtFq9USHh5OdHS005j0ej1arZaGhoYu5cnJydy5c4ctW7ag0Wi6iGnIkCHodDpu3LhBamqq
      y7b1Bv1CAJGRkSQnJwPw5MkTzpw50+c+8/LyAPD19SUyMtKhndFoBODnz5+d/nZmW1dXR3Fx
      cZdyocNramo4duwYa9euJTIyEpVKhcFgIDk5mffv3wOwfv165s+f/7fN+ms8LoDhw4dz5swZ
      fHx8aGhoYNu2bdhstj73W1paytevXwGIiYmxazN06FAxK507dw6AefPmOaxTEEBBQYHdNjx+
      /Jg1a9YQFRXF6dOnKSwspLa2ll+/flFTU8OtW7dYuHAhX758AWDHjh09bl938YgA5s+fL86r
      2dnZjB07FoBdu3bx8eNHt8Rgs9m4d+8e4HhUz5kzh4EDB/L69WtMJhMAEyZMIDg4uIvtsGHD
      0Gq1wP+zy588ePCA+/fv4+xLWRobG0WxaTSabrenp3hEACNGjBDn1QkTJgDw5s0bcnNz3RpH
      fn4+ACqVCqVS2aVcEEZ+fj6fP3+mvLwcsJ8F5syZg4+PD62traKwekpZWRkACoVCPArvKzwi
      gKqqKjIyMsjIyODFixcAqNVqEhMT3RpHQUEBra2tgP1pQOhoYUQLgrEngLlz5wJgsVj+6p5F
      YGAgGo2GWbNmiT9CRgQYNGhQt+vqCR45B7BYLOIePzAwkJycHJRKJXv37qW0tJSnT5+6JY7G
      xkYsFgs6nQ6j0ciVK1fEstDQUMaMGYPVahV3JHl5eWzfvh29Xo+/vz8/fvwQ7YVs4Sj9C8jl
      clauXMmKFSvQarVOdyDuwOOLwG/fvpGYmEhLSwsymYzz588zevRot/kXOsxgMHQabcIoLyws
      FLNESUkJ9fX1DB48mKioKNFWEAvA3bt3HfoaOXIk2dnZpKWlodfr8fPzo6mpierqaoqLi7FY
      LFgsFt6+fdvr7XSExwUAUF5ezp49ewAYNWoU6enpyGTuSU5ChwUEBKDT6cTrHed/AZvNRkFB
      AdB5GhB+r62tpbKy0q4fuVzOtWvXUKvV2Gw2Ll++zOLFiwkJCSE6Oprly5cTFxdHXFwcGzZs
      6M0mOqVfCADgxo0b4kpbp9Oxb98+t/itrKwU320QOlKhUBAREUF7e3uXBZ2QMToKQJj/naV/
      g8FAaGgo7e3tJCUlcfDgQV6+fNmrbekJ/UYA8PvO3/PnzwFISEhg6dKlbvH75+IuKioKmUxG
      WVmZuCcXKCgooK2tDaVSyeTJk5HL5URERADO079gU15ezu3bt/uiGT2iXwng169fJCYmigc0
      J06cYMqUKQ7tfX19e8WvMHI1Gg3jxo2zm/4FGhoaxFO+efPmiWuHHz9+8PjxY4c+hNvb1dXV
      vRJzb9GvBADw4cMHkpKSaGtrQy6Xc+HCBeRyuV3badOmOaxHJpMRHx/f5R6APR4+fEhzczPw
      e+4XMoE9AXS8HhMTI4qlqKiIlpYWhz6EZxpmzJjhdGtnNBq5dOmSw/Lhw4djNBoxGo2d1iwd
      mTlzpmgjLE4d0e8EAL//mUePHgVgypQpHD9+3K5dbGwsCQkJjBgxAvj9DKFarWbdunUUFhZy
      4sQJscwZzc3NPHr0CIBNmzYRFBREfX29OB39iZAx9Hq9eNfP1fZPqEupVJKWltZJ1P7+/sye
      PZurV69iMpmcngCGhYVhMpkwmUycPHnSrs2BAwdEm467FXv0q+cBOpKenk54eDixsbEsW7aM
      4uJiLl68KJZ///6dgIAADh06xP79+6moqECpVDJ06FDR5tu3bwwcOBCFQuHSX15eHjExMYSE
      hACOz/MBXr16xadPnxg7dizjx48XP++MnJwcioqKiI6OJj4+nkWLFlFWVoZcLmf69OliVrBa
      rWRmZrJx40aXMfcGA1x9W7irFz/fvXvnsZdDFQoFer0etVqNn58fnz9/prS0lIqKCo/E0100
      Gg1Tp05l0qRJNDU1UVNTQ1FREU1NTW6P5V8tAIl/zv8A9jDUEw+HnucAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Country with Min Temp' width='128'>
      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
      SitS/A+14SuaOaU2OwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      zKef/x9TpWmZeiYr7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Extra Sheet for Q 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='46' name='MajorCity with Max Temp' width='128'>
      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
    </thumbnail>
    <thumbnail height='48' name='MajorCity with Min Temp' width='128'>
      iVBORw0KGgoAAAANSUhEUgAAAIAAAAAwCAYAAADZ9HK+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGT0lEQVR4nO2cXUhTbxyAn7XNwbqoaWtYmUJTWZoYKXXR7IOgD4syIhZ1s8o+lgvBGyOS
      CnHMqySK1G5S6CKobkQSZoRUKBXB+oJqGLWwuVWS6Vrp/F+Io5Vus83t78557jzn9ff+ju/j
      +7kzydjY2BgigmVOohMQSSyiAAJHFEDgiAIIHFEAgSMKIHBEAQSOLFyBJUuWxCMPkQQh9gAC
      RxRA4IgCCBxRAIEjCiBwRAEEjiiAwAm7DxAOp9MZizxEEkTUAoC4WTSbEYcAgSMKIHBEAQSO
      KIDAEQUQOKIAMaa9vZ3Ozk7KysoSnUpExGQZGCkFBQVs374dAIvFwnReSSgrK0On0zEwMMDl
      y5dnKsWoyc3NRaFQoFKpEp1KRMS1B9i2bRsmkwmTyYREIpnW727evBmTycSBAwdmKDthIg4B
      AkcUQOCIAgicuE4C44lcLic9PR2NRoPX68XhcOD1emMaPyUlhaGhobBl09LSyMvLQ61W43K5
      sNvtfPv2LWa5REPSCCCTydDr9ezevZu1a9eyYMGCoInm2NgYTqeTlpYWmpubGRkZmTJWR0cH
      KSkpXLx4kVu3bgWu5+TkYDab0ev1pKWlMTw8TG5u7pRxVqxYQVVVFevXr0cmC/5Tv3v3jtra
      Wu7cuRPFU0dP0ghw+/ZtVq5cOeV9iURCRkYGp0+fZu/evRgMBlwu16RltVotCoWC+fPnB64Z
      jUbOnz8fJNWfjfo7ZrP5Lwn9fj9z5oyPullZWVy9epWmpibq6upCCjmTJI0Ac+fOBcDlcnHz
      5k1evnyJw+Ggr68PtVqNTqejqqqKzMxMsrOzOXv2LMePH48odkVFBdXV1YGfHQ4HT548CflZ
      CLVaDUBnZyctLS08ePCA0dFRdDodW7Zs4cSJE0ilUo4cOcKnT59oamqK4un/naQRwGazYbVa
      sdlsjI6OBt3zeDy8evWKtrY2bty4QVFRETt27ODSpUs8f/48ZFyj0Rho/A8fPnDu3Dk6OjrC
      bmK9efOGU6dO0d3dHXTdbrdjt9u5f/8+zc3NzJs3j4qKCq5fv87379//4cmjI2ECnDlzZlo7
      gcuXLw95v66uLmyMnz9/UlNTQ3t7OwB5eXkhBSgpKWHDhg0APH36FKPRiMfjiSjf1tbWvxr/
      dx4+fEhDQwM1NTWkpqZy6NAhGhoaIoodSxImQHl5eULqffbsGcPDwyiVSpYtWxay7KZNm4Dx
      3uXYsWP8+PEjprlcu3aN8vJy0tPTWb16dUxjR0rCBOjt7Z1WD6DRaALjfDRMrAZycnIiivfo
      0SOOHj2Kz+eLuu4/8fl83Lt3j3379pGVlRXz+JGQMAHWrVuH3++PuPyVK1cCB0mhUKlUlJaW
      kp+fj0ajQaPRBM3mAdLT0yOq8+3btxiNxhlp/Anev38PwOLFi5HJZHFfDSTNJFChUGC1Wtm1
      a1fI5dl0aG1tZWBgICaxpuLjx48ASKVSVCoVbrd7Ruv7k6QQQCaT0djYGBizf/36hc1m4/Hj
      x7hcLr58+RLU29TX17N06dKwcePxDXq/906xnmNEQlIIYDabA41/9+5dTp48GfI/NxHLranQ
      arUA9PX1MTg4GPf6k0IAvV4PjK+xDx48mLBdtX8hJycHgNevXyek/ll/GpiSkkJhYSEwvoc/
      mxo/Pz+f4uJiYHzjKBHMegHkcjlyuRwgotM+hUIRk+VktEgkEiwWC1KpFL/fH3ToFE9mvQBD
      Q0OBmfTWrVsDhy2TsXPnTrq6usjMzIxXepOiVCqxWq2Bw6vW1lbsdvukZUtKSqisrAy5BJ4o
      E67cZCTFHKC7u5s9e/ZQXFxMfX09tbW1gUlgRkYGa9asYf/+/RQVFcUtp9LSUtxuNz09PfT3
      9wdyKSwspLq6OiCh2+3GarVOGWfjxo0cPnyYnp4e2traQpYBQpabjIQI4PP5pr3EmujeJ1sq
      VVZW0tjYiMViwWAwYDAYgu6PjIxgs9nQ6/X09vbS3t5OQUHBlEOG1+tFoVD887Kso6MDgAsX
      LqBQKP6639/fT11dHY2NjX8dXE2WSzii+aCLJNzXxYd789fpdP5v3g6WSCSsWrWK7OxsMjMz
      GRwcxOl00tXVxdevX+OSw8KFC/F4PPj9fpRKJVqtlkWLFpGamorT6eTFixd8/vw5LrlEwn8u
      tzRG0SHk8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Maximum Temperature' width='366'>
      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
      QoJbCCFczL/+8OpeHEARigAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='48' name='Minimum Temperature' width='174'>
      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
      W8tzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Q - 10 Temperature Uncertainty Variation Over Time and Region:heatmap' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFd0lEQVR4nO3VMRGEMAAAQfjBPBriKRUdQih5F6S4XQXX3X6e53vf9wZAy3Fd1zbnXN0B
      wMd+qwMAWMMAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIM
      ACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAA
      ogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDK
      AACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwA
      IMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACi
      DAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoA
      AKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAg
      ygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIM
      ACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAA
      ogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDK
      AACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwA
      IMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACi
      DAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoA
      AKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAg
      ygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIM
      ACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAA
      ogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDK
      AACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwA
      IMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACi
      DAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoA
      AKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAg
      ygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIM
      ACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAA
      ogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDK
      AACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACBqH2O8z/Os7gDgY38A
      dBLH5/7IyQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='374' name='Q -9 Warmest and Coldest temperatures of cities of each country' width='384'>
      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
      blf16tUVFhamsmXLysfHR8nJydq8ebPL7u9gt9sVHx+vESNGaOHChU63nTVrli5duqR+/fpZ
      lO6Ozp07a/To0Vq0aJEGDx58z1Iedrtd48ePV1RUlN555x0tWbKEfP+vUKFC2rBhg/bt26fu
      3bs7/bvs27ev+vbtq6ioKMuO8MqWLasNGzZo5cqV+uCDD3J0Gio9PT3PjlJcXgA+Pj7avn27
      4799fX3l5+en1NTUB65Z84c//EEbN258pP09ivDwcI0aNUovvvhiji6gumqcc+nSpdWhQweF
      hYWpXLly8vb2VnJysrZs2aI5c+a4dPhd06ZNNXjwYD3zzDOSpLNnz8rPz8+xtv6KFSs0fPjw
      PPtkk1NVqlTR8uXLVaNGDSUlJTndtmLFilqzZo0aNmyo/fv3W5Twjjp16mj69OmKj4/XW2+9
      5Vh2xNvbW1OnTlX9+vX11ltvuWwCnbvma9q0qWJiYnL0mnl4eCghIUHffvutZQvXdezYUZ98
      8omef/55/fvf/7Zkn3dz+Smg27dvP/T46szSsUKhQoU0b948SdKYMWNy1NBWzxL18PDQhx9+
      qNdff123bt3S/v37lZiYKF9fX8fSCm+88YaGDRumFStWWJpNkho3bqyYmBj985//1Guvvaa4
      uDhdv35dNptNISEhatCggYYMGaI1a9aoWbNmlk60KlGihCTl6HU9ePCgzp07pzZt2ig6Ojq/
      o2Wxbt06tWnTRnPmzNG3336r7t2768KFC4qJiVH16tXVvXt3Sz8UFZR8ZcuW1ZUrV3L0N5me
      nq74+HiVLVs2/4P9P09PT924ccMlb/6SGxRAWlqaxo0b5+oYDxQZGamQkBC1atXKbVep7NOn
      j3r27KnPP/9c48ePv+eGEeXLl9fIkSMVExNj+dFJ4cKFNWHCBP38889q165dllFeGRkZOnv2
      rBYsWKAVK1YoNjZW48aNU7t27Sw7hZY5U7lkyZI6ePCg020zMjK0b98+lSpVyopo99i3b5+i
      oqI0e/ZsLV26VCdOnFCFChXUpUsXtxhb7475bty4IV9fX/n6+uZo5FFwcLDOnDljQbI7EhMT
      5ePjo5CQEJfciMblE8HcXUhIiG7evKn4+HhXR7mvUqVKqX///lqwYIGGDRt237sFHT58WF26
      dNGmTZs0duxYBQQEWJavRo0aCgoKUv/+/Z0O8b1w4YL69++viIgIVatWzbJ8Bw8eVHp6ul5+
      +eVst7XZbCpdurQuX75sQbL7O336tNq1a6fk5GRVqlRJHTt2dIs3/0zulm/Xrl3y9PRU7dq1
      s902JCREVatWtez8vyTt2LFD58+fV5MmTSzb590ogGycO3dOXl5e8vb2dnWU+3rppZdks9k0
      evRop9ulp6dr4MCBKl68uKVvsCEhIbp69WqOxvdv3bpVly9f1rPPPmtBsjuuXbum2NhYDR48
      WEWLFnW6bbdu3VSmTBmX3xns8uXLSkhI0NmzZ1128dwZd8r3888/a+3atfrLX/7i9MjN19dX
      M2bM0Llz5zR//nzL8t28eVOffvqpevXqJbvd+hMyLj8FdLegoCC9+eabjokanp6e+ve//634
      +HjFxMQoMTHR8kyZn16qV6+uDRs2WL7/7Pj7+ys1NTVH5xCPHTumlJQUhYeHa926dRakk1JS
      UuTt7S1PT89sb0STnp6uxMRES8/BStIHH3ygNWvWaPny5frf//1fff/991mGM/r7++uNN95Q
      v379tGrVqnwbxli7du0cD6b4zW9+o8DAQHXu3Pmer61bty5fbm/o7vnuJyMjQ3369NGyZcu0
      Zs0azZ49WytWrNDRo0d148YNlS1bVtWrV1evXr305JNPqn379nl6z93s2Gw2LVmyRL1799Zr
      r72m7777LtvvSU1NzbMJsy4fBZSpS5cuev/99xUQEKCdO3fq6NGjjokaVapUkb+/v+bOnauP
      PvrI0jtaSdKUKVNUqFAh9ejRw9L95kStWrW0YMEChYeH5+iGNMuWLdPWrVv10UcfWZDuTqlv
      375d//M//5OjxbbWr1+vv//975o4caIF6f6jTJkyGjFihOrVq6fk5GTt3r1bt2/fVmhoqMLC
      whQQEKClS5dq8ODB+baU8YwZM9S8efNcP09+Xedx93zOBAUF6e2331bPnj3vezQfGxur6Oho
      HT161NJcPj4+96yIm528/Pm5RQE0btxYf/3rX7Vo0SKNGTPmnk8HAQEBev311/Xee+9p5syZ
      GjFixCPv61GEhYXpp59+UuvWrd3uWoDdbldcXJzGjRunBQsWZLv9tm3bNGPGDM2cOdOCdHcM
      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
      pgoKCpIkrVq1SjNnztTWrVstm90IoGAoMKOAAgMD1bZtW33++eeqWbOmq+PcwxX57Ha76tat
      q08++UQJCQmaM2eOIiMjtWjRIr3++uuSpMWLF2vz5s28+ecSv3+5Q77cya98bn0EEBAQoIYN
      GyoqKkr16tWTt7e3kpKS3OZWg67IZ7fbVbNmTUVFRalZs2YqXLiwkpOT9dVXXyk2Nlbx8fFK
      T093HAHg0fH7lzvkyx0r8rldAWT+T7ds2VL169eXt7e3jh49qhkzZig2Nla7d+9WNpctHut8
      //jHP1S0aFElJSVp/vz5io2NVUJCgkt/Jo8TV7++5COflfncogAKFSqUpel8fHyUlJQkb29v
      DRs2TF988YVLXxR3yhccHKyvvvpK77//vtPFo5Bz7vT6ko98VuZzWQH4+/urQYMGioqKUoMG
      DeTj46MDBw5o6tSpWrp0qU6fPq09e/bo/PnzLnlx3DVfQkKCOnXqpBYtWmjVqlWKjY3V2rVr
      XX5f4oLGXV9f8pHPynyWF0CLFi3UqlUrNWjQQL6+vtq/f78mT56sZcuW6cCBA47tXHUO293z
      tWnTRqVKlVKLFi3UsmVLzZo1S1euXMlSBpmT1XAvd399yUc+K/NZXgCTJ0/W8ePHNXHiRC1b
      tkyHDx+2OoJT7p5PunP3r88++0yfffaZSpcurRYtWigqKkozZ87U1atXtXr1aq1fv97VMd2S
      u7++5Msd8j0clwwD/eWXX3T69GnLb06eU+6e725JSUmaNm2amjdvrho1amjChAkqU6aMxowZ
      I+nO+iNt2rRRYGCgi5O6D3d/fcmXO+TLOcsLYOjQoUpNTdXYsWO1a9cuzZkzRx07dlRwcLDV
      Ue7L3fM5k5SUpKlTp6p58+aqWbOmoqOjVahQIU2ePFm7du3SF198ofbt22e5SYxp3P31JV/u
      kO/h/B/5JK/FHDQuOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Q 1 Global Temp Trend line Graph with interactive timeline of extreme weather' width='384'>
      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
      v5/h4WHuu+8+JEniBz/4AZIk8Ytf/ILe3l78fj8///nP2bZtGytXrkSSJB599FG6u7u1Y3fs
      2MELL7yQd37uz127dvHcc8+Nu2/37t0888wzrFixgu3bt497zKpVq9i6dau2rb+/n4cffhhJ
      knjxxRfZvHkz999/P0NDQwwODvLggw/mnf/ggw8yMDDA8PAw999/P1u2bOHFF19EkiQefvhh
      +vr68Pv93HvvvWzbto1Vq1YhSRKPPPIIPT09eWNcsWLFMcf4/PPP8/zzz7Nr165xj1mxYgU7
      duzQtvX09PDII49oY9y2bRv33nsvfr+fvr4+bYy58++//36Gh4cZGBgYd4yDg4MMDQ1x//33
      s3nz5rwx9vf3a8du3bpVG+PRz7h27Vr9HU/xO96+fTsrVqzgmWeeYffu3eMe89xzz+WNsbOz
      k8cffxxJknjhhRfYsWMHP/vZzwgEAnR3d/Poo48iSRIrV65k27Zt/PznP8fv99Pb28svfvGL
      vGvfd999DA8P09/fz0MPPcTGjRt55ZVXkCSJBx54gMHBQe3YTZs28dJLL437jFu2bGH16tU8
      /fTTNDc3j3vMn/70J/bs2aNta29v51e/+hWSJPHss8/y7rvv5o3xl7/8JZIk8fzzz7Nz505+
      +tOfEgwG6e7u5rHHHsu79v/93/8xMjJCb28vjzzyCBs2bODPf/4zkiRx77334vP5tGM3btzI
      mjVrtPOTyWTeGF9++WWefPJJ9u/fP+44nn76afbt23fMMe7du1fb1tbWxq9//WttjLt37+Yn
      P/kJ4XCYjo4ObYy583/6058SCoXo6uriscce46233uL111/XxhgIBLRj169fr43xBz/4AbFY
      jB/+8IdIksTbb7/NmjVreOKJJzh48CCJRIJ77rkHSZJ45513ENSsiVi+fDmHDx/mm9/8Jvfc
      cw9msxkASZKwWCwkEgmsVivJZFLbl0wmMZlMpNNpTCaTti+ZTGK1WlEURduXOz/354n2KYrC
      3Llzqa6uZu3atWOOSaVSiKKIwWAgkUhgsVi0Z83tk2V5QuOQJAmj0ThmHEeP8R//8R/58Y9/
      fNJjBPKe9WTHkUqlsFgsY8Zx9913a89zqmOcyDhkWUaW5eO+40996lM888wzxOPx03rHp/r3
      6Oh3fPfdd/OjH/3otN/xeOM4lXd8991387Of/eyE41BVFeGFxm8AAAygSURBVIPBMKG/K2az
      WXvu0eOwWq2oqnrMMd55552sWrWKSCRyzHEYDAZUVT3l34eqqhiNRkRRHHNM7vq5cXzyk59k
      7dq1+P3+Ux7j6HuM/j0aDAYAjEbjmHHIsqyNcfT5o39XJxrHRMdoNpu1fytHjyOdTmtjPPo6
      t99+O2vWrMHn82njyI1x9DhG7zv6366qquOOQ1GU8aUgVFUlOaqbTSKRyPtz9L5Utrm0klUN
      zO3LHTt639HXOdG+UCjE4ODgmH25PxVF0e5/9H2Pfp5THcfofa2trXnvZqLjOPpZJ2scRz/P
      qY5xouM43rN1dHQgSdJpv+NTfbbc/tG/q6OfdbL+rpzKGFtbW8fsO9Y4chPCeMeMHockSeOO
      Y/T1xhtjZ2fnCX9XuUnldH4fuecb75jRY+zu7iaRSJz2GI83jtyfExnH6N/V/2/v/IOirtY/
      /vrssvxYYBB2UUAjCkFHFBYkSHIsp0lqDMexIPkRrFQqu4BQ4WIMLAvyK0gCpXH6QSE6NdpU
      w6RlWo4EjBAIKJTkz1RqGcyrCSEqeP9wdi/Q/d66Xz+A917eMzvD2WX2eZ3nOfs5z3nO+ez+
      WT/+ah//P/24fv06Fy5cYHBw8C/1w/TavxOPf7oCyM/PZ0pTmtKUpvTfralTQFOa0pSm9D+q
      e2YCGFmrk8lkyGQyJJI7eIIgIJPJgDt1XrlcPq4sFhYWo+zKZLJRz8nlcjOblZWVmW0ieUw2
      pVIp1tbW5v8dbx6JRIIgCOa2jY2NuS0IAjY2NqO4R7KNh0y+AZDJZOY69j9rj4zbRPBYWFiY
      69EjmUz+srGxGVceiUQy6v3H2rO2tjaPlYmI1b/iMY0dk28meuxYWlr+y7EzkbEyXWNGfs6s
      ra3Nr4vpm0n/OmhXV1d0Oh3Hjh2jsrKSlJQUHnjgAVxcXKiqqqKmpobnn3+e5cuXExsbS35+
      PjY2NnR2dlJRUSE6T3h4OFFRUURFRfHggw+i0WiQSqUoFAoiIyPJycnBzs6O5uZmzp8/T3R0
      NFZWVqSlpdHT0yM6z8qVK4mPj2f16tXMmjWLDRs2IAgCLi4uaDQacnNzzacvTp48iVqtxsrK
      ik2bNtHd3S0qy8KFC9HpdOTl5dHe3k5mZiZKpRKpVEpycjLp6el4eHjQ1dXFRx99hMFgQCaT
      8fbbb1NfXy8qi7W1NUlJSbi5uZGamsq8efN49dVXGR4eZufOnQiCQExMDNbW1pSXlxMYGMi8
      efO4desWqamp5o1jsWRlZYVGo8HT05PExES8vb1JT09naGiI3bt3c+DAAXx8fNi6dStr1qwh
      NDQUPz8/bt++TUpKirl+K5YCAgLQ6XQUFRVx9OhRMjIymD59OlKplJSUFCIiInjsscfMJ7tM
      sTKdOBFbvr6+pKenU15ezpEjR0hLS2PWrFnIZDJeeeUVMjIysLW15ebNm5SWlpKTk4OFhQW7
      du3i4MGDorJYWVmxfv165s6dS0JCAj4+Prz88stYWlqSl5fHwMAAubm5CIKAXq9n6dKlLFy4
      0ByrkfsDYkilUqHT6diyZQvfffcder0epVJpPnmVn5+Pvb09t27dorCwEIPBgIWFBVVVVRw6
      dOiubE/6CsDJyYm6ujrs7OwAKCkpITk5mf7+fmpra3F1dcXX15e+vj48PDz47bff0Gg0BAYG
      jso2xdK1a9e4dOkSgiDQ2dmJVqtl9+7dNDY2olKpuH79OmVlZXz44YeEhYWRkZHBO++8w7PP
      Pis6C8DAwABGoxGJRMKPP/6IVqtl165dtLS04OrqypkzZzAYDISEhBAWFkZ2djYVFRVERESI
      ziKXy2lvbzdnRl5eXmRnZyOTyfD09MTNzY21a9cyf/58li9fzp49e9BoNMTHx4vOYmdnR2tr
      qzmDValU7N27l+3btxMSEsKJEyd46aWX2LFjB0FBQQQHB6PVaunu7sbPz090HltbW44fP25e
      yS5YsIADBw5QXl7O4sWLsbCwYN26dbS0tCCTyVi8eDFarZZTp04RGBgoOo9cLqetrc0cK29v
      b7Kzs5FIJLi4uLBs2TKKioooLi5myZIlfPLJJyQkJKBWq0VnAbC3t+fo0aPmFZGPjw/Z2dnc
      uHEDV1dXpk+fTnZ2No6OjjzxxBPs27ePhIQEoqOjRWcxJZCmjHrFihW88cYbZGZmolariYiI
      oLy8nJKSEiIjI3n00UfRaDT88MMPBAcHi85ja2tLa2srlpaWODk5MW3aNBITE1EoFDg7O7Nl
      yxYSExNxdHQkNDSUmpoaEhISiI2NvWvbkz4BdHZ2cubMmVHPLVq0iBMnTnDlyhUSExP54IMP
      kEql9Pb24uXlhV6vZ/bs2aOWaGLpyy+/HDXDSyQSYmJiqKqqYubMmcyZM4eoqChzZmUwGAgP
      D0ehUIjOArB///4/8KjVat577z3Onj1LQEAARUVFNDU10dzcTFZWFpGRkePC8+2333L16j9+
      JOTChQsUFBQgk8nM8QG4fPkyp0+fJi4ujrS0NBwdHUVnuXTpEkeOHDG3W1paiI6ORqfTUVdX
      h9FoZPXq1axatYrq6mqMRiMFBQUEBQWNi28uX75MQ0ODud3W1kZ4eDiZmZnU1tayYsUKmpqa
      6O/vRyaTcf78eQoLC1m0aNG48NTV1fG3v/3jx99/+uknCgsLzaUFNzc3nnnmGSorKzl16hQx
      MTFs3LgRJyenUaUHsVRfX28+ygh3TtoUFhbi5OTEzz//TF9fn/l8elNTExEREaSnp+Ps7Cw6
      z5UrV6irqzPfJNXY2EhaWhovvvgiCoUCJycnenp6MBqNODk5ce7cOYqKinjkkUfGJVb19fXm
      WF29ehVbW1tycnKYO3cuDg4O3L59m23btlFTU0N9fT2RkZHodDoUCsVd+2bSS0CCIJjrX6bO
      xMbGYjAYkMvl2NnZERkZibe3Nw899BAJCQkoFApmz57N77//LjqPicOUyQUHB3P27Fl6e3u5
      ePEix48fp6SkhHfffZePP/6Yr7/+mqeeeuoPR67E5jFlKyqVCqPRiNFoJCwsjL1791JdXc3O
      nTuJi4ujrq6Oxx9/fFz2AUay2NvbM3PmTOLj49m8eTPTpk0zL+lnzJhBQ0MDbW1teHh44ODg
      IDoL3Nn/MPGsXLmSoqIizp07h16vx97eHh8fH1JSUhgcHCQrKwulUklaWtofEg6xNNI/YWFh
      lJaW0tHRQXFxMV1dXSgUCvz9/RkcHCQ3NxdnZ2c2bNjA6dOnx4XF9LCzs+P+++9nzZo1GAwG
      ZsyYwcWLFyktLWXz5s309vaSlJSEu7s7jo6O/+ddqGLxyOVyvL29UavVvPbaayxduhQrKyu0
      Wi1lZWX09fWh1Wq57777UCqV48IzcuwcPnyYjo4O/P39zat8T09Pbty4wS+//MLWrVtRKpUk
      JSWNW6xMLMPDw6SkpKBQKHB3d6enp4c333yT8vJy2tvbGRoaQqvV4u7ujkKhuGvfTPoE8PTT
      T7Ns2TLkcjkRERE0NDTQ0dFhrl+bat46nY5vvvmGgoICHBwcqKqqEr0WZ2trS2ZmJnZ2duj1
      evLy8ggKCuL9998HoLW1lSeffJK33nqLffv2sWTJElatWsW1a9fIysoSlQXuLFUzMzOxt7dH
      r9dTUFDAww8/TGVlJQANDQ1kZWURFBTEZ599RkhICM899xz9/f3o9XrReZKTk5k/fz7e3t5U
      VVVx7Ngx8we2ubmZBQsWsH37dr766iuUSiUZGRkIgkBBQYHoLD4+PsTHx2Nvb8/GjRv59NNP
      SUlJQRAEduzYga+vL87Ozrz++uscOnQINzc3fHx86OjoGJcJYM6cOaxduxZbW1vS09PZs2cP
      qampSCQSqqurOXz4MABxcXEcPHgQtVqNn58fXV1ddHV1ic6TmJiIr6+ved+jtbWVsrIy+vv7
      aW9v5/PPP6eiooLu7m6Gh4fJy8tDEASKiopEZwFYv349KpWKgIAABgcHaWxspKysjIGBAWpr
      a1GpVJSVlfHrr78yPDxMfn4+EomEkpIS0Vm8vLxYt24dcrmcTZs2sX//fl544QWGhobQ6/VI
      pVIMBgMSiQS9Xk9sbCz+/v6cPHmS77//XnQejUaDn58fvr6+3Lx5k9DQUNzc3Pjiiy+AO0my
      qTS3bds2UlNTEQSB4uLiu7b9H3cfgGmVMB5ZwV+VaaYe+/f/Is9YeyPbEx2rP7M30b6513ju
      pVjdazxjWcban+xYjZSYvpn0FcC/q8m88Js0MjCTffEfyzDRPGPtjWxPdKz+zN5E++Ze47mX
      YjXW/tj2RPOMZRlrf7JjNVJi+mbSN4GnNKUpTWlKk6O/A2tGHh9tam/kAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Q 2 City VS Major City Climate Change over decade within a country' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3iUVfrw8e/0mfTeE0pCCgESQghVqoUmTQQLiOiiwrsKq6Cugoiismtb
      d/VnFxsdRZQiRYEgJfSSRkJCSO+9TJ/3j4HBkIQagcD5XBeXeWbOzHMmwnPPc8p9SywWiwVB
      EAThtiKRSCTSG90JQRAE4caQn/uhrKyMEydO3Mi+CIIgCNeRLQAcP36cKVOm3Mi+CIIgCNeR
      GAISBEG4Tcmbe7B///64urpe774IgiAI18knn3zSfABwdXXll19+ud79EQRBEK4jMQQkCIJw
      mxIBQBAE4TYlAoAgCMJtSgQAQRCE25QIAIIgCLcpEQAEQRBuUyIACIIg3KZEABAEQbhNXTIA
      uLm5oVAobMcBAQF07doVmUzWpK29vT3R0dF4eHg0etzd3R25vNk9Z4IgCMIN0mIA0Gg0zJkz
      h2XLluHv7w/AqFGjmDp1Kj179mThwoWN2nt4ePDBBx8QEhLCSy+9RFxcHHZ2drzwwgssW7YM
      Hx+fv/aTCIIgCFekxa/lMpmMH3/8kerqattj/fv35+WXX8ZkMjF37lyCgoLIzs4GoH379sTH
      x7NmzRoyMjKIjo4mJSWFlStXUltb+9d/EkEQBOGKtBgAamtrm1y4Kysr6devHydPnkSpVOLr
      62sLAIcOHeKRRx4hKioKX19fZs6cSU1NDTU1NX/tJxAEQRCuyhVNAn/44Yd07NiRCRMm4OTk
      1ChAdO/enbS0NObNm8eSJUsYOXJkq3dWEARBaD1XFAC0Wi1ff/01X3zxBQqFgoyMDJycnFAq
      lbRr146srCwaGhrIyMigXbt2f1WfBUEQhFbQ4hBQcHAwDz74IN7e3gQGBnLkyBHy8/MZNWoU
      crmcVatWodVqGT9+PIcPH2bTpk3MnTuXmJgY1Go1//d//0doaCgTJ07Ex8cHb29vDh06xLp1
      667n5xMEQRBaILFYLBaA7du320pC3nvvvS3WA1AqlZhMJkwmU4vPGwwGzr6tIAiCcBPKy8uT
      XPHifL1ef03PC4IgCDeHG7YT2Nvbm9DQUNtxu3btmDRpEpGRkS2+Ji4uDi8vL9uxr68vISEh
      f2k/BUEQblVXFACUKjntI7xR2yuv6aT33XcfL7/8MmPGjAHAx8eHp59+mtTUVCZPnkyXLl2a
      vCYqKopnn32W7t27AzBp0iReeuklRo0adU19EQRBuF1ddAjI5O6H2dUbAKlUSre7wmgX7k1x
      biU7153AZLTOA0hqK5AXZl32SXfv3s2uXbuYPHkyYL24//rrrxw7dozCwkIef/xxEhMTbe3V
      ajWTJk1i2bJltsd27tzJH3/8wfjx4y/7vIIgCMJ5Fw8AXkEYO8XYjuNzgBwdoIHQONvjQcpy
      2pXKyc8qp7qsjlqDnItNAedX1uD5p3xBqamp/OMf/6CsrIzAwEA8PT0btX/ooYf4+eef0Wg0
      KJXWu4/CwkJ8fX0v/5MKgiAIjbRKhrb2Ed68+NAkACpKann8Az1ag+Sir9E62oPUGibOnDnD
      Rx99RFRUFOXl5ZSXl9va+fr6Mnz4cCwWCyEhIcjlco4fP05BQUFrdF0QBOG21SoBoLSgmpRD
      Ffh3cMfOUYVEYrhoe7VCjkYpR6GwJp3T6XSUlpbyyy+/8Le//Y1t27ahVqvx8fEhPz+f5557
      DoC6ujqUSiUVFRWo1WrUajUKhQKNRkNDQ0NrfBRBEITbRqsEgJNHcpn/xVZkMikevk7oou4H
      maLZtjKphCl9o/BwtEddls306dP57rvveOqpp1CpVCQlJbF37168vLzo1asXK1eutOUb0mg0
      yOVyjEYjU6dOxc3NDTs7Ox5//HGWLFlCXV1da3wcQRCE20KrJuk3mcwU5VZi7mqBpuUCrG3M
      Fj7feQiABzsXkbZ7P5VVlbz11luN2hUXF7Ny5cpGj508edL285dfftmaXRcEQbjt3NAqLd0H
      BDP5kTDSj+Xxy9cJJGxLw2wy38guCYIg3DZuaAA4uD2dDvd3JDQ6gOf+E0DBmXLWf7OfnT+f
      QFvXejuK/f396dKlC5s3bwaseY5Gjx5NXV0dq1atorKy0tbW0dGRhx9+GJVKxTfffENlZSUu
      Li488MAD2NnZsXbtWk6fPt1qfRMEQbhRbmgAWPflPrZ/spE7J3ZHEdqV7/cosNALy5A4aGEh
      qaS6DM3O1Zd9jlGjRhEXF4ejoyObN29GpVLx7LPPsmjRIry8vJgzZw7z5s2ztZ87dy7Lli3D
      bDbz6quvMnv2bF566SW+/vprysvLmT9/Ps8++yw6na7JuaRSKffccw/33HMPs2fPBmDgwIGM
      HDkSi8XCrl27WL9+va19YGAgM2fORC6Xs2fPHtauXYuvry9///vfkUgkHD9+nBUrVlz2ZxUE
      QbgSFw0ACpmUu7p1Yk96NlUNOlRyGffFRuLpZM/q/YnkV54v9hIcHEyvXr0A0HftwcniChIy
      cokK9OHOLsHsOpnF/sy8Jueoq9Gx7st9mIIqMEcPtT4okQAtLSO9+PLSC23evJn169fb5hjM
      ZjP19fUYDAYMBgP19fW2tkqlErlcTmpqKgDV1dU4ODhQV1eHXq+3tW8p0V2PHj1wcHDAaDQC
      1qpq48aNY86cOZjNZj744AM2btyI2Wwd5nrkkUf44IMPKC4uZtGiRezevZshQ4bw8ccfk5ub
      22zdZUEQhNbSYgBwdXXlxaf/hkdQB04WlFLVoOOpIXGkFpRw4HQer40fylNf/4zx7MWstLSU
      I0eOANAv7k46ebuTXVbF3wb14N8b/uAf9/ShrLaBjOLyZs9nMf812UMNBkOT45SUFBYtWoRa
      rebTTz+1PafX6yksLGTWrFmUlpYSGRmJs7MzW7du5ZVXXqGhoYHdu3e3mPDuwIEDHDhwgJgY
      6+Y5k8lEUlISDz74IDqdjszMTNvFH0ClUmE0GjGbzRw7doz27dtTVVVFz549GTRoEFu2bKG4
      uLjZcykUCsaOHUtgYCDvvfceAOPHj6dHjx4ArF69mqNHj9rad+7cmcmTJ2M2m0lMTGTFihVo
      NBqeeeYZHB0dyc3N5dNPPxVZXAXhNtJiLqDq6mr++fE3/JF2xvZYew8XtiZmkF5UxpEzBYT6
      uNueq6qqIiUlhdTUVMJ93Fl7KIU+IYGsPZhMTnkVS/ceZ0DYtReJ8Q505eF/DMa/o/ulGzfD
      z88PLy8vZsyYwZNPPsn48eORSs//Gj766CM2bdrEgQMHyMzMpKSkhPvvv5/HH3+cp556io4d
      O+Lm5nZZ55JIJEgkElQqFSqVqtF5AFauXMmLL77Iyy+/zNixY5FKpXh4eJCdnU1aWhrz589H
      Imn+jmfYsGHU1tbi7W1N1eHg4EDv3r159dVXeffdd3nggQcatX/kkUd45513ePXVV+nZsyca
      jYZp06bx+++/M3/+fJYsWSIu/oJwm2nxDsBkMqG/YJz7WE4hz4/sT1phGT07+nPkTH6T1/Xr
      14/DuSXU6fR4ONiRkl8CQHldA45q1TV3WG2nZNwTfRk+OZYT+7LYsuIwJ/adxmhofvWQl5cX
      Go0GR0dH2rVrh8FgwMfHh6CgIFxcXJDJZCgUCnr16kV8fDyBgYFUV1fTsWNHqqur0ev1yOVy
      QkNDqa2txcvLq8ldRUtUKhXBwcG88MILACxevLjRprWkpCRefPFFZDIZs2bNIicnB2dnZ44e
      PYrJZGLUqFGo1epmN7mdq9cwYMAAwLpJrqamhjvvvBNPT09OnDjRqP3hw4cZO3Ysubm51NfX
      o9VqCQ4OJiUlhUmTJrF7925ycnIu73+CIAi3hCuaBP72j6NE+Hlip1SQVlhGcU3TjVfjx4/n
      +b3Wi095XQOejnakAM4aFXW6a1/ZU1Vay74teUT3D6bnkFB6DAwhJ6OU3384yu6NydRWa3H1
      dKAkrwqALl264O/vz5EjRxgwYAC//vorn376KSNGjECn07F48WLA+g0awNnZmbFjx1JRUcG7
      774LwGuvvcaYMWNQKpV88MEHLRa679GjB507dyYsLIwpU6awf/9+ampqmD59Onq9HqlUilar
      5cUXX+S9994jIiKCzp074+Ligl6vJz8/n6ioKObOnUteXh5arfaydzjLZDJ0Oh2+vr64uLg0
      uZjrdDratWuH2WxGp9Mhk8lwd3dHJpORnp7O/Pnz+cc//iE20wnCbaTFAKBSqfDwdMdZo8bb
      2YGKei0quYyy2nrMdhp8nB3ILK6ga4A3RVV51AKxsbGkp6dTXWcAuZL9mbk8fVdv0ovKmdCz
      C9/vOdrS6S5bZVkd78z+EZ9AVwaN7UbUsBhkDm4MmDqE7qP7UF1ej7uPIwd3pLPui71sO3gM
      Dh5D0lCLxGC9oykpKSElJaXR+27cuBGAY8eOcezYsUbPlZSU8MUXX1yybxkZGZSUlLBz504A
      ysrKWLx4McHBwcjlcpYvX47FYuGrr77CYDBw8uRJW1BIS0vDYrGwadMmUlNTcXJyarIR7mKC
      goLQ6XR89dVXSCQS3nnnHX788UdMJhMymYwBAwYwZ84cLBYLf//73+nQoQPFxcXEx8ej1+tJ
      SkrC1dVVBABBuI20GAA8PT0Z2r8XNTo90UE+2CkV5FVUMzYmAq3RyJu/7MRsseDuoKFGqaAW
      sLOzY+nSpdBvIgDZZVWsP3qSR/t3J/5kFicLSlun1xYozK5gxX938vURD1vKaisloAOCYFCQ
      7VHFsR0oziS3zvlbUFlZ2WhPwTl/3sEM2CZ2tVqtbeL8HIvFQmZm5iXPdccdd+Dt7U1wcDAT
      Jkxg3759tG/fnvHjx+Pu7k5hYSEajYapU6fy0UcfkZ2dzZNPPklhYSHh4eF89dVX/PLLL8yb
      N499+/YRFBTU4oSzIAi3povWBNZH9G6UDrolsrx0VIe22o7rh/8NFJcuGqP6Yy2ycmtWT2NA
      KPqYOy/d4apSNDtX2Y61d9x3QQBo3qReenwNeRzbnUlGUgEVxbWYjG1313FAQAD29va24zNn
      ziCXy4mIiKChoYHU1FQsFgu+vr62JaXh4eE4ODiQnJxsG8bq0KEDgYGBHD16lOrq6mbPJZFI
      iIyMZOjQoXzwwQeAdVXRuHHjkEqlrF+/vlEgc3Jy4qmnnsJoNGIymfjqq6+oq6tj9OjRREdH
      U1ZWxscff2xbLtsctVqNVqu1Hdvb26NUKqmsrGwyWa1Wq20T7FqtFrPZjEajwc7Ojqqqqoue
      RxBuV1dVE7it8vJ34e5e3tw9KQZtvZ68zDIS958h+cAZCrMr6Dk0lNpKLbs3JtFwGbuQJRII
      7ORJdL+OHNp5irzMssvqh1QmpV2oJ3KFjNMpRRgNpst6nUQCKo0Cbb11Ajo3N7fZdgcOHGh0
      fK7duSWpFzp9+vQldzbHxcXRt29fW/lNmUzG9OnTWbRoEUajkbfeeouZM2fa2rdv356ysjJ+
      +OEHwDpB3bdvX3x8fHjzzTdxcnJqtBz2zxQKBePHj+f+++9nypQpNDQ0MGjQIO6++24qKyuR
      SCS8++67tou6RqNh8eLFtvTgy5cvx9PTk3HjxlFeXk5AQAALFy5s9s5MEG53t00A2LLiMPVH
      THTu2Q6pqzuf7LAHOkNkZyxhZg7JpeAFxiGRaCutE68SiYUn+pz/VlzXYEFrsH77VNspuWNU
      JCqNkkEP9+OP9YlUlNSirdejVkqwV1uXb1qA8urzF7v2Yd70HxWJRCLhjw1JHPg9HYvFQkVJ
      Lc52IJOCQW8iO6eWswXXcHLRMPHpAbQL9eK3NUfZse78Ch+JQYfE9Nd+w92/fz8JCQmNNtMV
      FRURGhqKXq+npKSkUfugoCCMRiOurq4UFBRgNpvp3bs3O3fupFevXqSlpbUYALy9vamoqCAx
      MdG2BHbw4MG88847lJeXM2/ePDw8PCgsLASsqTuys7NtE/YARUVFHDx4EIDJkycTERHB3r17
      W/33Ight3W0TADJTCsn51ToHoA4MpLz7vRe0OHu1lTiBqxNgvRjf+2iErcV7q+rYduj83cG3
      7zcA51bpnC9OPyZGxaOj7QDQ6i2Mn/+nb5/J8GVy7dmDIPA6O0/hDa/MdcLfw7r795n/VnMq
      z9onLfBhApAAEAN3nx+WC9UlI8tKpry4Br3WiEFnxHxuU50EXD0d0GuN1FWfH065UhcOuVgs
      Fk6dOsXo0aMxGAxkZGQ0ej45OZlevXoxfPhwIiIimD9/Pj4+PvTq1YvTp0+zYMECFi1aRH5+
      02XEubm55ObmEhd3vuLctm3bmDNnDsXFxU0Cjo+PD6GhoUyfPp0TJ06QkJCAVqslNjaWHj16
      EBAQYLsTEQShsZsiAEil0kabpGRSCUqZjAZD899sz22wuvBbpEImw2C69JDK5V4MzWYLy/6z
      w3Z8ujIQuPQmsDNpxWxZad3xbDBLgPaXdb7802UYy0ChlGE2XV4aiOEPxXJPXD+MBhOlhTUU
      5NVSnF9FUXYFTq529B8ZSUOdji/f3MKJvWeHeiwgMV79klyNRkNsbCwvvvgiAG+//TZKpdK2
      Q/r06dO2iewHH3yQiIgICgoKWLt2LXl5eZjNZsLDw5sNAM3p1KkTBw8eJDc3l5EjR2Jvb2+b
      r0hOTmbhwoVoNBomT56MTCZj9+7dGAwGampqkMvluLi4iIJBgtCMGxoAJBLo2rUr/+///T8+
      2rCdBMDXxZHnR/RHazBSWFXL/7buw/ynb6CdOwTx3P3/Y+nSpY1u6/uEBPLSvQO59/3vW61/
      FrOFHz/dbTvWRQ+GoEsHgMSELNK+tL7OIpPDyCcu63xvzViFtM66f0E7YAK4eF3yNQVnyiny
      VePi4UCZwY6X11oAe8APCuCz5LO5jlyGwnDrjxKLiW5nfiE3oxS9znjJyfD27dvj4+ODj48P
      vXv3Jjs7G5VKxeDBg9Hr9Tg7O6PX63nkkUdYunQpEyZMQKfTkZ+fT79+/fj999+pr69n5syZ
      rFixgkGDBvG///3vsn4nAJGRkfzzn/9Er9cTExNDQEAAqampmM1mFAoFhYWFmM1mNm/eTHBw
      MAkJCbblvH379mXQoEEsX778ss8nCLeLGxoAVCo1cXFx7N27F7VaDTp4YlAs/9qwi8KqWuaP
      HkSwlxvpRdYJVrlMyh0hgfzxxx/Y2dnZ3sdBpWRiXBfOlN5+E30/fbGX9a+koFDJse/QHkLv
      vuRr5AoZb62chtFgoii3kuy0YnIzSsk6WUzuqRI6xwbRfUAwe39NYfemZJRKJfb29nz//ffY
      29tjsVh4+eWXGTx4ME5OTsyZMwew7my2WCz8+OOP9OnTh8DAQN566y2KioooKipCr9fTvXt3
      Pv/88xYnsWNiYhgxYgRxcXE8//zz7Nq1i927d7No0SLKy8txdnYmMzOTOXPmsGzZMtq1a8eE
      CRMoKiqiXbt2zJ8/n/vuu4/o6GiKi4sJDQ3lzTffbMXfuCDcOm5oANBqtXz55ZeMHj0aVK6A
      dfhHcTYL5t6MHDr7e9oCgNFk5tOtuxklb7zi5snBPVmy6wiP9o++vh/gJmLQGSkrrIbQS7e1
      mC3knS7Dr72b7U9zOYdiBoRgMppJ2HaStLS0Js9v2LCh0fGhQ9ZKb2azmfj4+CbtU1JSmmzA
      u9Dhw4c5fPhwk8fXr1+PWq22Df38+9//BqxzBnv27MHZ2ZmqqiosFgsrV65k7dq1ODg4UFFR
      IXIcCUILboo5gD/7aNt+Xrp3APV6A4Fuzqzen3jR9jHtfJFJJaQWlCCVSlHKZeiNLc8D9OzZ
      k1qlA4fOHg8K70C/TkGkFpTw0+EUTH/KShri486UF17gzJkzrFq1Ck9He+4d2MN2sSypqWPt
      oYtf0G5GRoOJWSM+Q6mSExjqiVu//pg9/JpvHHs3IZ0GcPJILu6mUiyZyZQXNZ8K46+k1+tb
      zMJqsViaLPPU6/WUlzefefZqqVQqRo4cyYYNG9DpdNjZ2TFhwgQ8PT3ZvHkziYmN/64qFApG
      jRrFli1bqKurQyKRMG7cODp16sS6detsaccF4Ua56QJAUXUts5ZuRAI8O6wfKQUlF23v6WSP
      SiHn+RF3EB3kw8yhcfxnc/NL/l544QU8PDw4dDqPQ7l6ugV6c2dkR97ZtJsxMeFMjOvC8n3W
      JZYahZznR/Rn4eMPMWTIEKZOncpXJ3LYlpyJBOjo5cbg8A4tBgB7e3umTJmCWSLlP2fLIDx9
      Zy+C3F2Qy6R88vsBThae3xk9tHNHRg9YQEVxIR9++CFaYMHYwajk1ruhnw6nNFtP4VrodUYy
      ThSQLC/HFOh5kZYycGvHPXeE8tiwIeRmlHBoxymO7s4k/VgeBv3l7WVoy/z8/HjhhRdwdXXl
      t99+Q6fTMWPGDA4ePMjGjRt5+eWXeeONNygttf4/dXV15fXXX8fBwYG9e/dSV1fHpEmT0Ol0
      fP7557z++uvMmzePioqKG/zJhNvZDQ0Abm5uPDplIuHh4dTK7QgobeDImQKGd+uEXCZDLpVy
      qqicMTHh1Gr1HMrK59GBQ4mUa5FIJPj5+fH5iVNsyrV+I3WzV7d48Qf4z3/+Q2hoKJ37DwFA
      bzTRoDeiN5rQGoyN7hy8nR1IzS+hoqKCH374gXfeeQfj0WxOl1j/wU7uG8WSP5oOVZwzevRo
      0tPT6dWvP+SV4OFgR4CbM8+v2oyXowOz7+nDP1dbd0+r5DJGRYcx/8lHGdAjijFjxrCiBFRy
      OfN/3AZwfmnnDVRVVodeJ6NdmDftwrwZO70vdVUNJO4/Q8qhHLr1aY9cIWPNx3+Qerj5Mf5G
      JBDdryMDx3Qlaf8Ztq89ftm7s6UyKRp75TUtb70SRUVFPPvss7b5DoCGhgZ0Oh16vZ76+npM
      f1qBVlVVxezZsxttkIuMjOSNN95Aq9WyYcMGevTowbZt265L/wWhOTc0AFRWVvLVV18BYPQP
      oaHLALQGI7U6PRYL5FVUY7ZY2HjMOv5sMlv4attuNH+sBaxjzcQMs73fS2su/o/pwjKOWaWV
      eDvb8/YD9+CsUfPssk225/Iqquns782DDz6Io6Mj3t7etqWqAW5OqBVyMopaHmJYvnw5Dg4O
      1gCANTOqQiZlVFQYYb4exJ/MsrWVn31fk9nEsWPHeOKJJ3CsKSDAzYmRUWGkFZaS2lp5lK7B
      rvVJJH58iPAegXS/IwTv2K6AAk1wCDHB5/dBDHt2PHHF54eJOreTo1Q0fb+aygY6dfVDqVbQ
      f0Qkve4Mo7TQ+rqywmosQEOtjvoaHRazhYrSWixmC66eDox/sh+ung5sWnqAFf9tOt/Q2kzN
      LC/esWMHL7zwAjU1NWRmZjYahjKbzU2WKf/2228sWLCAQ4cO0a9fP3bv3n3hWwrCdXVDA4DZ
      bLblpDHW1qHXW9McZJdVNWpnMJ3/h1RTr8XYQjpmbQv7BloyrGsnfj1xio3H0gjxduPRO7rz
      741/2M75zPfric5IobKykpCQEExm60VgSt9ovt9zvIWqxc1TyKSYzBbsVUoUMhmyP+17qNMb
      SMjI5Y35LyMxGa07g+sy+d/WfdipFEzpF01CRi4/H7mxY8YWs4XaKi0Hf0/nQHwWDSM6XKS1
      xvbTl8874etuHco6nGZgX/K5egoO7MwzAOeO/ay5/ICgnlJG9VE33w+LxTYPM2JKHPt/SyMz
      qfDqP9hVevjhh5k1axaVlZXMnDmT8PDwi05y79ixg/T0dDw8PLCzs7OlrxCEG+WmmwP4q0il
      UgICAvDx8cHD1YWAeh21Oj0x7Xw5nJVPdJAvtTo9Ps4OeDs5cDynkPYeruTF5zF69Gji4+Ox
      WCx4O9nj5qAh9RJzExfqFuhDakEJKxJOIJVI+O/kkWw4etIWRFYknODXP9bQpX0A0dHRmC0W
      Dpy2jvkn5xXzzF19WgwAzs7OTJ48meN5JWw2g1Iu46nBPfF1caRWq+ej3xKorLcOlTipVcy+
      eyCKbtaKanK5nFc27uPBvlGEeLlhtlhIyMxl84lTV/eLbsbbT69BabTuRyh27kShW+QlXxNo
      X4c5NRcHJw1qOwW4e+Pi5dTMaiUZD77+IHs2JbPjpxOYK0uRGK697sSF7O3tcXd3x9nZmcDA
      QKRSKUajkYiICLKzs2nXrh0NDQ307NmTtLQ09Ho9np6euLi4EBAQYCsiJJfLqa6upnv37qxZ
      s6bV+ykIV+K2CQBymZz+vfqjUqmor6qkb6cwfj6Sikwi4cHe3civrOHLnYfwdLLHTmUdrwj1
      9aDLlCmkpKSwefNm6DYQZzs1n/5+oNHmtAtJpVJGjhyJj48PXTp3Zqp9FVuTMpgxJI46nYGO
      Xq4czS7Ay8mBCXGRfLQtgbExEWjUQ4kM6cAXX3xB+NAJPDj8TpLyS4ht78cPB1tOZT1t2jRq
      a2vx8fGBfCOx7f0wmMzM/+E3Boa3Z3yPzny1yzpfUa3V8c7GXdj9+hUhISGMHDkSs9lM1wBv
      Fq+PR2c0YTS1bpbUrJPFSOutyzcNIT6Xs5mavMxSvl3+m+244a5HsGharGAKBEOfYAa5ZJK5
      dQ+lBc1nNr1aPj4+9O3bl4yMDGJiYtBoNLz33nuMGTOGmJgYVq9eTVZWFu3bt0cmk+Hp6cnA
      gQPJy8sjMjISpVJJeno6995rTUHy/vvvU19f36p9FIQrddsEAL1Bz4oVKwAwOXuiG3g/AJsT
      T7E58fy33dzyanLLrRePnw4ms2X9J43eJ63w0lk/LWYLhw8fRqlUsm37DhoGTaK4uo5ZSzcQ
      6uPB/tN5nC4pRyaRsirBunTwj7QzdCkpYe+O3yguLiY7r5j3N+8l0M2J7cmZ5Fe2vPTygw8+
      ICoqipDe1vKQ2WVV3Ns9nB7t/Yjt4M+OlMbZPut1eqivZ+LEidYduX5d8HN1pEuAN3kV1baJ
      7rZo0NiuzPx/nfltzTE2fX+g1QJBRkZGk5xHAN9++22j4x07dgBQXl7Od99916T9hx9+2Cr9
      EYTWcNsEgOvJgsU2vmuRyWk4u0O55uxKpnOMFjMlZ8tqltbWs2//AVsqCLDuMzRZyX4AACAA
      SURBVChppuxmk/NdcDeiM5pQymR0b++Ll5M91Vpdk9cEBQWh1+spKioCvy58vesIbg4a7owM
      Jqu0giW7jjR5TVuQl1lGTIgXYx7rzdD7ovhtzVE2LT3Y6ncEgnArEAHgFjSsawg/Hkpmd3o2
      /q5OTLujO4t+3nm+gUTCo48+ypIlSwCQSiT8lmxN3rbhWBrvPzS8xQCgUCgYPHgwakdnVpyd
      ux3dPZy4jv7U6fR8ufNwo1rR0UG+jJn9NCZtA8XFxSzZl4y9SsljA2Lwc3EkITOXn1pxM913
      7/7OoWVGxj/Zj259OjDm8T4MuS+a3384yublh1BqFNRUNFBVdmWlL2VyaZsuICQIzREBoI2T
      K+TcfffdhISE4BcWRr5LA6kFpTzUpxsquZx+oUEczykkwteDjl5ubDiWhr+bCwqFwlY43sPR
      jqfGDWF/Zi7hvp4cPdPyipqHHnoIpVKJh48fHCvB3UHDXZHBzF25mU7e7swYGsfCn7bb2vcP
      DWLLl++RnZ1tXUrpFcKTg2M5kJnHx7/vx9Wu+ZU+V8titpB6OJe3nlpJWEwg45/oS9fe1kBw
      18QYlGo5ddValr2/ndzMMox6E1XljYOBXmvEcnZ6XqmSM/7JfnTq5k/8zyfY8N0BLDfBngxB
      aA0iALRxFrOFoqIiSktLMSelUdvlDhJziymuriPCz4M1B5JIyS/BSaOyDQXVa3W8995ntvco
      rq7jk+0H6Oznye8pmRzLbjkAfPvttzg6OjLjmdkA1OkMIIEgN2c6+3mSUdx4b4SPswNqB0fU
      ajXFxcUo5TIC3JzZcuIUcR0DOHbmr1kKabFA0mkjx5YaCUyotK4kAqz1ogHfAeBr/dHfUcr8
      RxzOvs5CXbXWNqwmk0nROKiQSCS0C/Pi6B+Z5Gbc+D0ZgtAaRABo40wmE8eOWSeSTS5e6Jyt
      2eDOlFVypuz8xqTqBh3VDdaLX0VdPboLUhAUVNZQcJGJ5nMunG8wmExU1+t4oHdX/Fwd+WLH
      oUbPb03MIDQsnKEDB2A2m/nfpnjaubsQ094Ps8XC5L5RzPzmlyv/4JfBolRhcvEmqxRsBX+a
      4eFkorri/IqcEzlSymv/vNz0/ByKqWNXDCbrEmBZRSHSKhEMhLZLBADhmnRv50dmaQVf7jyE
      XCrlvYeGc/BPE907T2aRsG0V0vpqXn/9dRRqDVmlFXy3+ygWIMLPE0e1khpt66/dv1xlhTU8
      1vf/bMeG/mMwuPk331gTAd3OVolL2iMCgNCmiQAgXDaJVELXrl3x9PQkwM+X3nVqCqpq6d8p
      iMNZ+UT4elJQWYO7g4YBYe1ZeyiFl+4dwOGGDNQSCxqNhrLKKtIKSnl8YA+O5xThYqe+oRf/
      5ojJXuF2cbGdNYLQiAQJ9vb2SKVS1q1bh5NGTVFVLa/8+DsRvp4UVdfy7427aNAbbXMBn24/
      iIOTM0qlkgULFmA2mfl85yFOl1TQyduNeT/8domzCoLwVxF3AMJlM5vN7Nu3DwCLXEGDqiMA
      OeVVLNt33NauXm/geE4RAGW19azf9qttJzCA2WKxLTu9HB4eHuSc/VkqkdDJ2w2d0URWMxXg
      nJyc6ODZhfT0dM5lhvJ1ccRJrSKtsPSK8jddSkSPQM7knLgt0mELtyYRAISbVlhYGDNnzsTO
      zo7Jq3YhkcC/J91DZkk5ThoVOoOJ9zfvsbV/sHdXeg4I4XRKEs899xzTX11M7zBrKozciirM
      5lDe+1P7axU7JJTB4Qa+fGML5lZOnyEI14MIAMJNy2w2M2/ePF566SUANAoFUgl8/Nt+1Ao5
      b91/V6P2G4+l8eOOH5EVncHb2xtXVzfGxkTw8pqt1OkN/HvSPdblsA1Nd0ZfrbsfiKGqvI5V
      H+2iVW8vBOE6EAFAuGmlp6c3Oj43tPT19PFolAo+2pbQ6PmqBh0aqZSpU6diMpkoLCrEgoWG
      s2nCy2rrsVMqWi0AnDqRj7FPEPc92Z/q8np+XXbo0i8ShJuImAQW2gwHtZLO/l48v3Iz/1y9
      leFRoY2eVynk/OvV+VRXV/P2229jsVjO1g6wPi+TShrVfL5W+zansvS97SCBR+YOpf/IS6e5
      FoSbiQgAQpvhrFFhNJkorqkjp6wKFzs1CpkUN3tr8Zlp/buzc+MvrF271laNq15vINDNGZVc
      hp+LY6sO/1gsFjZ8d4B1X+5DoZIzfcEwovperEiOINxcxBCQcNO6//77CQsLw8vLi4UT2/NN
      QhJphWUsvv9uZFIpaw8lI5dJefqu3iz8aTsejnaEDRpM39gYAP77wwY+3X6A50fcAcCaA0no
      jFdWNe5SLGYLqz6Mx8FZzd2TYvj7v0azeMYqMhJFtS/h5icCgHDTWr16te1na0EYBzKKy1HI
      pJgtFttwzrnkc4t+3okqYQOyojMAGH3aow+q4R/LNiGTShqVFj1HKpHQIySInP1OVFdX06VL
      Fzxiu2J29gTgaHYBhVW1jV7jqFbSKziQPakJBAYGEh4eTsERKdr+TvgFuvKPd8fxxpMrKMhq
      uWb0lVCpVMTGxtpqCA8YMACVSgVY70Li4+PR689vpouMjKRbt27s2rWL3NxcZDIZffr0ISAg
      gAMHDjRb10C4PYkhIKHNMZjMVzSWb7ZYmr3426uUvH7fUF4cdxcBAQHW9zYY0BqM6AxGHujV
      FU9H+yave3JwT6YP7IFGqcBoNKLT6aiqqOH4ljKMZQ74BFmDgItH09deqQ4dOvDGG2/w7LPP
      2h7TarXodDr0ej3Tp09HLj//PS4kJIQpU6Zw8uRJ5syZg5OTE+PGjaNLly4kJSXxzDPPWCvH
      CQIiAAi3Mb3RyLu/7mb90ZO2x06ePMmOYykcPpNPrU7HidyiRq/p2cEfrcFIytma0AUFBcTH
      x7Nnzx7c3d2Z/egisk4W0bGzD2+tnMYz/xqNfwf3q+5jaWkpr7zyCmlpabbH9u/fT3x8PDqd
      jq1btzYqLTl48GC+/fZbDh8+THx8PFFRUTg6OnL8+HFSU1PJy8tDo9FcdX+EW4sIAMJty2Ay
      U17b0OxzD/WJYune440eUyvkPNi7K0t2HW6y5r9nz56czMknI7ea9+b/TlaeDqPKgU79OnPP
      E0Mw2znZ/lzJOqSampoWawdPmDChSWF5R0dHysqsZUtzc3Px8vJi06ZNPP3007z//vs4OzuT
      lZV1BT0QbmViDkAQLuCoVtI1wJuPf9/f6PFJcV1QyeU83CeKqCBfxg3pz6rUg5jNZkbf/wCv
      HcxBe+dkTgEz//vni7Yn3DnZduS09UuM17gaKTo6mqysLCorG6fD0Ol0tm/4zs7OVFdX8/DD
      D/PKK69w6tQpHn/8cXr06MHBgwev6fzCrUHcAQi3LZlUgqNaiVqhwM7OznbhvD+uC2sOJtna
      Bbk542KnZt2RVN7aEM/G42lkFpez51giJpOJ7t27k11YRFlt89/UL7TwmylMmNkfnyBXpFLJ
      RdsqlUocHBxQKBS2/4K1Mtvy5ctt7cLDw5HL5Rw+fJgRI0bg6OjIwIEDSUpKQq1W2z6fWq22
      vUdz3N3deeqpp3BycgJAIpFw1113sWDBAmbMmNFovkEqlXL//fczf/58pk2bhlKpBGDmzJk8
      88wzPPPMM/j7t5BWW7gpiDsA4bbl4+zIg727YieFgQMH4ufnx/r169FZYEfKaVu7cD8Pssuq
      SC0opbJeC8DvKZnkFJdhsVhwd3dn1apV0O3uyzpvUKgnYV29ue/JfiQfyOaPDUkc2J5ObeXZ
      4SgJtiGm7t2707t3b6qqqnj88cfZtWsXKSkp7N271zbUAxAXF0dOTg4JCQl07NiR5557jp07
      d5Kfn8/HH3/M1KlTGTlyJJmZmbaEfk1+Hz4+PP300zg7O2NnZ0d1dTWxsbF07dqVxYsX4+bm
      ZttfAdCjRw8CAgL417/+xdixYxk1ahS//fYb3t7efPjhhwBN7lCEm4sIAMJtK6+imnc27UZS
      X4Nm23e2x5fuOozZK9B2vCWx6bLJDcfSUOgNKIAtW7Zgtne+7PP+9/l1DBoVQVS/jnTr24Go
      fh2prWrg4I50ctNLiYxrx6Gd6WxbfZSEhAQSEhKavMfatWsbHX/77bfn+790aaPnysvLef/9
      9y/Zr6KiIl5++WWeeeYZ22P9+/dn69atdO7cmdOnTzcKAOXl5Tg6OuLs7IyHhwdHjx4lICCA
      yspKZDIZ5eXlGAyGy/69CNefCACCcJ3t/y2NA1uScfN2pNedYQwc05UOnX0YNKabrU1Uvw7Y
      OarZvTGZ0oKq61Kk5sJynwB+fn6MGDGCrKwsZsyYwSuvvEJhobVmdGFhIW5ubsyYMQNfX19W
      r16NTCajpqaGBx54gPDwcN544w1ycnKavK9wcxABQBBukPKiGjYtPcimpQdpH+HNsAd7MHRC
      NBKJBKlMykOzB/HQ7EGUFVVz8kgeaUdzST6QTXZaMcbrVLWssLCQ5cuXk5+fT0VFBV27drUF
      gNGjR7Ny5Ur27t1LQEAAjz76KG+//TZffPEFYB2WGjhwIN9///116atw5UQAEISbQFZKEd+/
      u53ATp6ERQeQk15CSUEVYdEBuHs70XeYE32HWWsRN9TpST+eR/LBbNKO5pGTXkL3AcE4udqx
      c90JKkpqL3G25jk7OxMUFISPjw8RERHI5XK2b9/OjBkzWLJkCYMGDeKzzz5j8ODBJCcnc+bM
      GYYPH05hYSEjRozgzJkzDBkyBFdXV5KSkhg7dmyTZarCzUUEAEG4SdRWNTDvoW9x93WkvLAG
      s9mCVCohINiDzj2DCI8JJDTKH68AF7r16UC3Ph2swzYWrBPHQJ97IvjklQ3kZJRivMJKZfb2
      9nTo0IF9+/bh6OiIh4cHhw8fxmQyMXToUJYtW0ZWVhaOjo7odDr27NlDfX09gwcP5ujRo+ze
      vRupVModd9xBr169WLFiBcePH7/0iYUbRgQAQbiJWCwWSvP/VD7TbCE7vYTs9BJ+XXYIqUyK
      u48jETGBhPewBoSAEA/kchkAwV18+dfqx9DrjGSnlZCZUsiZk0VkpRaTk16Mtr7lSdn8/Hx+
      /vnnJo8fO3aMY8eO2Y5PnDhh+/no0aMcPXr0T/01s3PnTnbu3HlNvwfh+hABQBDaELPJTEle
      FSV5VcT/kohMJmXYw7FMfX4oUpmUnFMlKFRyvPycCY32JzTaug7fZDJj0BnJP11GdnoJmUmF
      aOyVDJkQTcaJfL58YzNVZZe3j0G4dYgAIAjXwMnJiYcffpicylpW1UGkvxcT47oAoJDJyCqt
      4LMd53fd3hUZzD1xr2Kv0bB582a2bdtmW0UjkUhYu3btFe3SNZnMbPr+ACkHs7F3UpN6OAck
      EhxdNLQL86JDhA8dI30IDPbAO9CVjpG+dIz0ZdDY8yuOvANccPd1IjHhDNlpxRSeqaA4r5Ka
      yubTZAi3DhEABOEaPPDAA1RUVODjGwgZdaTkl/DWL/EAPNina5NU0hqlgsX/WojFaOC1114j
      Pj6edevWUVhYiIuLC3Pnzr3iNA1ms4XM5MJGj5UX1VBeVMOReOseBoVKjp29ksBQL4I7+9Ax
      0pc+w8KRSq3JAMKiAwiLtmZENRlNaOsNlBfVkHOqhJyMUnJPlZCfVU5NZQNRfTvQMdKX39Yc
      JSu1cbI8oW0RAUAQrsFnn31Ghw4dGDrGunHMbLGgNRpRK+T07BDA09+vb9T+5yOpaOrr6RvX
      k5qaGnQ6HaWlpXTs2JGBAwdy+PDhv6SfBp2RKp2Rqn1ZJO7LAqAweyCDxkWRe6qEfVtT8e/g
      TkCwJ14BLrh5ORDYyZPATp629zAaTOi0BuwcVEgkEvoOj2DO2C+aXXVkkSkwO7pesl8SiwVp
      VcllfQYHBwdqa8+fy97eHnd3dwoLCxvVQwBwc3NDo9FQWFiIyWSdDPfw8EChUFBUVNRoQ9vt
      TAQAQfgLDO8WyrakjCZ1C+RSKU8++SSujg68++67WCwW3NzcGD16NB06dGDFihXXrY/LP9jJ
      z0sSaKjVYf5TP5VqOfZOarz8nAkI8SQwxIPAkLOBwdsRydkiy06udry3bjpJB7PZ+2sKiQln
      qCqrA8Ds7IGu/7hLd8Kox27jFxdt4u3tzWOPPUZQUBAzZswAoFu3bjz00EO2hHh//r2NGTOG
      yMhIampqaN++Pf/85z+ZMGECgYGB6HQ63NzceP3118UuZUQAEIRWp5LLuDOyI/9YtqnJczOG
      9KQ2YQuff/x/tp23+fn5vPPOOyiVSv7973+ze/fu6/YNta5a2+QxvdaIXltLRXEtJ4/m2R5X
      quV07x/MjDdGYe+oorSgGmd3e3rfFU7vu8KpLq8n+WwwOHZKR3Er9dHHx4c1a9bw2GOPAdYE
      dRMnTuStt96iqqqqSfuNGzeybt06ABYuXIizszNr1qyx3SW89tprODk5NcqldLsSAUAQrpJc
      LmfYsGEEBQXRpXM49zrVsiXxFEM7B7M7LRu90Tr00M7Dhb4hgSzfd4JR0eGsStjCxIkTqaur
      49ixY0yaNImkpCTc3d0pKyu7aYcn9FojCdtOciqxAN92rpw6UYCHnxM9B4fS664wgkK96H13
      OL3vDudgUj2vfHttKa/P+fMSVAA7Ozt8fHyYNm0aDg4ObNmyhf37z6fuNhgMjBkzhqioKIqL
      iykrK0MikTB+/Hiio6PJzMykvLx1ynW2dSIACMJVMpvNZGZmkpOTwx+Hj1MXew9Gs5lDWflU
      1p9fQVNcVcvO1CwAnl2+CbsTiWAyYjAYyMvLY8WKFXTo0IGioiJrVtEWnKvt6+/vz8qVKwFr
      +uapU6fi7OzMr7/+yt69e23tg4ODmThxIlKplG+++Ybc3FyUSiWTJ0+mffv2HD9+/Kp26pYV
      VlNWaN2rkHuqlNxTpaz7ci/+wR7EDu5Er7vCkMkvPf5/taRSKZWVlbYUEwsXLuTIkSONhnSy
      srKQyWTExcVhb29PbW0tp0+fRqFQ0LlzZzQaTYuFdm4nIgAIwlUym82kZVhLNZrtndH6xQBQ
      VN14UrTBYKShsgaApLxiNElJSExG2/O5ubnk5uZe8nz33XcfDg4OhIaG2gLA7Nmz+f7778nK
      ysLe/nwNYqlUyvTp03n33Xext7dn1qxZzJ07l8mTJ5OXl8e3336Lm5vbtf0C/sRstpCTXkJO
      egnrvtiLU1gn6HRnq73/n9XV1WE2m9HpdNTW1tqyj8pkMrRaLfb29rbNa05OToSHh5OcnMyR
      I0c4cuQIs2bNwt/fn/T09L+kf22JCACC0EasXr0ai8XCm2++CVjLP0okElQqFRERESQlnS9i
      o1KpMJlMlJaWUlJSQn19Pc7OzoSHhxMfH09sbGyjHb2tyWy2UFZUA51a5/3GjBlD165dCQsL
      Y968eaxatYpVq1axcOFCKioqOH36NCaTiddff50XX3yRKVOm4O/vT11dHS4uLqxatYqZM2fi
      4OCAwWBALpeTnZ3dOp1r40QAEIQ24sJ0za6uroSEhBAeHo6bmxvDhg1j8eLFADQ0NJCdnc38
      +fOpra0lKioKBwcHAgIC6N+/P7W1tUybNo0ZM2bc0DkHpUrBtH/exS9fJ1BaUN1sm3Xr1tkm
      df/s+PHjqNVqqqutr3vxxRcB+OSTT1CpVCiVSmpqrHde77zzDhqNBqlUSl1d3V/0adoeEQAE
      oY0qLy8nLS3NNm/w5ptvolAobGPhn376Ke7u7pjNZry9vSkuLSU3P59vvl+G2WKhU1g4Lh6e
      lJVdMCFqMSMxX1kiuaslk0sY+Ugc/UZEsuqjeHb+dAKd9vKWZ+r1+ibr/8/R6XTodI0noRsa
      xM7mC4kAIAhtRHh4OA4ODnh7exMbG0tSUhImk4nhw4dTV1eHVqtFrVYzatQo1q5dS2xsLHV1
      dcTExHDq1CnqfYLZa3Dgsfc+Z0dqFn5xfchPrMB8wZ2FtKII9a4frstnMhrMHNyeRsyAEJ5Y
      MJxx0/uyefkhNi8/RENd8xd3ofWIovCC0EY4OTnZ6g+7u7sjk8ls3/o9PDx4++230ev1nD5t
      rWdcWVlJXFwc+fn5tiItS/ce53hOEbEd/Pjn6q1NLv7Xm0FvZPHM1bw6bSl5maV4+Dox+bkh
      /O/XGYz9Wx8Gje3K8IdjcXBW39B+3qrEHYAgtBF/Xuv+ZxemcD6XnvnUqVOcOnWqSfudJ7PY
      eTLroueSy+WMGTOG3r17M3fuXAA8PT2ZPXu27b2XLFliay+VSnnmmWfw8vLCYDDwxmdfo8Na
      pmDh+CGkF5Xz3e6jzZzJKvlANv+49zN63xPOvdN6E9LFl8nPDbE933NIKK9PX47FfGMD1q1G
      BABBEJro06cPDQ0NjSaen3zyST777DPOnDljSwdxzt13301OTg7/+c9/kEgkGF19ABjWrRMN
      eiMudpf+Bm82W9izKYU9v6YQO6gTT7w6HDcvRwCCu/ri7GZHZamYwG1NYghIEIQmdu3axcaN
      G22J1FQqFe7u7sTGxvL444/j5+fXqH2fPn3QarU88cQTxMbGIpGAm72GwREd+OFgUnOnaJkF
      Dm5PZ/PyQ7Zv/KeTC215hoTWIwKAIAiXpFAocHBwIDMzk/3797NgwQJbKmmwpmfQ6XRs2bKF
      CRMmEBEewd/v7MU3fxzFYgGZVIL0gruGS1n7+R7ee/ZHTEYznv4uqO2Urf2xbntiCEgQhEtq
      aGigoqKCxMREDAYD+fn52NnZ2dIz5+bmcvr0abKysti6dSvhnYKRSiTcF9sZZzs1Id7u7DuV
      y76MnMs+p9lk4cD2dArOlOPf0Z2I2CAO72w6pyFcPXEHIAhCE/3792fatGlEREQwbdo0AgMD
      +f3335k3bx5TpkwBoL6+ngULFgDWXcqzZ89m4sSJjBo1ivg9+3j1p+28tm4H/9u6j21JGVd0
      8T/HqDexb0sKEomEO0ZFtupnFMQdgCAIzUhMTCQzM5PNmzcD1k1nWVlZJCYm4urqysqVKzGb
      zXz00UeANaX1vHnz6NixI1u2bKFMqrG9V055FUvir77QzZ5NKYx+rA9R/Tri4mEvJoJbkQgA
      giA0UVlZSWVlZZPHL0xcV1paavu5qqqKI0eOWA/czgcAk9lCre7qN3XlnCrhdHIhYd0DiO4f
      zI6fjl/1ewmNiSEgQRBuahYLxP+SCMAd93bhCueShYsQAUAQhJveoR3p1NVoCYv2xzvor6s1
      cLsRAUAQbiCLQoVZ43jJPxbF7Z0KobSgmqT9Z1DbKelzd/iN7s4tQ8wBCMINZAiNxRgcdcl2
      suwUVEe3X4ce3bx2rU+i55BQ+twTwS9f78douD4ZS29l4g5AEIQ24fie01QU1xIU6kW7MK8b
      3Z1bgggAgiC0CXXVWg7Hn0KukNF/pNgT0BpEABAEoc2I/zkRs8lMr7vCUGkUN7o7bZ6YAxAE
      4aJM3u2wKFSXbCctL0Ra33xZx9ZyKjGf0ylFdOjsTcyAYPZuTv1Lz3erEwFAEISL0of3wuLs
      ccl2ysPb/vIAoNca2brqME+9NpIRU+JEALhGYghIEIQ25eD2dGqrGgiO9CEw5NKBSWiZCACC
      ILQplaV1HN97GqVaQS+xJ+CaiAAgCEKbs/OnEwD0HxGJVCZyQ1wtEQAEQWhzUg7lUJJfhW87
      N0KjAm50d9osEQAEQWhz6mt1HPgtDZlcKuoEXAMRAAShDTK5eGFy9b7kH4vs1l3o98fGJMwm
      M7FDQlHbi3KRV+PW/dshCLcwXf/xIL309zfVztXIqkquQ4+uv9PJheScKiGwkxdRfTuQsPXk
      je5SmyPuAARBaJMMehN7fk1BKpUwcHTXG92dNkkEAEEQ2qzdm5Ix6I107dMeZ3f7G92dNkcE
      AEEQ2qzi3CpOHslFbaek151hN7o7bY4IAIIgtFlmk5ndG5ORSCQMGN3lRnenzREBQBCENi1h
      20ka6nSEdPPDv6P7je5OmyICgCAIbVp1eT1H4jOQy2X0Hdb5RnenTREBQBCENi9+fSIA/UdF
      IhGZIS6bCACCILR5ifuyqCipxa+dG6HRIjXE5RIBQBCENk9bb2DfllQkUjEZfCVEABAE4Zaw
      6+wwUN9hEcgVshvcm7ZBBABBEG4Jp04UkHOqBEcXO7rfEXyju9MmiAAgCMItwWwys2dTMgAD
      xzRODREdHc1HH32Eq6tro8dnzZrFI4880ugxmUzGwoULWbBgAQsWLCA83Fp0Zty4cbz55pss
      XrwYHx+fv/CTXD8iGZwgCLeM+F8SuX/mHcQMDCY0yp+0Y3n4+/vTp08fSkpKkMvPX/L69u2L
      RqNBekFSPYVCgUQiYdGiRQCYzWbat29P586dmT9/vu2xW4G4AxAE4ZZRXlyLTmtAqVLw2vdT
      iBkYQl5eHh9//DFVVVW2do6OjowcOZIVK1Y0eQ9vb288PT258847CQgIwGKxEBcXR15eHg89
      9BB33HEHkltkrakIAIIg3DJCo/zQ2KsAkMtlxLWQH+jRRx/lxx9/xGAwIJVKG90FFBUVsWTJ
      EnQ6HbNmzSIuLg4nJyfUajX/n737Do/rKhM//r3Ti0a9d8uy5d57i0uK0wgplAQCLFlggd+y
      tKUsLLvAsrssCWEJhF1gCSGQQjHpcU3c5S7LVrXVe++j0bR7f3/IVixLMyMnLorm/TxPnie5
      mjP3zkS67z3nvOc9x48fZ8mSJWzduvW6fJ5rTYaAhBBTRsWZZjqae4lPiUJVNY7vGbtHgNls
      JjIykltvvRW73c6cOXM4evQoBw8eBMDr9XLs2DEAWlpa2LRpE5WVlRiNRsrKynC73dx+++3X
      9XNdKxIAhBBThnvIy/cfeY6fvPYZ3C4PZ/NryMrKYu3atSxYsID777+fU6dO8YMf/AAYHu55
      6KGHOHjwIA8//DD79+8nOTmZLVu2cO7cOTZs2MAvfvELqqur+eEPf4jFYmHRokVs27btxn7Q
      q0QCgBBiSmms7sTt8mK1m7E5zHR0dJCfn09+fj4A/f39I6/t6OjgqaeenJioWAAAIABJREFU
      AuD111+nv7+f2tpa6urqSE1NZf/+/bS1tQHwrW99izlz5nD8+HHq6uqu/we7BiQACCGmnJa6
      brJnJZGUEUN5QQPV1dXjvs7v99PT0wNAZ2fnyPHm5maam5tHvXZgYGBkaGiqkElgIcSU0940
      nPGTlBF9g69kcpMAIISYclrrh5/qk9IlAAQjQ0BCiEljaO29MIEUe1PBm+icvQF/3tYwHAAS
      JQAEJQFACDFpqLHJTKigv94Y9MfNdV1omkZiejSKApp2lS5wipEhICHElNPR1IemacQmOtBL
      ZdCAJAAIIaactsYeNFUjPiVSSkMHIQFACDHluF1e+roGMZoMxMRH3OjLmbQkAAghpqSWC5lA
      KdmxN/hKJi8JAEKIKam1vhuQtQDBSAAQQkxJF9cCJKZJAAhEAoAQYkpqaxwOAAmpUTf4SiYv
      CQBCiCmprbEHVdVISI1Ep5db3XjkWxFCTEmdLf2ofpWYRAdGk6SCjkcCgBBiSmpv6sXn9RMd
      H4HFGnzlcLiSACCEmJI0VaO9uQ+dTpGaQAFIABBCTFltF1JBJQCMTwKAEGLKamu8uC9AzA2+
      kslJAoAQYsq6uBgsMU1SQccjAUAIMWW1NfaMlIUWY0kAEEJMWe1NfcOpoAkRkgo6DgkAQogp
      q7OlD59XJTbJgVlSQceQHcGEEO9pvqQsfNPmj/uzIeBffzeITq+jL2cFuoL91/fiJjkJAEKI
      9zTNGoGamBnw54VVKqCis8dhuX6X9Z4gQ0BCCBGmJAAIIUSYkgAghBBhSgKAECIs6A16FJ1y
      oy9jUpEAIIQIC1GxNswWSQW9lAQAIURYiIq3Y7FJALiUBAAhRFgwmQ1Ex0fc6MuYVCQACCHC
      RnKWVAW9lAQAIUTYSJKicKNIABBChI2kdOkBXEoCgBAibCTIvgCjSAAQQoSNuORIDEYpC32R
      BAAhRNiIjLFisZlu9GVMGhIAhBBhIzLGhi1CAsBFEgCEEGFDp9eRkCaZQBdJABBChJWkDAkA
      F0kAEEKEleQMSQW9SAKAECKsSCro2yQACCHCSkKqBICLJAAIIcLCYL8br9tHdHwEZqtUBQUJ
      AEKIMNHb6WTI5SUy1obdIdvDgwQAIUSY6Ot2MTgwhNVuIiJaAgBIABBChA2N9qY+FEUhSTKB
      AAkAQogw0lrXDUCiZAIBEgCEEGGkrbEHQHoAF0gAEEKEjdb6CwFANoYBJAAIIcJIa0MPmqYR
      nxqFoig3+nJuOAkAQoiw0dvpZGjQiyPais1hvtGXc8NJABBChI3eTicup5uIKCsRUZIKKgFA
      CBE23C4vfd2DmMwGouMjbvTl3HASAIQQYaW9sReA5EzJBJIAIIQIKy0X1gJIVVAJAEKIMNPe
      NNwDSMmMvcFXcuNJABBChJXmmi5AegAgAUAIEWY6mnvx+/zEJTkwGPU3+nJuKAkAQoiwMtA7
      xOCAB1uEOexTQSUACCHCSl/3IIP9Q9giLTiirTf6cm4oCQBCiLDi96l0tQ+g1+vCfntICQBC
      iLDTVi9VQUECgBAiDLXWX1gLID0AIYQILy0XAkC4rwaWACCECDttDcOLwcJ9LYAEACFE2Olu
      78c95CUqzo7FZrrRl3PDSAAQQoQdZ98Qzr4hrHYzkbG2G305N4wEACFE2HH2DTHQ68JiM0oA
      EEKIcKJp0NHch6IopITxRLAEACFEWGquvVgWOnw3iJcAIIQIS+2Nw4vBwnktgAQAIURYar2w
      Gjic1wJIABBChKW2xh40TZMegBBChJv+bheuAQ/2SAuRMeGZCSQBQAgRlgb6XPR1D2KxGYmK
      t9/oy7khJAAIIcKSZ8hHb5cTo8lATELEjb6cG0ICgBAibLU3DtcECtey0BIAhBBh62JZ6MQw
      LQonAUAIEbbaLvYA0sNzMZgEACFE2Gqu7QLCdwjIMNEXKkBOYixJUREMebzUdfbSMTB4DS9N
      CCGurY7mPvw+lbhkBwajHp/Xf6Mv6bqaUA/AqNfxD7euZkVOGqARY7fysXWLuHtRXtB2dpOR
      T6xbzNoZmUTbLHzx1tV8fN0iDHrpeAghbjzXgJv+Hhdmi5GouPBbCzChO3F2fAy1nT08d+Qs
      h8/Xs6ekih9vP8zM5Pig7e5fPpeSpjbSYiL5+1tW8ZcTJbT0DLB+ZtZVuXghhHg3XE4P/T2D
      mKzGsEwFnVAAaOt3kpccT3Z8NBFmE9E2C+tmZuLxB+8umQx6zta38nrhOXSKQn1XL8WNbaRG
      O67KxQshxLvh8/rpbO1Hr9cRnxJ+mUATmgPoHRziNwdOcfuCGViMRlRNo66jh1++dTxou36X
      m4RIO3WdvWw7UQLA9KRY6jp7g7azGA0MeX0AxNgt2ExGWnoG8GvaRC5XCCFC8mXOQjNZ2VGo
      cN47RHv0TLy51jGv07fUoBvovgFXeO1NKAAoCjjdHp4+eBq72cht82dgNRkw6vW4fYF7AS8W
      lGHQKQCcbWgFoLG7j/oQAeAjqxfyf/tPMj0xlr9Zv5hzLZ04rGZ+vvvoRD+XEEIE5c1ZhBYZ
      y75a2FfrAtJhTvqY1ymugSkbACY0BJQZG81dFyZ8P71xOedaOiht6uAzm5YHbTc7JR5VHX5q
      Xzk9nW/ctZ7l09Lw+tWg7SzG4bi0Pi+Ln+zM53eHToOmEWWzTORyhRBCTMCEAoDZqMfl8QKg
      oVHU0EZ5Swc+NfgcwJy0RMxGAxajgY2zpvGj1w/S5XSxIS87aLuMuEiWT0sjwmxi0D18XqNB
      j+fCsNBEGPU6FGXCLxdCiLAzoSGg6vZu3r9kNr2Dbnx+lbSYSNbOyKStzxmyrV6nkOCwc761
      E7+qUdbUwdqZmUHbPLnnGNnxMbT2DeDx+bEYDZQ2tuPy+gh0T8+Kj8bnV2ns7uODK+aRHhuJ
      Ua/nd4dO09zTP5GPKYQQYWVCAcDrV3n0jUOszEnH6fZw89wcTtU0cbahLWi7+s5ePrFuCdE2
      C0cq6wFYMT2dUzXNQdt1O4dIifLx8qkyfKqKT1UprG9BpygEmgZePzOLXUUVmPR6MmIjeWz7
      YawmI49sWMLPQswd5CXHszAzGZNeT21nD/kV9fjU4MNUN4oCAb8DIcS1pTpi8cxeFfJ1it+L
      +eSu63BF786EVwKrmkZ+ZT35F27kigLxEbagq4EPnKvlwLnaUcd2nDlP35A76Lm+edd69pRU
      8c/3bOIHL+/F5fVxx4KZPHf0DEMB2jT39JMdH0OXs2nk/e0mI341+O3yY2sX4fX7OXS+Dp9f
      ZU5aAt+/fwvf2bYHb4AgkBkXxee3rOT/9p/kXEtn0Pe/1N+sX4xBp+OZw4UjWU6hGPU6Prt5
      BQa9jm0nSnhw1QIMeh0/2XGY/iHPhM8thHj3NJMFNTk79As9we9xk8WEA8DlzAYD71s8i98c
      OHVF7aYnxdLtdFHT0RPwNY3d/ewpqaK6vZtP3rR0Qtk/e8uq+cS6xWzIy2JBZjJRVgsWo4HH
      dxwO2EYBEhw2Htv+9muaevqxmUxkxkVRGeDmbjEaOHCultW5Gdy7dDY7zlZwuq4l5DWajQZ2
      F1Xy5a1raOkZYNvJEnoGA4W0YbfOy+XguVpaegf45t0b+Iffv06s3cqDqxbwy70nArZbnJXC
      fcvmMOj2Mjs1gbP1LRytbGD/ZQFZCBG+3lEAMBv0WIyGK775A7T1OUcmlANxWEwoClS1d1PV
      1sUjG5ZgN5uCtvGrGv+3/xQ6RbkwVKSFfPrXgPb+QT60ch5HKhrw+v3MTk1gVW46b5w5F7Tt
      kNfH0wdPY9TreN/iWdyzZDYvniylsD54IKhq7+bfX9lParSDT21chtPt4XcHTzPgHv9p3m42
      0dI7QEf/IF0DLlRNo8vpCvp9KMCWOTn8y7Y3UTWNL9yyiid2HeFzW1ZS0tROR29f0GsUQoSH
      CQUAg07HN+5aj6IonK1vYXZqAi6vj4auPv58vDhgO0WBxZkpdA8O0dY3wNb5M2jo6uNoVUPQ
      8207WYLDYqbP5eaNM+eZl5bIwsxkvL7A4/J6ReGjaxaSHhdFWrSDuq4+6jt7eDb/TNAx82cO
      nWZ2agIrp6ejUxQau/v4zl/enPAcgNev8pcTJbx6upys+ImXlG3q6edHrx8kPSYSo0EHAXqM
      B8/V8tktK/D5Vc42tPK5LStIcNj407HA37vGcEDUNA29TsFsNKAxPJkfG2ENGAByEmJIjLRz
      pLKB9TOzuG1+Ln5V45WCMk7UNE34swkhRvNmz0ONTgj5On1rLYbmqutwRcMmFAAy4qI4U9/K
      ywVlfO++zfzHq/sZ8vj40tY1QdvdvmAmcXYrFqOB2Agr206UsGXOdAY93pGFYeO5fFy9qLGN
      +q5efKoaMAto85wcajt7+d2h09y5KI/SpnYSI+08sHwufwoSpGLsVtbNzOKt0mpsJiNbF+Ti
      9vk5FiRI1XT00Ng9OrPI7fOHnA944WgR6mWrmRu6gz+NN/X0828v7UVRFIa8PtJiIhny+ugM
      UYn14LlavrR1DWaDgV3FFQD0DAYfejMZ9Ngu9CyW56Tx3RffAuDLW9cEDQA6ReF9i2eNZF6p
      msbu4kqKG4MnCQgRLtT4VPypuSFfpww5YbIFAK/fT5TVjEGnw2I0EGkx4/b6MeiCLyNIiYrg
      D/lniLKauXvxLM63duF0e9kwKztoABjPQ6sX8ut9Jwg0dRpjt3L4fB0a4Pb6iDCbyK+o5wu3
      BJ+xf2TDEv58vJj3LZlN18Agv9hznE9tXEpZUzt9g65x22TERvF3m5az/ex59pZVhxxquugj
      qxcA8OKpUhq6JjYMs3FWNptm5/ByQRkna5poDBEwLjpe3cip2iYUFNJiI1mZk87puhY8QVZu
      A2TFRREfYcPrV/H6VQw6HaE+3ifWLaawvoXtZ8+jqho2s5G/vWkpTrcnYMCJMJvYMCub1wvP
      kR0fzWc3r6DXNcSJ6iZ2FlUEPZ/NZGR2agImg54up4uKlk4pEyLEOzChANDY3YfH7+frd67n
      twcK+NDK+cTarbx8uixou16Xm3UzM4mLsBEXYSMl2sGq3AwqWieeOaNTFCLMJn7x5jGAgD2A
      XcWV/N2m5dR39TIzOY5/e2kfkRZzyKdQr1+luqOHwroWvH4/fUNuzja0khrjCBgA9DqFt8qq
      AfjmXRs4fL6eA+dqQq5w9qkqfz1Rwn3L5mA2GPjryVJqOwM/kQPodDpeLigjKz6arfNnsP3s
      eU7VNhHqfvf5LSt4cs8xFmQksWVuDkcrG/jSbWt4bPshhvzjh9Gajh4yYqO4a1EebX0DAExP
      jOVIRX3Qc8U5bBTUNo/0bjyDfo5WNpAS7QgYAPQ6hVj7cN2VOxbO5N9f2Uevy8237r5ppMcy
      npyEGD6yegFHqxrYkJfNieom7l0ymyf3HAuZXSbE9WQ0GklNTaW1tXXcEd5omwW72UhTTz+a
      NnyvS09KZLAhgoGBATSTBdfGD03oXNa9f0TxjH+/CmZCAUDThocvLiptbseg05EeG7x63osn
      S7l5bg4VrV3sLq7kA8vnUdvZw8kQ48kfW7uI7PhoCmqbmZEch9evMjDk5qkDBQHbdDtdPPbG
      ISIsJl446sbrV/H4/ewpCd6d8vj9PLB8LpmxUQy4PfS53KybmcW/v7I/eDvf8HsfKK9l6bRU
      vnbHOvaXj017vVx7/yC/ePM4cRE27lgwg6Soufxm/ym6nIH/5zndHradKMFmMrJ+Zhbfvnsj
      fz5eRGlzx7iv1+sUjHo9GjAvPZHfHy6krc9JhMVEVnw05Q3jT1R7fH7eKq0emf9IcNjpcg5S
      3jL+eS7afuY8X7tjHdUd3fQPeUiLiSTObuW/d+YHbRfvsJHgsGHQ6+h1Df+JhJp7uWlWNj/f
      c4wupwuzwcDZhlZO1DRy16I8nj1yJmhbIa4Xh93KD37wAyorK5k7dy7/9Fo+lz6Kfn7LSlKi
      I/CpKl6fyn+8up8v3rYaW8800u/ZzBNPPEFVYwtY7BM74Tsse/COsoA0bfjJ+Y4FM/n5nsAp
      mj5VZfvZt5/m/uet48Q7bCxITw6aLZPgsPG9l/byla1r2HaylOr2bv5u83IcFhMDQerIefz+
      UTfSOWkJJDoi2HvhaX08v953kvnpSewqqsBsNLB2Ria/fOtE0Dx9VdPwXXja9/j95FfUc7yq
      kXhH8A0lLh1+6RwY5JnDhcTYLEHLavv86siT9aDHy46iCvaWVRNpNQds41c1XF4vK3LSae1z
      khLtwKDTsXxaGvvLAweonMQYkqMiOHiujlvnTWd2aiIKcKq2mf3lNQHbnW1opaKtk+TICEwG
      AxWtnZxv6Qw6+T7g9lDc2MYdC2eOrGyLMJto6u5D0wL39LqcLrLjo3G6PeQkxpJfWY+CgjHE
      JkNz0xIpbmxDryjcsXAmiZF29pbVUNnWFbSdEO/Emlk5vPXWLt544w0WLVrEB//mi/xsz7GR
      n79WWE5NRw8K8OiDW8mOjybGZuV7P/0TeZ527rvvPh594slrfp0TCgBxEVa+fud6ai+r4pkZ
      ogcQaTVjNxlHHcuIiybeYQsaAC7OLeh1OowX/j3YKuBAKtu6qesIXnnU4/O/3SNxufnryVLm
      pyfR1ufEE+BptKa9Z0xFU5+q0tI7EPRcLxw9O2YSuDvEOoCjlfVj5hjcPj/t/cEngZ/aX8BN
      s7KZm56I1Wikpbef/9t3MmgKrkGnw2QY/pVYkJHM4zsOo2nwtTvXBw0AMTbLSAnvIa+Ph1Yv
      5Nn8QjoGBgMOi/lVjbdKqrGbjfS63FiNBpKi7PwhP/hT/PYz53n/ktmsz8vmRHUjHf2DRFnN
      vFoYPG1346xpFDe2sXRaKg6LmVcKyvnM5uX86PWDgRKwUBR4YNlcZqUmkOCw0djdT01HN385
      UTLyACDEeHoHh1iUm4vdbqerq4vpibGjfl7T0YPJoOeRDUupaO0iwmKiqr0bDY2WlhYiIq7P
      5jQTCgBdAy46+gf53cGCUatPP79lZdB2t8+fQVZCNBWtbz9lJTjs1HcFvymXt3Tyz/ds5EB5
      LZvm5PDAirmUNXUwMOQJ+GQ4KyWeeelJvFZ4buQm5/b6Av5xB5MYaQ86TzFcnmL0sbgIGzfN
      yh7Z92A8TvfYm+8dC2ZwpqE14KTweOW256QmEGu3cvB8XcBzefx+dhVXsqu4cuSY2aAP+HoY
      7tnMS0ukpr0bn6riVzXMBj3uEKuW/98tq+hzuUf+v85IjmP1jEzeKqkKGOCMeh1fv3M9fS43
      pU3tLMlOpdvpQq9T+MWbgfeZ8Kkq7QOD1Hb2cKyqERhek5Fit4bMjAKYnhjHnpIq2vqdNHT1
      EmO30tI7fqnf1dMzGHB7+P5Le9k8exptfU6MBj0PLJvL80fPhjyXmBpmLEiloaMar3vixSiP
      n6tmXpSTf/iHf6C/vx/PZQ8MMTYL/3LvZt4qreKVgnLmpCWguwHFKyc2BwD8/nAhERbzqABQ
      UBt8LP+1M+d4ZMPSUTfFafHRzE5LDNruxVOlvHiqFIB9ZdXYzEbsZlPQXkBKtAOTQc9nNi6j
      vX+Ql06VBlxcdamsuGiae/pHDcOEmjcYT69riP1lNVfc7khlw4Su81I1HT0h00fH88kNS/n9
      4dP0O8f/Ra5u7+bAuVoWZ6VQ1tQOQHpsVNCnf4AfvX6QD6+cj6ZpvHq6nJQoR9BACBBts1LT
      0cPvDxfyrbtvYm9ZNYfO1/G1O9ahCzKeeefCPPyqSozNwn3Lovjz8WIiLCZWTc8ImuJqNxv5
      ytY1JEZGsOPseXTKcJHC9iAFDWMjbCPfw5DPj8NqJr+ino2zsoN+NjG13PHwchIfzODX399B
      zQRHDFVV5bnnnkPTNG677Tb0sdPRKcqFPVR8fOX2tTx35AxHK4fTzVt7B8hNikOnKGRlZdHd
      fX32H5jwHEDTOBU1D4fIDhkY8vD0wYJRBcyaevpDDntcSmP4yflDK+YHrQWkaXC6rpmSxnbm
      pCbwhVtWUd3RzWunzwXNDvns5uV0OV0U1rewr6xmQjV6Ehw2Ns3O4fXCcyM3b59fDVoXCeDm
      udPpHBiksK5lZCgo2OQvDBeqm54Yy+6SypE5hMEQK6lheCL48qGji5lUgXj9KgW1zRTUvl2s
      r6qtC32I8fUhr4/fHixgXloin9+yEqvZGPT1MNzb0F945ClqbB3pcXn9KhpawJ5etM3Ci6dK
      6XO5+bvNy8lLjqdjIHRV2v96/SAKEGWz0Odyo1MUnj54OujakrdKq/jSbWto7O4jKy6a/3zt
      AHazkdILQUGEB5/Hz5wVmfzg2Y/zzO/O8dIEqqmYLRa++93vMjg4iN1u59tv7CZz1gLuWzaH
      H28/zNy0REwGA/ctnUOfy82PdxwerhLwub8h0j/ED3/4w2v/wXgXtYAm6vJaN26fP+guYgDf
      vXczbf2j/6hnJsXx3NGJZXmUNLVT0tRObmIs05NiR93QLlff1ceTbx5lRU46/3j7WgrrW9lx
      tgK3L3AgiLFbSYqy88kNS+gfGp43CFXTB4Y3yGno7uOWudM5eK6Wo1WN+ENkvaTHRpIYZefv
      b15FTUc3r54+F/TaLvrW+zZS2drJK6fL6XO98/TI5GgHt83L5bcHA2dgXVTU2Mb51k6mJ8WF
      fG3PoIvW3uH/xy+dGk4nNun1dDtdQSeBq9u7WZSZwv7yGp4+UMCXtq6hZAILzmLsVh5YNodo
      uxWfqjLk8fLXk6VB2zjdXv79lf2kREeM9Hydbu+oxAYxucxMjictxsGxqoYxQ656vYHFixcT
      ERHByZMnGVIgJzGWzLgoTtY0Bfw7ee6/92H9aCarbp3F6ttm8dIvg8/1AQy5hvi3f/s3bDYb
      PT09eJbdSk1HDz++UHfs3p8+N6bNr/aeIKaxFN/p/fj9fjCN3Z7yarvmAeCd6Ha6+OPRItov
      CQKfXL8kaJuy5uH9Ai5V0dYVdDjhIk2Do5UNHKtsYHlOGp/bsoJf7TvBQJCbemlTB7uLK8lN
      jOVTG5fR0T/Ii6dK6Q7yRO9VVV46VYaiKNw+P5dv3b2BPSVVHBlnonfk2oAjFfWUNXewJCuF
      r9+5jqLGNt4oPDfm816qs3+Q/Ip6HtmwBKfby5+OFwe9tosuLzfd3NM/oZv/RW6fn5LGNm6e
      m0NRQ1vAiXG/qrH97PlRxzx+P88cPh30/Q9X1JEZN1xyw+X18aPXD7JmRiZ1HcFrMP2/LSt4
      6mDByFxLUqSdz2xazn8FmQTWKQqf27ICq8lIekwkjd19uH1+/vet4xOu5iqun63zZ7A8J40z
      dS38+MHb+ezTr4xKuvjyA3fSf3IvHR0d5ObmYp01jU0rF3Gypon/+uCt/MOzb4w739XV1s9P
      vvIiK7bMZNmHNzPBfbTweDx4PFc2vNvvdGIKkhV4tU3KAPDbgwVkxkWNCgDnWzvx+QPnAQW6
      0XxgxdxRaxgud+mEtAYcq2ocmVyciIq2Ln70+kEyYiNZnJnMm6WBU04v8qsqrxae442z59mQ
      l01SZMS4Q2yXO1XbzKnaZuakJjAvPYnj1cGvs6q9m8d35JMVF80n1y9mYMjDbw6cwhvg92ta
      fDSf27KSpw8WUNLUPiZj6UqUNLbTewVDfRd94871/CDIGgy/qlHd/vb4qNevcvqSRWjjURQY
      9PhGTbS39jmp7+olwmLCHSAnYdPsaZyubebg+TrWzczC6fbQOzjER9cs5Nf7TgY+H28H0Wib
      hbgIK7UdvZN2j4mp4pZ50/naCzvxqyrpsVHMS0/kTP1wxYHUaAdmVy9PPvMMmqahqipf/sRn
      +fnuo7T2OXFYzCyflsbBIOt4ju05x/FiF6y4+3p9pGtuUgaAnsGhMUMqFxdYBXqeT4q0My0h
      lsu3S0l0BF9I8XLB2NXMs1LiqevsZTDA3EFbn3PMOHx9Vx/1Ico7HCivRbvkRuVXNd4KETDK
      mztwXjZJXDKBMWjtku+htrOHx7YfJsZuRQnSIzIbDewpqSQnMYb7l89l+9nzHKtsCJl+u3ZG
      Jg1dvaPShCcS0MYT7OYfyIzkeDw+38gf++U0bfgB4ht3raeytQsNyE2MpbG7j47+wYC/UzaT
      cWSy3ajTYTLoqWrv5i5T8DmOh9cu4neHTpMeE8nntqzk0PlaHtmwjO+++GbI4U/xzlW3d3P/
      sjnkV9QTY7eQHhs18juRHhvJ0rmz+c53vkNUVBRPPfUUjd193Lkwj90llSQ4bCFX8gP4Aj09
      XUZv0JExI4HOlj6GBj0EvnPdWJMyALwTsRE27l6Ux7aTo7NP3skz7Pz0JLqcroABYLwABfDA
      8rlBq6OOV5ZibloiqqZS2jT+attAtX9CnevpcYZthrzekPnrHv/w4r3XCs9x58I8/ul9N7Gn
      uJIjlYGL4y3PSWNmchwJDjsvF5RRFmCF8qXsZhPfvXcTzx8t4kSInsylLEYDHp9/1BP/RNq/
      XFDGzqIKkiLtgMJrp8uDDqEBvH7mHP94+zqcHi+xdiv/8ep+7GZj0EKBijI83wCwcno6//Pm
      Meq6eukeHGJeelLIVfDinfufN4/z/qWzuXtxHsYL80kXef0qLx44wgv/+S9ERUXxzW9+k6/s
      KuT2dau4a1EeVpNxQkOkE2WxmXj85U8D4HK6+eFzLo6dv3r1qrLiorCajJS3dIwpC6PX68nL
      y8PpdFJbO/zgnJ2djcFgoKJi9PzVlAkAZU3tNPf2U1jfMuomt2p6RtB2P/zgrbRc2Hv4ormp
      CewLkvoYYTYxM3nsROe0EOWgpyXEEGOzjDo2Ny2R0ubAT/QJDhsZ4yy4S44KvlBkvDUHdy2a
      xd7SKtp7QmcR+VWNlwvKeOV0GSlRjqCv9fj8PHWgAKNez4dXzeODK+ax7UQJRUEmZw06hTP1
      rcTYLHz33s3sL6+ZUPrt+5fOZll2KvvLa9l+9nzI4naXGvL6RvVS7lg4k91FlQT6Nvyqxn++
      dmDUMY/PHzQYahp4fD7mpCZQ29FDSrSDlr4Bbp03nce3By+NId69nKBjAAAgAElEQVQdRYE/
      Hy9Gr9Px5Mfu4kx9C9E2Cx6fn8q2Lj516xK2GY0YjUZcLhcK8EpBGXqdjh9+6FZOB0kWuVKq
      X6WlrpvoeDtWuxmTxQsBf9OuzBduWYXdbKLL6eIzm5bzj8/vGPmZ5UL2UXFxMVarlW3btnHP
      PfcQERGBoii43W6efPLtFcZTJgBowM93Hx3zxB8q9fHlgjIcFtOozI4PLJ8btI3FZOCTG5by
      h/zCUceDDa8AbJmdg9vno+KS8gOmEIuzUqId3LdsDq+FWOl6uY+vW4RRP/q952cksbc08E22
      sq2L2sty6TVtbCZXIF6/n2cOFWIxGtg6fwbdg64xZbMvpWoau4or2VNSxabZ0/jnezZy+Hxd
      0EDg9vp4fEc+sXYr37hzPedaOvnryZJ3NLRS29GDX7uycfm8lHjmpiUGXefwq30nuWthHnkp
      cTgsZjbPyeH3hwrpdV35nIiYuNmpCXxi3RIUZXge0en28r7FOTT19HOiuok/Flby/e9/H1VV
      +dWvfkXOqjv59PtuQ0Pj9cJzYzIP3w3XoIcv3P4bFJ1CRKSFvrmbISbzqrz3jKQ4vvL8djw+
      P489uBWzUc/F3+KbbrqJffv28frrrwNgMpnIzs7m29/+Noqi8Nhjj2EwGPBdyCScMgEAxh/u
      CTWRmV9RT3ps5Khjx6sbg6ZOdvQPcqyqgYrWrlET1UuyUoOe6/f5hTyyYSn5l6yfCFVKuqih
      jY2znBy7LGU01LnQhj/HpTnrDywLHtguloC+3MfWLuJ/3gq8Ovf4ZZPmQ17fyEK+iVA1jT0l
      VbxVWk32BDbV0TSNsw2tFDW2Mj89ib+/ZRU7iyoCzgEArM/L4kRV46hhn4tDclcyOnuupSNk
      NVu/X+VkTSOvXKiWu3xamtz8r4Mz9a189fntaGgjwyIvF5SP/Hz/qUJO/OwlNG14syRXVgdf
      fX47EPo+ccU0UFUNVI3erkHcLg/EXJ23fvbIGZ777AfoH/JwoLwGp9vLxYTRvLw8UlNTWbVq
      FV6vl5/+9KeYzWbmzJlDd3c3er2e+Ph4WlqGs+amVAB4J1RNo+6yuj7BVpRe9PvDhWOO/Wpf
      4D16YfjG+Mu9o2+kJ2uCj1+rmsaTe46NWS8Q6lzbTpawNDtt1BBJU0/fmCXpl0qNdnDnorwx
      qXChityNl400OyUBj99HZdv4Kxr7hzy8erp81DFV00JOHve53CNBStOG/+jP1reiC7GO/s6F
      M1mWnUZHv5OXC8ondEOOsVswGwy09A6wafY01s7IxOn28of84eqqgXxywxIMeh0RZjNdThed
      A4N8YPk8/unPu2QS+BoLdSNXL/s7uuo3/ncpfXo83dWGoGUn3r9kNl97YSe9riH+6a6bsJuN
      Iz0Ar9fLM888Q1lZGZs2beLOO+/k0Ucf5f7770dVVSIihktNXxT2AeCdGu8XZyLj0Zc/YU9k
      M5nx0gdDnat/yDOmCureEKUqupwuMmOjeHT7oVF/KJ8IsQYjJSqCCMvo6qTzM5I4H+RJWdW0
      cYeWPrpmIf8XJMXyrdLqMd+90aAnOSpiTCC/VH1nH0/uOcr0xFg+vWkZHf1OXjpVFnQl9ubZ
      OSM7oa2fmcW/vbwPh8XMR9Ys4Mk9gYcWHRYzP9mZz+rcDNbNyOKpA6dwebzMSU2koO7qjTO/
      l6REO8hJiMGo19HY3U9Fa/BqsZNJREQE7//wh1FVlRcPnxy1bkRRYGl2GosykznX0smhc7Xc
      NCubaLMBk+l9aJrG3r17J1yTbOXNeSy8N4onv/Uqnd3jB4F4h426zh68fhW/qhJhNqGPiaGv
      bYji4mKWL19OcXExTqcTVVXp7OzkySefJCoqihkzZkgAEOMb8vrYU1KJQaej85Kbc3OIp/J7
      l81hyDs6zz4l2hE0AFiMBj64Yt6YVc2XV0283HiB12ExsSY3k7rO4AXaNIbXbTz6+kGyE2K4
      e3EeLxwtCvjH2TngIi3aQW1HD50DgxfKgPtDLi406HUowJn6lpFNb6JslqDfx1T2wPK5xNit
      nK0f3nRp5fR07l06m0ffOMR7YWXEN774BV5/6hc4HA6+8uUv8529xSPBa/3MLBZkJLO/vJb7
      l83B6/MPp4nrFaytrXzxi19k7969Ez+ZorBobQ7/+tuP8sS/7GLsOAM8m3+G//zgrfj8KmXN
      7bT1O/n23/4tv37iJxw+fJiFCxfy3e9+F03TePzxx7n99ttZunQpVquVX/7yl6PeSwKAGGW8
      XkKwdFOAZw4V8vDahaO2chwIsTuX1+9nVko8T+w6MmpYKjU6eMbRHQtmsiwnlc6Bt5/c7SZj
      0Kd/gDOXbIKjMZwzfnFBWaDb+f7yGj6zaRnz0pOYn5HEJ9YtJiXaEXK18p6SKuxmEwNuz8jk
      vU5RxkywhwNFgez4aB5949DIsWNVjXxwxTzSYiKpb5v8dZVsXifHjg33+G7aeid2i4mBC6VB
      Dp+vH9ljY2VOGiaDfjj7zeNmhdPJ0aNH6e+f+JqYg68VszopmZmL0vnSY/fyiR+NHWrcU1LF
      3rJqdIoyMqLw6I9+hOIerkX2xBNPYDab8Xg8aJrGK6+8wq5du/B4PGOGwCQAiHetf8g9Zt3B
      qdrmUYveLudXNZ4/epbYCNuo9RGh5gBO1DSSmxTLz3e/vRFRXISVW+YG33D7wDgb4azJzeBU
      bXPAHoCqafzizePER9jYXVyJz6/S3NuPEmLaeLzaU6+Ms+AwHGjacM9ydW4GZc0dqKpKRmwU
      89ISx12EORkNGu088MADOJ1OZmZlYDr19pyXT1WxGg383eYVKAoculCiXadTePDBB/nJT35y
      Redqre/mB5/ex8e/cTOLbp4X8HV+VcMfZBDN7R79Wz00NP6clwQAcVVcvu5gIrVyxsvauVi2
      I9Attq3PyZulVaOqnQ56vBQ1Bs4AguE9Hi4fulmYmUJRQ1vI8dmOgcFRlV4/vm4RTx8M3gu4
      3ENrFrLtePEVVcK9lixGA0mRduq6eom2WpiVmkBhXcuEKs1eqV/tPcHG2dO4f9kcNE2j90L1
      y/dKPaUfPPY4q1Oj8Xq91La0jZp/sxgN/PsHbmFnUQXbz54fyT6amZFKb28v7e1X3sNx9g/x
      v//yOuvOtANLr9KnGJ8EAPGeU9QweoGZy+Mbc+xy/3zPRg6dr8N7yR9vZlzwHe3SYiJZmp06
      ZhI+1h48K+pSBp0Om9nIb/adnDSTnooC37xrA/VdvQwMucmMi6akqZ3Pb1nBo9sPhX6DK2TU
      61FQ+OvJUqKsZm6alU2M3Trh9SU3WmRkJAUFBeTm5tLj1XC6PSzMTKa0qZ2t82dQ1dbNyeom
      EiLs9A25cXt9fGzVfJ769hff8Tn9PpW9fz0DWyUACPGu/eV4CT6/f9QuarYQNX08Ph9rZmTy
      P5ctJswNMVG9cda0kX2bv7x1De19gxj1On6668ikSDs06HS09A7w630n+fyWFRyramBvWQ3Z
      8dHYTSZC76t2ZT61cRknaxp5ZMMSOgcG2Vdew4dXzufxHYcZ8l1ZtcwbYe7cuazbuoHe3l5+
      +rOfoc3fzNy0RCpbu+hyupiZHMfDaxcBsLOognMtHZyorKOxceIlTm4UCQAiLOwrqybqsjIc
      28+exxmkXG97/yDFDa009/SPyt/vDzLBrSiwOCuFvWXVbMjL5o9Hiyhpaue2+bnMTk0Ytx7U
      9aZpw0MXAIV1LVR3DE+GG/X6a1KxVNVU9pfXYjOZaOsboKK1izP1LaTHRlLReLXDzdX35ptv
      sr9xuHS5P254AeazF/au3l9eM+6OedtOlDDxfuKNM7HC1kK8x2mMLWnR3j8Ych3GM4cLxyze
      eupA4P0RNG243HeCwzZSxVUBUqMj6Zskq4F9qjqyeO/g+Toau/sx6HQ0dfddk3F5i9HI8mlp
      zL5QxjzWbmVxVgpNQcqEiOtDegBCXGVPHyzgkQ1LiY2wkhLtoLq9m1M1TSHLhV9Pl9a9T4+J
      xGY28sKxwPtmvBu/ePMYN8+ZznNHzhBts/DQ6gVsO1FyTSacxZWRACDEVXYxy+VSdrNx3H2a
      L6UojGSRGPU6FBQ812B3KL1O4dvv2ziS2ZQSFYHVZOREdSN/PFp01Ser+1zukTLtLb0DlDV3
      kBwVgU5R3hMLwaYyCQBCXAc3z53OierGgNVRU6MdzE1PZFdRJaumZ3D34jwGhjycqmliR9HV
      3YNYVTUau/to73fy8qky5qUnEW23jKyVuB7jwptn5/DiqVIGve98v2rx7kkAEOIqe3jtQhyX
      1Uaal5YUdOMavU43MjG7OjeDf/3rm/hUla/fuf6qBwAN+PW+kyzISOLrd66nsL6FAff1y8Yx
      6vU8e+TMdTufCEwCgBBXWe/gEBWtXRy5pOz3PUtmh2yXmxhHRmwkPr8fr19Fryhjdnu6ms7U
      t1Lc2MZnN6/gcEVd6AbAwoxkBtweqtq6uG1+Loqi8MaZ80HbfOzCFpkOi4nv3beFxu4+FBR+
      9MbBq/ExxLsgWUBCXGXbz1ZgMxnRYOSflt6BoBk2zT39HDhXw5oZmSMbkyRFRQTdfvJq8Ksa
      P9t9lFM1zcTYLUFfu2p6OjfNymbznBw+s2k5ep0OvU7HnQtnBm13sTe0KjeDZ/PP8Ogbh2jq
      6Rt3pztxfUkAEOIq8/j8Y3Y1O1JZP6qA3eV8qkpJYzsHz9XxwtEisuKiSYl2jCnpfS19eOUC
      DLrAt4TshBj+kF/I0wcLWJCRxGuF53i98Bzz0pOCvm9shJW85Dhi7daRfRSsJuM1meAWV0aG
      gISYBOxmE1/euoaWnn4Meh0+v0q/20NuUuxIfaRQLEbDO87jN+h0I9unBgoB/S43qdGRnG1o
      ZdvJ4R3fYuyWkJup//FYETOT44mz2+h1DWHQ63B5vLT2DgRtJ649CQBCTALZ8dHkV9Szu7iS
      f37fRv7j1f34VJUv3bYmaLsYm4VPrF+CUa/D7fMRabXQ0tPP0wdPB3zC1ikK7186m20nSkiK
      tPPVO9bRNeCivLljJF1zPG+VVpPgsAOwu7gSgPSYqJBVPcubOyhv7hh17EB5LSaDHs97ox7c
      lCUBQIhJoM/lZv3MLIobWomwmMiKj6atbyDokAzAh1bO59n8M7T2vf00vXFWNmtmZAYcPlIU
      Rm7k718ymx+9fpC2Pidf3roGq9EQsDqqTlHocg6vHZifnsSq3HS6B1yUNF15eYvVMzLYXVxF
      51Dw3oO4tiQACDEJ1Hf1UtXezb3L5vCTnfncsWAGKdEO/jDO3tOX8qsqNtPoP2OHxRx0q0sY
      3kMhKdKOyWgYGcIJlXF016I88ivq8PlV3r90Nv+9M5+chBjuXz6X548E3o3tX96/iW6nC/8l
      J5iTmsDu4qqAbcSVsTnMuNxXXldJAoAQk8TOogp2Xhju/7/9p1B4u2hbIM8dOctH1iwk1m7F
      6fYQZbNQ2tTOkcr6gG38qsaRyga2zJ2OyaBHVTUizCY6BwZxeX0B5wA0TUNjeA/mhq5e+lxu
      SpraWTsjM+g1nqppoq3PydFLMpo+tDLwZifiyi3dNIODfwq8T3UgEgCEmKQiLGYeWj2f/33r
      RMDXDLg9PJd/hkGPFw2NxMgIhjzekEXu3rwsS2nA7WF3cSXBtjveU1LFIzctpaC2mdToSFbk
      pHPz3JygT/8AO4oqxpTQLm5sxyW1gK6alTfnkf/XE/h9V1ZcQwKAEJOQ1WjA5fEGvfkDrJ2R
      ycZZ0xj0eChubGd2agKJkXae2HWElivMsrlj4Ux+d+g0geZlOwYGeXzHYRZmJnOypgmLUc+T
      e46F3NjF4/NT0jR6Z6yihuA7uIkrkzs/lbScOOrOtaMZTWgGc+hGSAAQYlKwmgzMTUsc+e9V
      0zNo6OqjqLGVitaugO0WZiTz2PZDTIuP5lMbl/GV57aTlxLPqunpvHhq/OwcnaLw/fu3jNl/
      eUZSXMjr9Pj8HK96u6RFrH14LqG1b+zm5eL60et1rLw5j7pz7XhzFuLLWx66UcW3JAAIMRkk
      Rzn4xp0b2HayhCGPlwSHDb+q0XphA5VAVDR0ikJ5SyelzR1oMFxF1Bd4kZWqaXQNDPJc/plR
      k8V/e9OVbz8Y77BhMxklAEwCy7fkse2Xh0O/8BKyEliISaC6vZuvvbCDpEg75S2d5Fc0sLOo
      gvyKwJO5AEcrG4ixW1E1jV/tHR4umpEcR0FdS9B2v9l/iqSoiFHHSpvaUUPMHVxqbloi51o6
      OR3iXOLaU1WNrJkJpOWE7sVdSnoAQkwSVe3dPLHrKHcvzmPjrGmc39UZsk1BbfOYY6+cLiNU
      Uf/uwSG6Lxu7P3Rhv+RAT4XLpqWybmYW2oV0ztW5meRX1LG/vHbc6xDXT+nJetZvyWbFzXlU
      7Jl4iW3pAQgxifhUlb+eLOV7L71FfVcvkdaJTeZd6p4ls0fNJ1wtOkUhzm7l1dPneP7IWU7X
      NvP8kbNjVvmK6+/wGyWoqsbKm2dhNOkn3E4CgBCTUOeAC4/Pz8NrFl1x2xdPllJ0DTafP1bV
      yOM78rl7UR6zUhLod3to7XNek60ddYrCptnTSImOwGTQ89E1C1k/M+uqn2eqOHukhp6OATJn
      JpCVF7w436VkCEiISSDBYeNjaxcz6Bm9MUtqjCNouyirGZvZNPLfn1i3mN8eLKBrYHDMZvZX
      Q5fTxU925rMhL4sZl+X2X00Pr11I7+AQD61agNvnZ395Launp9M5MDgmpVSAa8DN6YNVbL5v
      IfNXZVO2f2JBWQKAEJNAl9OF3WzkZ7uP4PW/vZjnc1tWBG335a1rsZmM1Hb2ALAgI4n7l83h
      5YIy6jp7r9n17i+vHdlCcl5a4lXvcViMBv5QeI5Yu5W/v2UVZ+pbcHm8LMxMlgAQQP6OUjbd
      uwCDUQ9IABDiPcOvarx4qpQEh52G7r6R4zUdPUHb/eDlfTy4aj6DHi9/PVmKpsHP9xy91pcL
      DM8z6xSF9XlZVz0A6BQddpOJtj4ney7UDEqJdtDcM/6eygLKTzXQ1dYPGCfcRgKAEJPEmfqx
      q2NfPV0etI3H7+fpQ6eZlRLPF25ZheMdTBpP1MZZ07hj4QxqL+lZKAwXpLva/nSsCN2FshQX
      q5p6/X4KJeU0oMEBN4WHqiEi+A5tl5IAIMQUUNbcQXV7N9MSYtDrFHSKMmoo6Wo4Xt3Aqtx0
      fr777R6GTlH4zKZlV/U8AIMeL/csmUVxYzu1Hd18dM1CWvucHK28tltkvtflby8l474ZE369
      ZAEJMUW4fX7KmjuYnhjL6tyMq/7+TreXPx4tGrVHgappHDw3sQ3lr8SDq+ZT3tzB0uwUPr1x
      Ga+ePodRr2NxVspVP9dUUnqyjvamic/9SA9AiPewNbkZZMRFcekC3rRoB2fqr81QSVV795hj
      Z69BYTeTQc/ZhlZqOnr44m2rqe3swaDXMT89iZM1TVf9fFPF0KCXM4erIW72hF4vAUCI9zCT
      QY9Bp2NnUeXIsRnJcVgME18MNBl5fCoxFzaRf+lCUbuchBgaL5kgF+Pr7hiACVaEkCEgId7D
      9pfX4vOrdAw4ae8f/qelpx/ne7zW/vNHz9LvGi5pcPGJv7Gn75r1bMKV9ACEeA9TNY0XjhWN
      OlbV3j3uUM17idPtGeeYF6vJGHSB28LMZO5eNAudAhFmEzUdPbxwrIjOgSvfLjEcSA9ACPGe
      kOCwYzMFznE3GfRsnT+D/3r9AP/x6n6qO7p57uhZPrlhCXpdkK3OwpgEACHEpBQfYcNqNKAo
      kJcST31n75hNbC6l1+nodg7XUFI1DfOFDe97BodC7q0cruRbEUJMOlvn5zI/Ixm/qlLZ1kWk
      xUxWfDRPHSgIOBE85PGiqhp/e9NS0mIi+cuJYgA6+wcZ8gba6DK8SQAQQkw6OYmx/PeOfNJj
      I/nclhV89fkdzE5JYGl2asAAoAG/3n+SaJsFt9eHQa8nxmZh28kSQIY7xiMBQAgx6Rh0OvR6
      heqO7pHNZoYngAM/yesUhbUzM0c2rJmeGIfVZOBoZQOnZcOacUlQFEJMOjuLKoiyWtA0+EP+
      GQAyYiM5Ud0YsI1ep/DJ9UuwmUz0uzwMejy4PN5xM4rEMOkBCCEmnbJxdhk7dL4Oq8kIuMY2
      ALx+lc/89mU+vm4xkVYz51s6sZtNnGsZ3lpT8oDGkh6AEOI9ITkqgukhNqHx+Pz8au8Jihpa
      eWTDUnSK3PaDkR6AEGLS+fTGZSRG2kdtXJ8cFcHu4sogrd5W1tzBl557A70EgKAkAAghJp1X
      Tpfz/iWz+cWbx0aOzUtLJM5hm/B7+PwqPuCrt6/l8R2H0UK2CD8SAIQQk05zTz/bz55HgZEb
      d2NPP53OKy/p8MSuI/hVTca7xyHfiRBiUqpu7x711N7tdNHcMxC0zZY5OXxu8woWZiSPHLtp
      VvaoPQzE2+RbEUJMCWaDnhU56fz2YAG3zc8lIzYKgKz4GGQqYHwSAIQQU4KiKPQMDjHo8fKz
      3Ud5ZMOSsKgBFGU1k5aWil4/eg+ICIuJKKuZKKuZSKsZRVFQFEiLiSTCYgJkDkAIMUW4vT4s
      Rj02k5FBj5ffHTrN1+5YR4TFfKMv7ZrZNHsaWxfMoCMFKstK2b59OwB6ReGhVQuIj7CBAqum
      Z/Dpp17i0xuXMeD2kJsYy4OP/6MEACHE1KAB//vWCXyqCgzvi/DD1w6QHO3A51en3EIwnaJw
      79LZ/OPzO9G99msU99sT5H5N45d7TwCQGu0g0mLBZNDj9vr58fbDxNqtw+9xQ65cCCGugUGP
      F88lG8a4fX7W5GZg0E+9W128w0ac3cYXb1vNP33tq8yYMWPc1z20egHPHilkyOsjKSqCCLNp
      ZE5EegBCiClBpyjcsXAmPv/oHcNmpybcoCu6tgw6Hc29A/xq7wkSTrzGlz77Wb761a+Oek1i
      pJ3kKAdn6lsBeKu0iq/fuZ6+ITf/9CMJAEKIKWTLnBx+8eYx/OrbCaRz05Nu4BVdO239TixG
      AwNDHtyNDbjdbvR6PWaTiYs1Uz+8cj5/PHZ2pM2rheW8crqcaQkxgAQAIcQUoWoaTx8sINpm
      4VjV21VD2/ucN/Cqrh2fX2XH2fP88EO34l+exrFjR3E4HHzm05/gn3cV4LCYSY12cPxCBVW9
      ovCVO9aiV3RkxEXx4PckAAghppDTdS1jjv3u0Glgak54vnK6nN0llUS89RzOznYAvvuzX0Le
      cvqH3HzjT7tGXuvXNH78xmGibRY6B4YnjCUACCHEe5jL44MB54SynHyqSsfA29lCUzEoCiGE
      mAAJAEIIEaYkAAghRJiSACCEEGFKAoAQQoQpCQBCCBGmJAAIIUSYkgAghBBhSgKAEEKEKQkA
      QggRpiQACCFEmJJaQEKIsGY1GvjUxmW4fT52F1fx0TUL8KsaP95+mEGP90Zf3jUlAUAIEdZu
      nZ/L/vIael1u/t/NK/n6CztJiorggyvm8duDBTf68q4pGQISQoQ1u8lEa+8AbX1OOgcGhytm
      9juxmoI/H39l6xq2zMnBpNdfpyu9+qQHIIQIa4fO1/H3t6yi1+Wmur2bj69dRHZCDH8+Xhy0
      ncev4ldVvn7Xeo5WNrC3tBrPZdtRTnYSAIQQYa22s4fvv7QXVdPw+PzkJsWxs6iC5t6BoO1U
      VWNvWQ37y2tZNT2dL9++hvLmDl4+VUawMPDA8rmkRDt4/sgZHl6ziAiLiZ/tPkqX03V1P9gE
      SAAQQoS1WSnxON1eGrp7+fSm5ViMeixGI08dOEVbkO0kNYb3HVY1jcMV9RyuqGdeWiIGvS5g
      AFiUmYymaTx35Azfu28L3/nLHlRN46HVC/jZ7qMBz6XXKSP7HM9KiWduWiJHKupp7Ol/x58b
      ZA5ACBHmVuVmMOjxEGW1oFPgv3ce4ae7jnDv0tlB2/352NtDRDpFwWYyUtTYhtsX+Pk/wWGn
      vKWDjv5Bmrr76HS66HK60CnB9/P60m1r0CkK0xJiuHfpHI5XN/Lw2kWkRjuu7MNeRnoAQoiw
      1tjVR15KAmfrW4e3VwRSoiJCp4AqkHLhBhwfYWN1bgYvF5TR1udEDdDkWFUD337fRlp6+2nt
      HeDjaxdhMRmo6egJeipNG+5pLMhI4vmjZ6nr7GX72fNMT4yl6V30AiQACCHC2pulVXx0zUJW
      5KQxPz2JeIcNr98fdEgG4LEPb2VvWTVdThdRVgvTk2JZNi2NnUUVeAK06XW5+c62PZiNBnoG
      h8iOj8ZsMFDe0hH0XGXN7Ty8ZiGnaptZkJEEGty3bA6PvnHoHX7qYRIAhBBhza9qPH3wNHpF
      QadT0LThzdND+fvfv8bCzGQyYqM4VduE0+Ph1dPlQdvEO2xsmZNDTXsP0TYLO4oqALhnySxe
      OlUWsN1rhefISYhhUVYKOkVhQUYSP95+mD6X+8o+7GUkAAghBODXNPz+4YnWNbmZ2M1GdhVX
      Bnx9z+AQ+8pqcFhM/M36JRMailmUmUJRQxvFjW18dvNyZiTFcb61k/SYqJBtq9q7qWrvHvnv
      DXnZtPb2U97SOYFPNz4JAEIIcZnDFXUTfm3/kIcndh1BrwudU9PQ1cuMpDiKG9t46kAB/3jH
      On5/uDBku3Uzs0iJjhh1bG5qIi8cK5rwdY5HAoAQIqwZdDo+vGo+GbGRJEVF0NjdT1FDK2+c
      OT/h99AYHjb6yta1/O/e4wx4xh+aKWvuIDMuCkWBIa+P/96Zz4dWzKPLORj0/bPjo9E0jeLG
      tpFj0VbLhK8vEAkAQoiwtmVuDrWdPTybf4b7lg2nWE5PiOG2+bnsOFtxRe/12PbQk7I7i94e
      VupzufnVvpMh2/z5eDEPrVrA6bqWkWMOixn/BOYqgpEAIIQIa/ERNt4sqULVNAbdHmwmI/vL
      a/nM5uVBA0BKtIMHV83HqNcTY7dQ39nLi6fKaOzuu6LzZ8dHc9OsaTwdpPDckNfHbw6cGnXs
      SGU9qqZd0bkuJwvBhBBh7a3Saj66ZiEfWb2ARVkpnG/pJBcJ224AAAQxSURBVNZupaypPWi7
      j65ZyO8PF/LoG4do7O7n2fwzPLR6AVbjlT1X13T0BL35B3LL3Fxi7NYrbncp6QEIIcJaU08/
      T+w+SqzdSlufE5+q0tbvZE9JVcA2igJ+VaWtz4kCGHQK3YNDlDS2kRoTSaUzcAmJ9TOzWDsj
      E7vZhNPjobCuhZ1FFSOlHiaqoK6ZfkkDFUKId2fI67uiFbWaBvWdvXxs7SLsZiMVbV0AWIxG
      moO8z6yUeHKTYnn8/7d3d69t1XEcxz95Oumptl1pOxuD21rZZjofRreCDyAolIkwpIh/hoJe
      eOGNCOKdeCN6I3jp8IGJu5CiK3M+bN26dbqWiMy06do1aaPp8tAkTXLixeCwZSwZHQw5v/fr
      7iQnkLs3v9+P8z2Tv2lsOKpqzVEo6NfEoZG200eHB3oVe3hAAb9fqet5zSZXVa3f2xkAW0AA
      sA1fnZ/XD3NXdPxCXCdmbzwA9s3MfMsRErv6ejSzcE2VWl3ZYlndnWH98teSor2tZ/q8/OQ+
      HXlirxLrWY3uiajH7tAb48/ICt7buwhYAQDANrUbGd3szJWren38ae3u36HDQ1F9cnJanVZI
      6RZTRyVpf6RPH02ekSSt5YqaiidUqlZ1cNegziVWtv3/CQAA3Cf58pY+/P5X7env1an4ggqV
      G1ODjp293PJ3lWpdQ/07dL1U0UDXA3IaDYWDQRXKd5o6dHcIAADcR5Vave3wt2afnb6gVw+P
      qNvu0KdT59RoSH9cTeufQusHyNohAADwP7dVq+uLplXCer71ttHd4BAYAAxFAADAAF0dlmzr
      1k0ftoAAwIOsQECx6IB7Pbo7olypot+XUu5zC6wAAMCDuu2w3jzyrCI9XXowbMm2QuoMh2Rb
      IfceAgAAHpQpbOrtY5PaN9gnv8+nueW0LiVTurycdu8hAADgUWv5oj7+cVoBv0+vjT1+2/ec
      AQCAhzmNhk79uaiVbE75pgfHCAAAeJBtBfVCbNi9PhDdqUK5otnkqs7+vSyJLSAA8CQ7FNL4
      gUeVK5UVX1lTMrOhxHpWi5kN9x4CAAAe9G+xpHePT2nvQ30aie5UprCpa9m8UjcNsCMAAOBR
      uVJFn/88q3SuqKMH96ve9ApJzgAAwONmFlY0t5y+7a1jrAAAwADlak1SQ+8cfd79jAAAgCGq
      dUcfnDjtXhMAAPCgHjus9yZe1GORfvnucA8BAAAPCgUCWsxsaGwoqrdeek5PPTIoX1MJOAQG
      AI8qbm3py+k5hQJ+vTIa08ShmL69GNelpZQkVgAA4HnVuqOvz8/r/e9+kv+mZQABAAAP2tgs
      6+R84pbPao6ji8lV95oAAIAH1Ryn7UvjCQAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAA
      GIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAICh/gMHTbAP6LfobAAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='384' name='Q 3 Average Land Temperature in Countries' width='384'>
      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
      A7nGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Q 4 State Temperature Change' width='384'>
      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
      AV6/fo2PP/6Yc2aY1WrF+Pg4rl27hu9973tOvw89NTUVVqsVCxcuBDAxdj9//nzOWUMRERHo
      7OzEr3/9a1itVvj7+7NOOoiJiUF+fj4FACFkgto7FN5ObvQPtdcwAeA/bz38EtZw1o50NqDu
      5ucAAL+ENfCft56zVt/9DrXX/wsAoPIKgcaX/RvFgIlhs74G9qt7B7vd/t4z2ex2O+cMo/Hx
      cabBN5vNToeW6uvrmdqXL1+ioqKC8+n0x48fIzY2Fu3t7cjPz0dmZiaztMp0UqkUdXV1ePbs
      GT799FOcOHGCcxvmzZuHwMBAuLu7486dO9DpdEhNTWWdmtvW1obQ0FAKAELIXw61dzgC5m/k
      /PloXxsTANqoVKe1Y0PdTLB4RixEYMpmztpxfT9qrkzcF5FptFB7cy8lYbOYMNDM/sS1g91u
      dzot2DHzyWQysd4ncHjy5AmSkpKg0+lw9OhRbN26lXPhShcXF5SXl6Onpwcff/wxvvrqK87X
      bWhomFgexum7IISQv1BCkdjpysIi6bf3PgSz1FrGv50yqvYOQ+iyXZy1ptFBJgBcAmIQuCCT
      +3VNRtTd+C0AQCxXO12uxm63YaRz6owgo9HIzJYyGAxOewBlZWVYuHAhdDodTp06hd27d3Mu
      zR0cHIy1a9dSABBCyP+UWKqAwp37IU3z2LdP5Ku9wxCxcj9nrdU0hpen/j8AgFAsg1TNvfAc
      7HaMDU1d7np0dJR5yn1oaAh5eXmcvx4WFobCwkIKAEII+Uuj8QnHnDXf4/y5zWrBi+M/mfiD
      QOh0DTIAsJqmLiVSWVmJtLQ0CgBCCPnfTOMbgai1f+u0piz//0z5s2O5kb+a7wMghBDyh6Ee
      ACGE8ITSMxBh6XuYP1MAEEIITwhFEsg1334rHw0BEUIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EAEEIIT1EA
      EEIIT1EAEEIIT4mn/4VIJIJEIoFAIHD6i3K5HBKJBGLxjJeY+Y+IxVAoFLDb7RAKnGeOSCSC
      QqGAxWKBUOi8ViaTQSKRQCKRzLoNIpEISqUSVqsVQqFo1lq5XA6r1QqRyHmtVCqFRCKBTCab
      dRuEQiFUKhXMZjNEIuefm1gkgkwmg91uh2iWz9jxGchksln3m0AggFqtxvj4OCRi55+bSCSC
      VCqFQCCYfXvFYuazmG2/Afh2GyTSWbfhffeF7Jt/Xyp1/poAIPzmeLBYLBDP8rqOfWGz2Wbd
      hsn7ArPsC6FQAJVKBZPJNOt55NgXjv93ur1iMfM5zLovBJP3xezHg2P/zvaZObZXLBbPur0A
      mM9BJpvleBAKIZFIIBKJZn1doVAImUw2sb3v0U4plUqYzWbI5HKndQKBgGn7ZtsGgUDAtH3v
      00452j65QuH8dfHtsTbbvgDAtH3Tzw2B3W63A8CmTZtQWVmJnTt34uXLl3D3C0f/wAAAwN3d
      Hd3d3dBqtRgZGYHFYkFUqD8a694gJCQErT0jGDeZ4evrh44OHdzc3GAymWEwjCIgIAA97e/g
      5+0Bi8WCzsEx+Pr5o729HWq1BkKhAMPDwwgICEB7eztcFCJo3TRoa2uDT0g02tp1kMvlUCgU
      6O/vh6+vL3p6eiAWixHg7Y62dw2IiorCm7c6CMVSuLm5oaenG1qtF4aHh2G1WqHVeqKvsxXh
      wf7o7+/HiEkID60XOjo64O7mjnHTOAwGA7MNnq5KyIQ29Pb2IiA8Fk3NrdBoNBBAgOGRb7dV
      pVLDXSNDd3szEhMT8fTlG6hc3CGXyzEw0A9fXz90d3dDKpFApVZhoKcDc6PC8O7dO0CmgVyp
      QU9PD7y8vDA0NASbzQZPD090dXfBV+sOs2EQRqMRXgFhaG7rgLu7B8bGxmA0GuHv7w+drh2u
      rm6QiewY7GlHYmIinlW8gYu7FwA7RkZGmG1Vq9UQiUQY6utGSlIsKisr4eLpByvEGBgcgJ+f
      H7o6uyCVSaFUqtDf34cgfx8MdLVCIpFA4aKFrrsPXl7eGBwchN1uh4fHxHHh6amFZdwAi2EA
      kZGRqHhdD3cvPxiNRoyNjcHP1w+6b44Ls9mM4cE+LJ4Xh8rKSmj9gjFsMEOv/3ZbNRoXuLho
      0N7eDg+NAkqpAN3d3fAPi8W7llao1WoIhSIMDw8xv6NUquDpqkBX2zvEx8ejrKoeCrULlMqJ
      48bHxxe9vRPHjUajQX+3DnGRoWhpaYFNrIJS4zrjGNdqvdDV1QkfT1fYxvUYGRmBb3Ak3rW2
      w83NHSaTiTnG29vb4eLiCoVEgIHuNuZ4cHXXQjDtGFepVJBIJBjs7UJyYgyqq6uhcveBXSj9
      5rjxRXd3DyQSCdRqNfr6ehHo542hnnYIhUKo3X3Q3tXLHOM2qxWeWk90dXXB08MTNssYxoZ7
      ERMTg5ev6uCm9cX4+DfHuH8A2nXtcHV1hdVixfBgHxbNmzgePH2DoB+zYmTaMS4WizE0NIiw
      kCC0v30Dd3d32MUKdPcPf3OMd0EqlUKlUqGvrw8+Pj4YGRqA1D4Gf39/1Da2wMMnAEODQ7DZ
      7fDw8EB3dxc8PT2h149i3KjHvNhwvH79Gn5B4ege0H9zjPtBp9PB1dUNFosZo6OjCA0OhK6p
      Br6+vhgxmjGgH596jAtFGPrmuOjq1EGrlkClUqFF1w2tXzA6O7sgk8mgVCrR39/3zXHRC6HA
      jjmBWjQ2NiIkIgrv2ns42z4fb2/0ttUjJCQEHd19GDULONu+Dp0OQV5qWCwW9A4MQ+sfytn2
      KRUK+LrJ0NbWhqiYuXjV0MLZ9mk0Ggx3vUNUVBTqG9/BJlFztn1dXV2ICtKiv78fxnELXLwC
      mLZvRgAsX74cjx49mjVRCCGE/O9G9wAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      IYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAIIYSnKAAI
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Q 5 Warmest and coldest temperature of cities by country' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Q 6 Temp change by Long and Latitude' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Q 7The temprature chage with the decade' width='384'>
      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
      MQCIiCSKAUBEJFEMACIiiWIAEBFJFAOAiEiiGABERBLFACAikigGABGRRDEAiIgkigFARCRR
      DAAiIoliABARSRQDgIhIohgAREQSxQAgIpIoBgARkUQxAIiIJIoBQEQkUQwAIiKJYgAQEUkU
      A4CISKIYAEREEsUAICKSKAYAEZFEMQCIiCSKAUBEJFEMACIiiWIAEBFJFAOAiEiiGABERBLF
      ACAikigGABGRRDEAiIgkigFARCRRDAAiIoliABARSRQDgIhIohgAREQSxQAgIpIoBgARkUQx
      AIiIJIoBQEQkUQwAIiKJYgAQEUkUA4CISKIYAEREEsUAICKSKAYAEZFEMQCIiCSKAUBEJFEM
      ACIiiWIAEBFJFAOAiEiiGABERBLFACAikigGABGRRDEAiIgkigFARCRRDAAiIoliABARSRQD
      gIhIohgAREQSxQAgIpIoBgARkUQxAIiIJIoBQEQkUQwAIiKJYgAQEUkUA4CISKIYAEREEsUA
      ICKSKAYAEZFEMQCIiCSKAUBEJFEMACIiiWIAEBFJFAOAiEiiGABERBLFACAikigGABGRRDEA
      iIgkigFARCRRDAAiIoliABARSRQDgIhIohgAREQSxQAgIpIoBgARkUQxAIiIJIoBQEQkUQwA
      IiKJYgAQEUkUA4CISKIYAEREEsUAICKSKAYAEZFEMQCIiCSKAUBEJFEMACIiifr/AePn98Sv
      SaUbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Q 8 Major Cities showing most prominent warming trend of temperature' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daXAUV542+qdUi6pU2vd93yWQhASIRQsSEkgYMGY3Brtf90xPzJ2Z6J7u
      6L5x3/BM3Dsdb9+OnpiZnhv9jsd2222MMd6NMUZiMbvZV4MsIQntC9pLa5VqyftBrhwwlVlF
      D7a7nc/vE3b9XU4qq85z8pyTJ1WCIAggIiLF8fquD4CIiL4bGucffvzjH6O5ufm7PBYiIvoW
      iQFw584d3Lx587s8FiIi+hZpvv4vFi1aBL1e/10cCxERfYseCgCdTodTp059F8dCRETfIk4C
      ExEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgA
      REQKxQAgIlIoBgARkUIxAIiIFOqh7aCdVFqt7H8o2GwAHydMRPRnSzIAkv/5RaiNvpL/Ye+L
      /4bJy+e+kYMiIqJvHoeAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKJbkM9FH45ubJ
      3jdg7miDdWT4cfyviIjoMXksARD7/F9BGxgk+XrXy/8bY5+fehz/KyIiekw4BEREpFAMACIi
      hWIAEBEpFAOAiEihGABERArFACAiUqjHsgz0Uag0WkAl/bpgtwMOx7d3QERECvWtB0Du//vP
      8A4Ll3y9/bWXMXTis2/xiIiIlIlDQERECsUAICJSKAYAEZFCMQCIiBTqW58EfhSRq1ZD4+cn
      +frY9WuYbGn5Fo+IiOj74086ACIqKmGIjpF83TY+LgZA7j/+PzDGx0vWdr77NvrqDgEAcv7n
      C/BNTpGs7froA/Qe+PiPPGoioj8Pf9IB8Ci8tBp46XSSr6u81P/1Z43ntX7p6dD4Sl+FmPv7
      MNPb+4hHS0T03fveBMA3JX7zFgRkZUu+3r3/I3S++863eERERI8HA+Axilm7TnYYavT6NQye
      PQsA0BiN8NJKX4XYLWbYZ2Ye+zESETkxAB6jgKwsBM2fL/n67OiIGABpf/kjhBQWStb2HjmM
      u6+//tiPkYjIiQHwZyDzb/8WYcXFkq/3Hz+O5lde+RaPiIi+DxgA3zMpO3cidNEiydeHLl1C
      6+7dAADf5GQYwqX3ZbKMjGD8zp3HfoxE9KeBAfA9ozEa4R0cLPu6U9SKFYiqqJCsHbxwQQyA
      2Npa2auQ8aYmtL75JgAgproa4cuXS9b21Ndj4KuhsIwf/Qg+MdJLffuOHUP/yZMAAGN8PDQ+
      Bsla89AwLENDkq8T0YMYAOQRfWgo/FOk752wmkzin71DQmRrBwMDxT/7REfL1g5fvSr+OfXZ
      XQjMypKs7fjwQ7S/+x4AQBcYKLvU1zY9DdvkpOTrRErAAKDvpcy/+isEz58n+XrnJ5/g7t63
      AADRlZUwxsdJ1o41fInBCxce+zESfdcYAKR4wfn5CC1cIPm64HAwAOh7iQFA9Agyf/QXCCuS
      Xr7bf/oMmnfvAQAEZGbAJyJCsnb63j2YGpse+zESeYoBQPQINHo9tL6+kq97eXuLf46pWIHI
      EunJ8L7TZ8QAMMbEwDtEevJ+dsyEyc5OAHPzJvrQEOna8XFMtndIvk7kxAAg+hMQV7saMRUr
      JF+/d/4Cbv32/wMAxFavRNyqasnawStXcfOf/wUAEF1RjgiZZcHjbe1ofZtbmSgVA4Doe8wY
      FYWQPOm706FSfXsHQ39y+EAYIiKF4hUAEQEAkjduQNL6tZKvjzU24cr/+vW3eET0TWMAEBEA
      wEuthlruORlarfjnuOqVSKytkayd6OjE9X/97WM9Pnr8GABE9Mi0RiN8IqWXuM5OToh/1gUE
      QC+zwskxO4vJ7p7HenzkGQYAEX2jokuXIfOZ7ZKvj7d34vNf/E8AgNrbW3a/J8HuwOz4+GM/
      RqViABDRn4zYFaXI/sEuydcne3tx+ie/+BaP6PuNAUBEf5b84mMRKrPfk216Bl2fnfj2DujP
      EAOAiP4sBaalImvX05KvTw8OigFgCAtFYFqqZK3DOot7l+Z2ntWHBCMoI12yVrDZ0H/x8h93
      0H9iGABE9L0XnJWB/L/5K8nXLWNjYgAEpadiwY//D8la69TU9yYAeCMYEZFC8QqAiOiPpVLB
      SyPfjDqs1m/pYB4dA4CI6I8UUZiPxb/4e8nX7bOzOLjj+W/xiB4NA4CI6FsQmpOFhT/7W+kC
      ATj0P/4aABCckYbF/+dPZN+v7i/+DoLN9t86JgYAEdG3QKVRQyfzLAlBEP6r1stLthYAVAAE
      AP7xsSj68V/L1p78v/5v2M0WaPR6BGf812ooBgAR0Z8xtbcO/vGxsjUq1dx6H5+IMCx94efi
      v+cqICIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABAR
      KRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERE
      CsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGR
      QjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESk
      UAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEp
      FAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQK
      xQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFC
      MQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQ
      DAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkU
      A4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArF
      ACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIx
      AIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAM
      ACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQD
      gIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUA
      ICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEA
      iIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwA
      IiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOA
      iEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAg
      IlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCI
      iBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAi
      IoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CI
      SKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAi
      UigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiI
      FIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIi
      hWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhI
      oRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJS
      KAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgU
      igFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUJpvv4vgoODsXz5ckSFBsFL
      r5f8DxPm52JGrwYAxIWFQG00StbG5OZg0ssBAEgKC4UmwF+yNiI7GybbLAAgOTwcOpnasMxM
      jE5Pzb1vZAT0MrXhmRkYHh8DACRGRcEgdwzp6UhavhwAkBAdDaO/TG1qKuKdtTExsrWRKSmI
      /ao2Pi4WfjK1UcnJiP6qNi4+HgEytdFJSYj4qjY2IQFBcrUJCQj7qjYmKQnBMrWm+HiEfFUb
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
